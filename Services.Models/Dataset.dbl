;;*****************************************************************************
;;
;; Title:       Dataset.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure DATASET.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace Services.Models

    {Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptIn)}
    public partial class Dataset extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strDataset
        private mOriginalSynergyData, strDataset
        protected mGlobalRFA  ,a10

        private static sMetadata, @DatasetMetadata

.region "Constructors"

        static method Dataset
        proc
            sMetadata = new DatasetMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Dataset), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Dataset
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Dataset
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Key}
        {Range(0,999999999999999999, ErrorMessage=" must be between 0 and 999999999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Dkey, long
            method get
            proc
                mreturn (long)mSynergyData.dkey
            endmethod
            method set
            proc
                mSynergyData.dkey = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Idkey, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.idkey, ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.idkey = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(28, ErrorMessage=" cannot exceed 28 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Akey, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.akey, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.akey = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9, ErrorMessage=" must be between 0 and 9. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D1, int
            method get
            proc
                mreturn (int)mSynergyData.d_1
            endmethod
            method set
            proc
                mSynergyData.d_1 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99, ErrorMessage=" must be between 0 and 99. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D2, int
            method get
            proc
                mreturn (int)mSynergyData.d_2
            endmethod
            method set
            proc
                mSynergyData.d_2 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999, ErrorMessage=" must be between 0 and 999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D3, int
            method get
            proc
                mreturn (int)mSynergyData.d_3
            endmethod
            method set
            proc
                mSynergyData.d_3 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999, ErrorMessage=" must be between 0 and 9999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D4, int
            method get
            proc
                mreturn (int)mSynergyData.d_4
            endmethod
            method set
            proc
                mSynergyData.d_4 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999, ErrorMessage=" must be between 0 and 99999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D5, int
            method get
            proc
                mreturn (int)mSynergyData.d_5
            endmethod
            method set
            proc
                mSynergyData.d_5 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999, ErrorMessage=" must be between 0 and 999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D6, int
            method get
            proc
                mreturn (int)mSynergyData.d_6
            endmethod
            method set
            proc
                mSynergyData.d_6 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D7, int
            method get
            proc
                mreturn (int)mSynergyData.d_7
            endmethod
            method set
            proc
                mSynergyData.d_7 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999, ErrorMessage=" must be between 0 and 99999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D8, int
            method get
            proc
                mreturn (int)mSynergyData.d_8
            endmethod
            method set
            proc
                mSynergyData.d_8 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999, ErrorMessage=" must be between 0 and 999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D9, int
            method get
            proc
                mreturn (int)mSynergyData.d_9
            endmethod
            method set
            proc
                mSynergyData.d_9 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999999, ErrorMessage=" must be between 0 and 9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D10, long
            method get
            proc
                mreturn (long)mSynergyData.d_10
            endmethod
            method set
            proc
                mSynergyData.d_10 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999999, ErrorMessage=" must be between 0 and 99999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D11, long
            method get
            proc
                mreturn (long)mSynergyData.d_11
            endmethod
            method set
            proc
                mSynergyData.d_11 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999, ErrorMessage=" must be between 0 and 999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D12, long
            method get
            proc
                mreturn (long)mSynergyData.d_12
            endmethod
            method set
            proc
                mSynergyData.d_12 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999999999, ErrorMessage=" must be between 0 and 9999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D13, long
            method get
            proc
                mreturn (long)mSynergyData.d_13
            endmethod
            method set
            proc
                mSynergyData.d_13 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999999999, ErrorMessage=" must be between 0 and 99999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D14, long
            method get
            proc
                mreturn (long)mSynergyData.d_14
            endmethod
            method set
            proc
                mSynergyData.d_14 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999, ErrorMessage=" must be between 0 and 999999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D15, long
            method get
            proc
                mreturn (long)mSynergyData.d_15
            endmethod
            method set
            proc
                mSynergyData.d_15 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999999999999, ErrorMessage=" must be between 0 and 9999999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D16, long
            method get
            proc
                mreturn (long)mSynergyData.d_16
            endmethod
            method set
            proc
                mSynergyData.d_16 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999999999999, ErrorMessage=" must be between 0 and 99999999999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property D17, long
            method get
            proc
                mreturn (long)mSynergyData.d_17
            endmethod
            method set
            proc
                mSynergyData.d_17 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9.9, ErrorMessage=" must be between 0 and 9.9. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id21, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_21, ^null, "DECIMALPLACES#1", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_21 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9.99, ErrorMessage=" must be between 0 and 9.99. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id32, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_32, ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_32 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99.99, ErrorMessage=" must be between 0 and 99.99. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id42, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_42, ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_42 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999.99, ErrorMessage=" must be between 0 and 999.99. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id52, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_52, ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_52 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999.99, ErrorMessage=" must be between 0 and 999999.99. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id82, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_82, ^null, "DECIMALPLACES#2", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_82 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999.9999, ErrorMessage=" must be between 0 and 9999.9999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id84, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_84, ^null, "DECIMALPLACES#4", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_84 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999.9999, ErrorMessage=" must be between 0 and 999999.9999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id104, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_104, ^null, "DECIMALPLACES#4", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_104 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999.9999, ErrorMessage=" must be between 0 and 99999999.9999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id124, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_124, ^null, "DECIMALPLACES#4", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_124 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999.999999, ErrorMessage=" must be between 0 and 999999999999.999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id186, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_186, ^null, "DECIMALPLACES#6", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_186 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999999999.999999, ErrorMessage=" must be between 0 and 99999999999999.999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id206, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_206, ^null, "DECIMALPLACES#6", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_206 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999999999999.9999999, ErrorMessage=" must be between 0 and 9999999999999999.9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id237, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_237, ^null, "DECIMALPLACES#7", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_237 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.99999999, ErrorMessage=" must be between 0 and 999999999999999999.99999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Id268, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.id_268, ^null, "DECIMALPLACES#8", ^null)
            endmethod
            method set
            proc
                mSynergyData.id_268 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property I1, int
            method get
            proc
                mreturn (int)mSynergyData.i_1
            endmethod
            method set
            proc
                mSynergyData.i_1 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property I2, int
            method get
            proc
                mreturn (int)mSynergyData.i_2
            endmethod
            method set
            proc
                mSynergyData.i_2 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property I4, int
            method get
            proc
                mreturn (int)mSynergyData.i_4
            endmethod
            method set
            proc
                mSynergyData.i_4 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property I8, long
            method get
            proc
                mreturn (long)mSynergyData.i_8
            endmethod
            method set
            proc
                mSynergyData.i_8 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yymmdd, DateTime
            method get
            proc
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.yymmdd, ^null, "YYMMDD", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.yymmdd, "YYMMDD", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yyyymmdd, DateTime
            method get
            proc
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.yyyymmdd, ^null, "YYYYMMDD", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.yyyymmdd, "YYYYMMDD", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yyjjj, DateTime
            method get
            proc
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.yyjjj, ^null, "YYJJJ", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.yyjjj, "YYJJJ", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yyyyjjj, DateTime
            method get
            proc
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.yyyyjjj, ^null, "YYYYJJJ", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.yyyyjjj, "YYYYJJJ", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yypp, string
            method get
            proc
                mreturn %string(mSynergyData.yypp,"XX/XX")
            endmethod
            method set
            proc
                mSynergyData.yypp = SynergyDecimalConverter.ConvertBack(value,"XX/XX")
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yyyypp, string
            method get
            proc
                mreturn %string(mSynergyData.yyyypp,"XXXX/XX")
            endmethod
            method set
            proc
                mSynergyData.yyyypp = SynergyDecimalConverter.ConvertBack(value,"XXXX/XX")
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Mmddyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.mmddyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.mmddyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Mmddyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.mmddyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.mmddyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ddmmyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ddmmyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ddmmyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ddmmyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ddmmyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ddmmyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Jjjjjj, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.jjjjjj, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.jjjjjj = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Jjjyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.jjjyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.jjjyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Jjjyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.jjjyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.jjjyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ppyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ppyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ppyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ppyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ppyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ppyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Monddyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.monddyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.monddyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Monddyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.monddyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.monddyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ddmonyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ddmonyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ddmonyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Ddmonyyyy, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ddmonyyyy, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ddmonyyyy = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yymondd, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.yymondd, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.yymondd = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Yyyymondd, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.yyyymondd, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.yyyymondd = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Hhmmss, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.hhmmss,"XX:XX:XX"))
            endmethod
            method set
            proc
                SynergyConverter.ConvertBack(value, mSynergyData.hhmmss, "HHMMSS", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Hhmm, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.hhmm,"XX:XX"))
            endmethod
            method set
            proc
                SynergyConverter.ConvertBack(value, mSynergyData.hhmm, "HHMM", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Binary10, String
            method get
            proc
                mreturn Convert.ToBase64String(([#]byte)mSynergyData.binary10)
            endmethod
            method set
            proc
                mSynergyData.binary10 = (a)Convert.FromBase64String(value)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Binary20, String
            method get
            proc
                mreturn Convert.ToBase64String(([#]byte)mSynergyData.binary20)
            endmethod
            method set
            proc
                mSynergyData.binary20 = (a)Convert.FromBase64String(value)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property Binary40, String
            method get
            proc
                mreturn Convert.ToBase64String(([#]byte)mSynergyData.binary40)
            endmethod
            method set
            proc
                mSynergyData.binary40 = (a)Convert.FromBase64String(value)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999, ErrorMessage=" must be between 0 and 999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Packed6, int
            method get
            proc
                mreturn (int)mSynergyData.packed6
            endmethod
            method set
            proc
                mSynergyData.packed6 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,99999999, ErrorMessage=" must be between 0 and 99999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Packed8, int
            method get
            proc
                mreturn (int)mSynergyData.packed8
            endmethod
            method set
            proc
                mSynergyData.packed8 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(1, ErrorMessage=" cannot exceed 1 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property A1, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a1, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a1 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property A10, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a10, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a10 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(100, ErrorMessage=" cannot exceed 100 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property A100, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a100, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a100 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(255, ErrorMessage=" cannot exceed 255 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property A255, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a255, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a255 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(512, ErrorMessage=" cannot exceed 512 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property A512, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.a512, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.a512 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[69]
        endmethod

.endregion

    endclass

endnamespace
