;;*****************************************************************************
;;
;; Title:       Integer.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure INTEGERS.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace Services.Models

    {Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptIn)}
    public partial class Integer extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strInteger
        private mOriginalSynergyData, strInteger
        protected mGlobalRFA  ,a10

        private static sMetadata, @IntegerMetadata

.region "Constructors"

        static method Integer
        proc
            sMetadata = new IntegerMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Integer), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Integer
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Integer
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Mysbyte, int
            method get
            proc
                mreturn (int)mSynergyData.mysbyte
            endmethod
            method set
            proc
                mSynergyData.mysbyte = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Mybyte, int
            method get
            proc
                mreturn (int)mSynergyData.mybyte
            endmethod
            method set
            proc
                mSynergyData.mybyte = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myshort, int
            method get
            proc
                mreturn (int)mSynergyData.myshort
            endmethod
            method set
            proc
                mSynergyData.myshort = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myushort, int
            method get
            proc
                mreturn (int)mSynergyData.myushort
            endmethod
            method set
            proc
                mSynergyData.myushort = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myint, int
            method get
            proc
                mreturn (int)mSynergyData.myint
            endmethod
            method set
            proc
                mSynergyData.myint = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myuint, int
            method get
            proc
                mreturn (int)mSynergyData.myuint
            endmethod
            method set
            proc
                mSynergyData.myuint = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Mylong, long
            method get
            proc
                mreturn (long)mSynergyData.mylong
            endmethod
            method set
            proc
                mSynergyData.mylong = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myulong, long
            method get
            proc
                mreturn (long)mSynergyData.myulong
            endmethod
            method set
            proc
                mSynergyData.myulong = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Mydecimal, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.mydecimal, ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.mydecimal = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Myfloat, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.myfloat, ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.myfloat = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Mydouble, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.mydouble, ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.mydouble = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amysbyte1, int
            method get
            proc
                mreturn (int)mSynergyData.amysbyte[1]
            endmethod
            method set
            proc
                mSynergyData.amysbyte[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amysbyte2, int
            method get
            proc
                mreturn (int)mSynergyData.amysbyte[2]
            endmethod
            method set
            proc
                mSynergyData.amysbyte[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amybyte1, int
            method get
            proc
                mreturn (int)mSynergyData.amybyte[1]
            endmethod
            method set
            proc
                mSynergyData.amybyte[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,127, ErrorMessage=" must be between 0 and 127. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amybyte2, int
            method get
            proc
                mreturn (int)mSynergyData.amybyte[2]
            endmethod
            method set
            proc
                mSynergyData.amybyte[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyshort1, int
            method get
            proc
                mreturn (int)mSynergyData.amyshort[1]
            endmethod
            method set
            proc
                mSynergyData.amyshort[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyshort2, int
            method get
            proc
                mreturn (int)mSynergyData.amyshort[2]
            endmethod
            method set
            proc
                mSynergyData.amyshort[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyushort1, int
            method get
            proc
                mreturn (int)mSynergyData.amyushort[1]
            endmethod
            method set
            proc
                mSynergyData.amyushort[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,32767, ErrorMessage=" must be between 0 and 32767. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyushort2, int
            method get
            proc
                mreturn (int)mSynergyData.amyushort[2]
            endmethod
            method set
            proc
                mSynergyData.amyushort[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyint1, int
            method get
            proc
                mreturn (int)mSynergyData.amyint[1]
            endmethod
            method set
            proc
                mSynergyData.amyint[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyint2, int
            method get
            proc
                mreturn (int)mSynergyData.amyint[2]
            endmethod
            method set
            proc
                mSynergyData.amyint[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyuint1, int
            method get
            proc
                mreturn (int)mSynergyData.amyuint[1]
            endmethod
            method set
            proc
                mSynergyData.amyuint[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,2147483647, ErrorMessage=" must be between 0 and 2147483647. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyuint2, int
            method get
            proc
                mreturn (int)mSynergyData.amyuint[2]
            endmethod
            method set
            proc
                mSynergyData.amyuint[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amylong1, long
            method get
            proc
                mreturn (long)mSynergyData.amylong[1]
            endmethod
            method set
            proc
                mSynergyData.amylong[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amylong2, long
            method get
            proc
                mreturn (long)mSynergyData.amylong[2]
            endmethod
            method set
            proc
                mSynergyData.amylong[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyulong1, long
            method get
            proc
                mreturn (long)mSynergyData.amyulong[1]
            endmethod
            method set
            proc
                mSynergyData.amyulong[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9223372036854775807, ErrorMessage=" must be between 0 and 9223372036854775807. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyulong2, long
            method get
            proc
                mreturn (long)mSynergyData.amyulong[2]
            endmethod
            method set
            proc
                mSynergyData.amyulong[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyfloat1, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amyfloat[1], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amyfloat[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amyfloat2, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amyfloat[2], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amyfloat[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amydouble1, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amydouble[1], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amydouble[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amydouble2, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amydouble[2], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amydouble[2] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amydecimal1, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amydecimal[1], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amydecimal[1] = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999999999999999999.9999999999, ErrorMessage=" must be between 0 and 999999999999999999.9999999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Amydecimal2, decimal
            method get
            proc
                mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.amydecimal[2], ^null, "DECIMALPLACES#10", ^null)
            endmethod
            method set
            proc
                mSynergyData.amydecimal[2] = value
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[33]
        endmethod

.endregion

    endclass

endnamespace
