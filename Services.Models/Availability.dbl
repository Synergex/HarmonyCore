import System
import System.Collections.Generic
import System.Text
import Harmony.OData.Adapter
import System.ComponentModel.DataAnnotations

namespace Services.Models

	public class Availability
		{Key}
		public readwrite property Id, int
		public readwrite property Project, int
		public readwrite property Unittype, @string
		public readwrite property Segment, @string
		public readwrite property Date, datetime
		public readwrite property Nights, int
		public readwrite property NumberOfUnits, int
		public readwrite property PointsCost, int
		public readwrite property MoneyCost, decimal
		public readwrite property Season, @string
	endclass

	public class AvailabiltyFilter
		{ParameterFieldAdapterAttribute(EdmName="Region", IsOptional=true)}
		public readwrite property Region      ,string
		{MatchFieldAdapterAttribute(EdmName="Project")}
		public readwrite property Project     ,int
		{ParameterFieldAdapterAttribute(EdmName="Unit", IsOptional=true)}
		public readwrite property Unit        ,string
		{MatchFieldAdapterAttribute(EdmName="Unittype")}
		public readwrite property Unittype    ,string
		{RangeFieldAdapterAttribute(EdmName="Date", IsLowerBound=true)}
		public readwrite property Arrivalfrom ,datetime
		{RangeFieldAdapterAttribute(EdmName="Date", IsUpperBound=true)}
		public readwrite property Arrivalto   ,datetime
		{MatchFieldAdapterAttribute(EdmName="Nights")}
		public readwrite property Nights      ,int
		{RangeFieldAdapterAttribute(EdmName="PointsCost", IsUpperBound=true)}
		public readwrite property Pointshigh  ,int
		{RangeFieldAdapterAttribute(EdmName="PointsCost", IsLowerBound=true)}
		public readwrite property Pointslow   ,int
		{RangeOperatorAdapterAttribute(EdmName="PointsCost")}
		public readwrite property PointsRangeOp   ,RangeOperator
		{ParameterFieldAdapterAttribute(EdmName="Member", IsOptional=true)}
		public readwrite property Member      ,int
		{ParameterFieldAdapterAttribute(EdmName="MemberArea", IsOptional=true)}
		public readwrite property Memberarea  ,int
		{ParameterFieldAdapterAttribute(EdmName="FunctionType", IsOptional=true)}
		public readwrite property Functiontype,string
		{ParameterFieldAdapterAttribute(EdmName="Adults", IsOptional=true)}
		public readwrite property Adults      ,int
		{ParameterFieldAdapterAttribute(EdmName="Children", IsOptional=true)}
		public readwrite property Children    ,int
		{ParameterFieldAdapterAttribute(EdmName="ReservationType", IsOptional=true)}
		public readwrite property Reservationtype,int
		{ParameterFieldAdapterAttribute(EdmName="RateCode", IsOptional=true)}
		public readwrite property Ratecode    ,string
		{OrFieldAdapterAttribute(EdmName="Segment", FillOrder=0)}
		public readwrite property Segment1    ,string
		{OrFieldAdapterAttribute(EdmName="Segment", FillOrder=1)}
		public readwrite property Segment2    ,string
		{OrFieldAdapterAttribute(EdmName="Segment", FillOrder=2)}
		public readwrite property Segment3    ,string
		{OrFieldAdapterAttribute(EdmName="Segment", FillOrder=3)}
		public readwrite property Segment4    ,string
		{OrFieldAdapterAttribute(EdmName="Segment", FillOrder=4)}
		public readwrite property Segment5    ,string

	endclass

endnamespace
