;;*****************************************************************************
;;
;; Title:       Nulldtstr.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure NULLDTSTR.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection
import System.Runtime.Serialization

namespace Services.Models

    {Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptIn)}
    public partial class Nulldtstr extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strNulldtstr
        private mOriginalSynergyData, strNulldtstr
        protected mGlobalRFA  ,a10

        private static sMetadata, @NulldtstrMetadata

.region "Constructors"

        static method Nulldtstr
        proc
            sMetadata = new NulldtstrMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Nulldtstr), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Nulldtstr
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Nulldtstr
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property NdtAlpha, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ndt_alpha, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ndt_alpha = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property NdtDate8, Nullable<DateTime>
            method get
            proc
                mreturn (Nullable<DateTime>)SynergyDecimalDateConverter.Convert(mSynergyData.ndt_date8, ^null, "YYYYMMDD", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.ndt_date8, "YYYYMMDD", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property NdtDate6, Nullable<DateTime>
            method get
            proc
                mreturn (Nullable<DateTime>)SynergyDecimalDateConverter.Convert(mSynergyData.ndt_date6, ^null, "YYMMDD", ^null)
            endmethod
            method set
            proc
            SynergyConverter.ConvertBack(value, mSynergyData.ndt_date6, "YYMMDD", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property NdtTime6, Nullable<DateTime>
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.ndt_time6,"XX:XX:XX"))
            endmethod
            method set
            proc
                SynergyConverter.ConvertBack(value, mSynergyData.ndt_time6, "HHMMSS", ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Newtonsoft.Json.JsonProperty}
        public property NdtTime4, Nullable<DateTime>
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.ndt_time4,"XX:XX"))
            endmethod
            method set
            proc
                SynergyConverter.ConvertBack(value, mSynergyData.ndt_time4, "HHMM", ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[5]
        endmethod

.endregion

    endclass

endnamespace
