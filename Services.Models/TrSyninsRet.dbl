;;*****************************************************************************
;;
;; Title:       TrSyninsRet.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure TR_SYNINS_RET.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace Services.Models

    {Newtonsoft.Json.JsonObject(Newtonsoft.Json.MemberSerialization.OptIn)}
    public partial class TrSyninsRet extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strTrSyninsRet
        private mOriginalSynergyData, strTrSyninsRet
        protected mGlobalRFA  ,a10

        private static sMetadata, @TrSyninsRetMetadata

.region "Constructors"

        static method TrSyninsRet
        proc
            sMetadata = new TrSyninsRetMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(TrSyninsRet), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method TrSyninsRet
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method TrSyninsRet
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property StatusCode, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.status_code, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.status_code = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(6, ErrorMessage=" cannot exceed 6 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Supplier, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.supplier, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.supplier = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(30, ErrorMessage=" cannot exceed 30 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property SupplierName, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.supplier_name, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.supplier_name = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(4, ErrorMessage=" cannot exceed 4 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property Endorsement, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.endorsement, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.endorsement = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(30, ErrorMessage=" cannot exceed 30 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property EndorsementName, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.endorsement_name, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.endorsement_name = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(2, ErrorMessage=" cannot exceed 2 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsuranceType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.insurance_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.insurance_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsuranceDescription, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.insurance_description, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.insurance_description = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,999, ErrorMessage=" must be between 0 and 999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsDuration, int
            method get
            proc
                mreturn (int)mSynergyData.ins_duration
            endmethod
            method set
            proc
                mSynergyData.ins_duration = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1PassengerType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[1].passenger_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].passenger_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1Gross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[1].gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1Net, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[1].net
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1EndorsementGross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[1].endorsement_gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].endorsement_gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1EndorsementNet, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[1].endorsement_net
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].endorsement_net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues1NumberOfPax, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[1].number_of_pax, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[1].number_of_pax = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2PassengerType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[2].passenger_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].passenger_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2Gross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[2].gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2Net, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[2].net
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2EndorsementGross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[2].endorsement_gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].endorsement_gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2EndorsementNet, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[2].endorsement_net
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].endorsement_net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues2NumberOfPax, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[2].number_of_pax, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[2].number_of_pax = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3PassengerType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[3].passenger_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].passenger_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3Gross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[3].gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3Net, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[3].net
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3EndorsementGross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[3].endorsement_gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].endorsement_gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3EndorsementNet, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[3].endorsement_net
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].endorsement_net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues3NumberOfPax, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[3].number_of_pax, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[3].number_of_pax = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4PassengerType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[4].passenger_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].passenger_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4Gross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[4].gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4Net, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[4].net
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4EndorsementGross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[4].endorsement_gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].endorsement_gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4EndorsementNet, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[4].endorsement_net
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].endorsement_net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues4NumberOfPax, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[4].number_of_pax, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[4].number_of_pax = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5PassengerType, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[5].passenger_type, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].passenger_type = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5Gross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[5].gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5Net, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[5].net
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5EndorsementGross, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[5].endorsement_gross
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].endorsement_gross = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {Range(0,9999999, ErrorMessage=" must be between 0 and 9999999. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5EndorsementNet, int
            method get
            proc
                mreturn (int)mSynergyData.ins_values[5].endorsement_net
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].endorsement_net = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(3, ErrorMessage=" cannot exceed 3 characters. ")}
        {Newtonsoft.Json.JsonProperty}
        public property InsValues5NumberOfPax, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.ins_values[5].number_of_pax, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.ins_values[5].number_of_pax = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[38]
        endmethod

.endregion

    endclass

endnamespace
