;;*****************************************************************************
;;
;; Title:       PrimaryKeyGenerator.dbl
;;
;; Description: Provides primary key values for create (POST) operations.
;;
;;*****************************************************************************
;; THIS CODE WAS HAND CRAFTED
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text
import Harmony.Core
import Harmony.Core.FileIO

namespace Services

    .include "SYSPARAMS" repository, structure="strSysParams", end

    public class PrimaryKeyGenerator extends RecordPrimaryKeyFactory

        mFileChannelManager, @IFileChannelManager
        mChannel, int

        mNextCustomerParam, strSysParams
        mNextItemParam, strSysParams
        mNextOrderParam, strSysParams
        mNextVendorParam, strSysParams
        mNextIDParam, strSysParams

        public method PrimaryKeyGenerator
            required in aFileChannelManager, @IFileChannelManager
        proc
            mFileChannelManager = aFileChannelManager
            mChannel = mFileChannelManager.GetChannel("DAT:sysparams.ddf",FileOpenMode.UpdateRelative)
            init mNextCustomerParam
            init mNextItemParam
            init mNextOrderParam
            init mNextVendorParam
            init mNextIDParam
        endmethod

        protected override method IncrementKeyImplementation, @a
            metaDatainstance, @DataObjectMetadataBase
        proc
            using metaDatainstance.RPSStructureName select
            ("CUSTOMERS"),
            begin
                if (!mNextCustomerParam.param_value)
                    read(mChannel,mNextCustomerParam,1,LOCK:Q_MANUAL_LOCK)
                mNextCustomerParam.param_value += 1
                mreturn (@a)%string(mNextCustomerParam.param_value-1)
            end
            ("ITEMS"),
            begin
                if (!mNextItemParam.param_value)
                    read(mChannel,mNextItemParam,4,LOCK:Q_MANUAL_LOCK)
                mNextItemParam.param_value += 1
                mreturn (@a)%string(mNextItemParam.param_value-1)
            end
            ("ORDERS"),
            begin
                if (!mNextOrderParam.param_value)
                    read(mChannel,mNextOrderParam,3,LOCK:Q_MANUAL_LOCK)
                mNextOrderParam.param_value += 1
                mreturn (@a)%string(mNextOrderParam.param_value-1)
            end
            ("ORDER_ITEMS"),
            begin
                throw new NotImplementedException()
            end
            ("VENDORS"),
            begin
                if (!mNextVendorParam.param_value)
                    read(mChannel,mNextVendorParam,2,LOCK:Q_MANUAL_LOCK)
                mNextVendorParam.param_value += 1
                mreturn (@a)%string(mNextVendorParam.param_value-1)
            end
            ("DIFFERENTPK"),
            begin
                if (!mNextIDParam.param_value)
                    read(mChannel,mNextIDParam,5,LOCK:Q_MANUAL_LOCK)
                mNextIDParam.param_value += 1
                mreturn (@a)%string(mNextIDParam.param_value-1)
            end
            endusing
        endmethod

        protected override method CommitImplementation, void
        proc
            if (mNextCustomerParam.param_value)
            begin
                write(mChannel,mNextCustomerParam,1)
            end
            if (mNextItemParam.param_value)
            begin
                write(mChannel,mNextItemParam,4)
            end
            if (mNextOrderParam.param_value)
            begin
                write(mChannel,mNextOrderParam,3)
            end
            if (mNextVendorParam.param_value)
            begin
                write(mChannel,mNextVendorParam,2)
            end
            if (mNextIDParam.param_value)
            begin
                write(mChannel,mNextIDParam,5)
            end
            mFileChannelManager.ReturnChannel(mChannel)
            mChannel = 0
        endmethod

        protected override method Abort, void
        proc
            mFileChannelManager.ReturnChannel(mChannel)
            mChannel = 0
        endmethod

    endclass

endnamespace
