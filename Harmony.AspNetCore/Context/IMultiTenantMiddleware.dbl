import Harmony.Core.Interface
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Builder


namespace Harmony.AspNetCore.Context

	public static class IMultiTenantMiddleware
		private static async method InvokeMiddleware, @Task
			tenantIdentifier, @Func<HttpContext, string>
			context, @HttpContext
			next, @Func<Task>
		proc
			try
			begin
				MultiTenantProvider.TenantId = tenantIdentifier(context)
				await next()
			end
			finally
			begin
				MultiTenantProvider.TenantId = ^null
			end
			endtry
		endmethod
		
		public static extension method UseMultiTenancy, @IApplicationBuilder 
			builder, @IApplicationBuilder
			identifier, @Func<HttpContext, string>
        proc
            lambda implementation(context, next)
            begin
				mreturn InvokeMiddleware(identifier, context, next)
            end

			data implementationInstance, @Func<HttpContext, Func<Task>, Task>, implementation

			builder.Use(implementationInstance)
			mreturn builder
		endmethod
	endclass

endnamespace
