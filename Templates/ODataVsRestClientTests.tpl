<CODEGEN_FILENAME><StructureNoplural>.http</CODEGEN_FILENAME>
<REQUIRES_CODEGEN_VERSION>5.7.5</REQUIRES_CODEGEN_VERSION>
<REQUIRES_USERTOKEN>SERVER_PROTOCOL</REQUIRES_USERTOKEN>
<REQUIRES_USERTOKEN>SERVER_NAME</REQUIRES_USERTOKEN>
<REQUIRES_USERTOKEN>SERVER_HTTPS_PORT</REQUIRES_USERTOKEN>
<REQUIRES_USERTOKEN>SERVER_BASE_PATH</REQUIRES_USERTOKEN>
<REQUIRES_USERTOKEN>API_VERSION</REQUIRES_USERTOKEN>
<OPTIONAL_USERTOKEN>TEST_TENANT_ID=1</OPTIONAL_USERTOKEN>

###
### HTTP operations for testing with the Visual Studio REST Client
###
### To execute these tests you will need to first install this extension
### from the Visual Studio marketplace:
###
### https://marketplace.visualstudio.com/items?itemName=MadsKristensen.RestClient
###
### This code was generated by CodeGen, but will not be replaced
### when you regenerate code. If you wish to regenerate the Content
### of this file then delete the file before regenerating.
###

@protocol = <SERVER_PROTOCOL>
@hostname = <SERVER_NAME>
@port = <SERVER_HTTPS_PORT>
@odatapath = <SERVER_BASE_PATH>
@version = <API_VERSION>
@entity = <StructurePlural>
@tenantid = <TEST_TENANT_ID>
@baseuri = {{protocol}}://{{hostname}}:{{port}}/{{odatapath}}/v{{version}}/{{entity}}

;//
;//
;//
<IF DEFINED_ENABLE_GET_ALL AND GET_ALL_ENDPOINT>
###
### Query the entire collection
###

GET {{baseuri}}<IF DEFINED_ENABLE_TOP>?$top=3</IF>
Accept:application/json
x-tenant-id: {{tenantid}}

</IF>
;//
;//
;//
<IF DEFINED_ENABLE_GET_ALL AND GET_ALL_ENDPOINT AND DEFINED_ENABLE_COUNT>
###
### Query the entire collection
###

GET {{baseuri}}?$count
x-tenant-id: {{tenantid}}

</IF>
;//
;//
;//
<IF DEFINED_ENABLE_GET_ONE AND GET_ENDPOINT>
###
### Query the collection by primary key
###

GET {{baseuri}}(<IF STRUCTURE_ISAM><PRIMARY_KEY><SEGMENT_LOOP><IF SEG_TAG_EQUAL><ELSE><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF SEG_TAG_EQUAL></SEGMENT_LOOP></PRIMARY_KEY></IF STRUCTURE_ISAM><IF STRUCTURE_RELATIVE>InsertRecordNumber</IF STRUCTURE_RELATIVE>)
Accept:application/json
x-tenant-id: {{tenantid}}

</IF>
;//
;// ALTERNATE KEYS
;//
<IF STRUCTURE_ISAM AND DEFINED_ENABLE_ALTERNATE_KEYS AND ALTERNATE_KEY_ENDPOINTS>
  <ALTERNATE_KEY_LOOP_UNIQUE>
###
### Query the collection by alternate key <KeyName>
###

GET {{baseuri}}(<SEGMENT_LOOP><IF NOT SEG_TAG_EQUAL><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF></SEGMENT_LOOP>)
Accept:application/json
x-tenant-id: {{tenantid}}

    <IF DEFINED_ENABLE_COUNT>
###
### Count the collection by alternate key <KeyName>
###

GET {{baseuri}}(<SEGMENT_LOOP><IF NOT SEG_TAG_EQUAL><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF></SEGMENT_LOOP>)/$count
Accept:application/json
x-tenant-id: {{tenantid}}

    </IF>
  </ALTERNATE_KEY_LOOP>
</IF>
;//
;// PARTIAL KEY ENDPOINTS
;//
<IF STRUCTURE_ISAM AND DEFINED_ENABLE_PARTIAL_KEYS>
  <PARTIAL_KEY_LOOP>
###
### Query the collection by partial key <KeyName>
###

GET {{baseuri}}(<SEGMENT_LOOP><IF NOT SEG_TAG_EQUAL><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF></SEGMENT_LOOP>)
Accept:application/json
x-tenant-id: {{tenantid}}

    <IF DEFINED_ENABLE_COUNT>
###
### Count the collection by partial key <KeyName>
###

GET {{baseuri}}(<SEGMENT_LOOP><IF NOT SEG_TAG_EQUAL><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF></SEGMENT_LOOP>)/$count
Accept:application/json
x-tenant-id: {{tenantid}}

    </IF>
  </PARTIAL_KEY_LOOP>
</IF>
;//
;// INDIVIDUAL PROPERTY ENDPOINTS
;//
<IF DEFINED_ENABLE_PROPERTY_ENDPOINTS AND PROPERTY_ENDPOINTS>
  <FIELD_LOOP>
    <IF NOTPKSEGMENT AND CUSTOM_NOT_HARMONY_EXCLUDE>
###
### Query the collection for property <FieldSqlName>
###

GET {{baseuri}}(<IF STRUCTURE_ISAM><PRIMARY_KEY><SEGMENT_LOOP><IF NOT SEG_TAG_EQUAL><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF></SEGMENT_LOOP></PRIMARY_KEY></IF STRUCTURE_ISAM><IF STRUCTURE_RELATIVE>InsertRecordNumber</IF STRUCTURE_RELATIVE>)/<FieldSqlName>
Accept:application/json
x-tenant-id: {{tenantid}}

    </IF>
  </FIELD_LOOP>
</IF>
;//
;// POST
;//
<IF DEFINED_ENABLE_POST AND POST_ENDPOINT>
###
### Create entity (auto assign key)
###

POST {{baseuri}}
Content-Type:application/json
x-tenant-id: {{tenantid}}

{<FIELD_LOOP><IF CUSTOM_NOT_HARMONY_EXCLUDE>"<FieldSqlName>": <IF ALPHA>"</IF ALPHA><IF CUSTOM_HARMONY_AS_STRING>"</IF CUSTOM_HARMONY_AS_STRING><FIELD_SAMPLE_DATA_NOQUOTES><IF CUSTOM_HARMONY_AS_STRING>"</IF CUSTOM_HARMONY_AS_STRING><IF ALPHA>"</IF ALPHA><,></IF CUSTOM_NOT_HARMONY_EXCLUDE></FIELD_LOOP>}

</IF>
;//
;//
;//
<IF DEFINED_ENABLE_PUT AND PUT_ENDPOINT>
###
### Create or update an entity (key supplied by client)
###

PUT {{baseuri}}(<IF STRUCTURE_ISAM><PRIMARY_KEY><SEGMENT_LOOP><IF SEG_TAG_EQUAL><ELSE><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF SEG_TAG_EQUAL></SEGMENT_LOOP></PRIMARY_KEY></IF STRUCTURE_ISAM><IF STRUCTURE_RELATIVE>InsertRecordNumber</IF STRUCTURE_RELATIVE>)
Content-Type:application/json
x-tenant-id: {{tenantid}}

{<FIELD_LOOP><IF CUSTOM_NOT_HARMONY_EXCLUDE>"<FieldSqlName>": <IF ALPHA>"</IF ALPHA><IF CUSTOM_HARMONY_AS_STRING>"</IF CUSTOM_HARMONY_AS_STRING><FIELD_SAMPLE_DATA_NOQUOTES><IF CUSTOM_HARMONY_AS_STRING>"</IF CUSTOM_HARMONY_AS_STRING><IF ALPHA>"</IF ALPHA><,></IF CUSTOM_NOT_HARMONY_EXCLUDE></FIELD_LOOP>}

</IF>
;//
;//
;//
<IF DEFINED_ENABLE_PATCH AND PATCH_ENDPOINT>
###
### Patch an entity
###

PATCH {{baseuri}}(<IF STRUCTURE_ISAM><PRIMARY_KEY><SEGMENT_LOOP><IF SEG_TAG_EQUAL><ELSE><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF SEG_TAG_EQUAL></SEGMENT_LOOP></PRIMARY_KEY></IF STRUCTURE_ISAM><IF STRUCTURE_RELATIVE>InsertRecordNumber</IF STRUCTURE_RELATIVE>)
Content-Type:application/json
x-tenant-id: {{tenantid}}

[ { "op": "replace", "path": "PropertyName", "value": "PropertyValue" } ]

</IF>
;//
;//
;//
<IF DEFINED_ENABLE_DELETE AND DELETE_ENDPOINT>
###
### Delete an entity
###

DELETE {{baseuri}}(<IF STRUCTURE_ISAM><PRIMARY_KEY><SEGMENT_LOOP><IF SEG_TAG_EQUAL><ELSE><FieldSqlName>=<IF DATEORTIME>'2022-01-01'<IF TIME>T12:00:00-08:00</IF TIME><ELSE><IF ALPHA>'ABC'<ELSE>123</IF ALPHA></IF DATEORTIME><SEGMENT_COMMA_NOT_LAST_NORMAL_FIELD></IF SEG_TAG_EQUAL></SEGMENT_LOOP></PRIMARY_KEY></IF STRUCTURE_ISAM><IF STRUCTURE_RELATIVE>InsertRecordNumber</IF STRUCTURE_RELATIVE>)
Accept:application/json
x-tenant-id: {{tenantid}}

</IF>
