import System
import System.Collections.Generic
import System.Text
import System.IO
import Harmony.Core.Test.FileIO.Models
import Harmony.Core.Test
import Microsoft.VisualStudio.TestTools.UnitTesting


namespace HarmonyCore.Test

    {TestClass}
    public class TestEnvironment
        {AssemblyInitialize}
        public static method Configure, void
            context, @TestContext
		proc
			data sampleDataFolder = findRelativeFolderForAssembly("SampleData")
			data sts, int
			xcall setlog("DAT",sampleDataFolder,sts)

			data dataFile = "DAT:orders.ism"
			data xdlFile = "@" + dataFile.ToLower().Replace(".ism",".xdl")
			data chout = 0
			data order, @Orders
			open(chout=0,o:i,dataFile,FDL:xdlFile)
			foreach order in LoadFromFile()
				store(chout,order.SynergyRecord)
			close chout

            dataFile = "DAT:customers.ism"
            xdlFile = "@" + dataFile.ToLower().Replace(".ism",".xdl")
            chout = 0
            data customer, @Customer
            open(chout=0,o:i,dataFile,FDL:xdlFile)
            foreach customer in LoadCustomersFromFile()
                store(chout,customer.SynergyRecord)
            close chout
		endmethod

		public static method LoadFromFile, @List<Orders>
		proc
			data dataFile = "DAT:orders.ism"
			data textFile = dataFile.ToLower().Replace(".ism",".txt")
			data orderCh, int, 0
			data orderRec, strOrders
			data ordersLst = new List<Orders>()
			open(orderCh,i:s,textFile)
			repeat
			begin
				reads(orderCh,orderRec,eof)
				ordersLst.Add(new Orders(orderRec))
			end
		eof,
			close orderCh
			mreturn ordersLst
        endmethod

        public static method LoadCustomersFromFile, @List<Customer>
        proc
            data dataFile = "DAT:customers.ism"
            data textFile = dataFile.ToLower().Replace(".ism",".txt")
            data orderCh, int, 0
            data orderRec, strCustomer
            data ordersLst = new List<Customer>()
            open(orderCh,i:s,textFile)
            repeat
            begin
                reads(orderCh,orderRec,eof)
                ordersLst.Add(new Customer(orderRec, ""))
            end
        eof,
            close orderCh
            mreturn ordersLst
        endmethod

		public static method findRelativeFolderForAssembly, string
			folderName, string
		proc
			data assemblyLocation = ^typeof(TestEnvironment).Assembly.Location
			data currentFolder = Path.GetDirectoryName(assemblyLocation)
			data rootPath = Path.GetPathRoot(currentFolder)
			while(currentFolder != rootPath)
			begin
				if(Directory.Exists(Path.Combine(currentFolder, folderName))) then
					mreturn Path.Combine(currentFolder, folderName)
				else
					currentFolder = Path.GetFullPath(currentFolder + "..\")
			end
			mreturn ^null
		endmethod
	endclass

endnamespace
