;;*****************************************************************************
;;
;; Title:       Item.dbl
;;
;; Description: OData model class representing data defined by the repository
;;              structure ITEMS and from the data file DAT:items.ism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Newtonsoft.Json
import System.Collections.Generic

namespace Services.Test.Models

    {JsonObject(ItemNullValueHandling = NullValueHandling.Ignore)}
    public partial class Item

        ;;; <summary>
        ;;; Item number
        ;;; </summary>
        public readwrite property ItemNumber, int

        ;;; <summary>
        ;;; Vendor number
        ;;; </summary>
        public readwrite property VendorNumber, int

        ;;; <summary>
        ;;; Size in gallons
        ;;; </summary>
        public readwrite property Size, int

        ;;; <summary>
        ;;; Common name
        ;;; </summary>
        public readwrite property CommonName, String

        ;;; <summary>
        ;;; Latin name
        ;;; </summary>
        public readwrite property LatinName, String

        ;;; <summary>
        ;;; Hardiness zone code
        ;;; </summary>
        public readwrite property ZoneCode, int

        ;;; <summary>
        ;;; Type code
        ;;; </summary>
        public readwrite property Type, int

        ;;; <summary>
        ;;; Flowering?
        ;;; </summary>
        public readwrite property Flowering, String

        ;;; <summary>
        ;;; Flower color
        ;;; </summary>
        public readwrite property FlowerColor, String

        ;;; <summary>
        ;;; Shape
        ;;; </summary>
        public readwrite property Shape, String

        ;;; <summary>
        ;;; Maximum height (in inches)
        ;;; </summary>
        public readwrite property MaxHeight, int

        ;;; <summary>
        ;;; Maximum width (in inches)
        ;;; </summary>
        public readwrite property MaxWidth, int

        ;;; <summary>
        ;;; Water requirements
        ;;; </summary>
        public readwrite property WaterRequirement, String

        ;;; <summary>
        ;;; Sun requirements
        ;;; </summary>
        public readwrite property SunRequirement, String

        ;;; <summary>
        ;;; Bin/aisle
        ;;; </summary>
        public readwrite property BinLocation, String

        ;;; <summary>
        ;;; Qty on hand
        ;;; </summary>
        public readwrite property QtyOnHand, int

        ;;; <summary>
        ;;; Qty allocated
        ;;; </summary>
        public readwrite property QtyAllocated, int

        ;;; <summary>
        ;;; Qty on order
        ;;; </summary>
        public readwrite property QtyOnOrder, int

        ;;; <summary>
        ;;; Reorder point
        ;;; </summary>
        public readwrite property ReorderLevel, int

        ;;; <summary>
        ;;; Unit price
        ;;; </summary>
        public readwrite property UnitPrice, decimal

        ;;; <summary>
        ;;; Item cost
        ;;; </summary>
        public readwrite property CostPrice, decimal


.region "Relationships to other entities"

        ;;; <summary>
        ;;; Relationship (Type A)
        ;;; ITEM.VENDOR_NUMBER (one) --> (one) --> (many) VENDOR.VENDOR_NUMBER
        ;;; </summary>
        public readwrite property REL_Vendor, @Vendor

        ;;; <summary>
        ;;; Relationship (Type D)
        ;;; ITEM.ITEM_NUMBER (one) <-> (many) ORDER_ITEM.ITEM_ORDERED
        ;;; </summary>
        public readwrite property REL_OrderItems, @ICollection<OrderItem>

.endregion

    endclass

    public class ODataItemSingle
        
        {JsonProperty("odata.metadata")}
        public readwrite property Metadata, string

        {JsonProperty("value")}
        public readwrite property Value, @Item

    endclass

    public class ODataItemsMultiple
        
        {JsonProperty("odata.metadata")}
        public readwrite property Metadata, string

        {JsonProperty("value")}
        public readwrite property Value, @List<Item>

    endclass

endnamespace
