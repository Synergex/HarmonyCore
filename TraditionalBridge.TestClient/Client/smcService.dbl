;;*****************************************************************************
;;
;; Title:       smcService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "smc" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import TraditionalBridge.Models

namespace TraditionalBridge.TestClient

    public partial class smcService extends DynamicCallProvider

        static IsInitialized, boolean
        static method smcService
        proc
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method smcService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_one, @Task
            required in args, @TraditionalBridge.TestClient.smc.function_one_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_one"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_two, @Task<TraditionalBridge.TestClient.smc.function_two_Response>
            required in args, @TraditionalBridge.TestClient.smc.function_two_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.function_two_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_two"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   ,ArgumentHelper.MayBeOptional(args.p5)
            &   ,ArgumentHelper.MayBeOptional(args.p6)
            &   ,ArgumentHelper.MayBeOptional(args.p7)
            &   ,ArgumentHelper.MayBeOptional(args.p8)
            &   ,ArgumentHelper.MayBeOptional(args.p9)
            &   ,ArgumentHelper.MayBeOptional(args.p10)
            &   )

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],Nullable<decimal>)
            response.p2 = ^as(resultList[2 - 1],Nullable<decimal>)
            response.p6 = ^as(resultList[6 - 1],Nullable<decimal>)
            response.p8 = ^as(resultList[8 - 1],Nullable<int>)
            response.p9 = ^as(resultList[9 - 1],Nullable<decimal>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_four, @Task<TraditionalBridge.TestClient.smc.function_four_Response>
            required in args, @TraditionalBridge.TestClient.smc.function_four_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.function_four_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_four"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)
            response.p3 = ^as(resultList[3 - 1],String)
            response.p4 = ^as(resultList[4 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_eight, @Task<TraditionalBridge.TestClient.smc.function_eight_Response>
            required in args, @TraditionalBridge.TestClient.smc.function_eight_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.function_eight_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_eight"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   ,ArgumentHelper.MayBeOptional(args.p5)
            &   ,ArgumentHelper.MayBeOptional(args.p6)
            &   ,ArgumentHelper.MayBeOptional(args.p7)
            &   ,ArgumentHelper.MayBeOptional(args.p8)
            &   ,ArgumentHelper.MayBeOptional(args.p9)
            &   )

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],Nullable<int>)
            response.p3 = ^as(resultList[3 - 1],Nullable<int>)
            response.p5 = ^as(resultList[5 - 1],Nullable<decimal>)
            response.p6 = ^as(resultList[6 - 1],[#]Nullable<int>)
            response.p7 = ^as(resultList[7 - 1],[#]String)
            response.p8 = ^as(resultList[8 - 1],[#]Nullable<decimal>)
            response.p9 = ^as(resultList[9 - 1],[#]Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_nine, @Task<TraditionalBridge.TestClient.smc.function_nine_Response>
            required in args, @TraditionalBridge.TestClient.smc.function_nine_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.function_nine_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_nine"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_ten, @Task<TraditionalBridge.TestClient.smc.function_ten_Response>
            required in args, @TraditionalBridge.TestClient.smc.function_ten_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.function_ten_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_ten"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p2 = ^as(resultList[2 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method get_verno_tst, @Task<TraditionalBridge.TestClient.smc.get_verno_tst_Response>
            required in args, @TraditionalBridge.TestClient.smc.get_verno_tst_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.smc.get_verno_tst_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("get_verno_tst"
            &   ,args.verno
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.verno)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
