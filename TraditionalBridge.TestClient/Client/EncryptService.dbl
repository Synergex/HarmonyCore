;;*****************************************************************************
;;
;; Title:       EncryptService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "Encrypt" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import TraditionalBridge.Models

namespace TraditionalBridge.TestClient

    public partial class EncryptService extends DynamicCallProvider

        static IsInitialized, boolean
        static method EncryptService
        proc
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest4))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest2))
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method EncryptService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst1, @Task
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst1_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst1"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst10, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst10_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst10_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst10_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst10"
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst11, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst11_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst11_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst11_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst11"
            &   ,args.strtest4
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest4)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst12, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst12_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst12_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst12_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst12"
            &   ,args.strtest1
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest1)
            ArgumentHelper.Argument(2, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst2, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst2_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst2_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst2_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst2"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   ,ArgumentHelper.MayBeOptional(args.p5)
            &   ,ArgumentHelper.MayBeOptional(args.p6)
            &   ,ArgumentHelper.MayBeOptional(args.p7)
            &   ,ArgumentHelper.MayBeOptional(args.p8)
            &   ,ArgumentHelper.MayBeOptional(args.p9)
            &   ,ArgumentHelper.MayBeOptional(args.p10)
            &   )

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],Nullable<decimal>)
            response.p2 = ^as(resultList[2 - 1],Nullable<decimal>)
            response.p6 = ^as(resultList[6 - 1],Nullable<decimal>)
            response.p8 = ^as(resultList[8 - 1],Nullable<int>)
            response.p9 = ^as(resultList[9 - 1],Nullable<decimal>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst3, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst3_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst3_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst3_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst3"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)
            response.p3 = ^as(resultList[3 - 1],String)
            response.p4 = ^as(resultList[4 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst4, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst4_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst4_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst4_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
;            data resultTuple = await CallMethod("encrypt_tst4"
;            &   ,ArgumentHelper.MayBeOptional(args.p1)
;            &   ,ArgumentHelper.MayBeOptional(args.p2)
;            &   ,ArgumentHelper.MayBeOptional(args.p3)
;            &   ,ArgumentHelper.MayBeOptional(args.p4)
;            &   ,ArgumentHelper.MayBeOptional(args.p5)
;            &   ,ArgumentHelper.MayBeOptional(args.p6)
;            &   ,ArgumentHelper.MayBeOptional(args.p7)
;            &   ,ArgumentHelper.MayBeOptional(args.p8)
;            &   ,ArgumentHelper.MayBeOptional(args.p9)
;            &   )
;
;            data resultList, @List<Object>, resultTuple.Item2.ToList()
;
;            response.p1 = ^as(resultList[1 - 1],String)
;            response.p2 = ^as(resultList[2 - 1],Nullable<int>)
;            response.p3 = ^as(resultList[3 - 1],Nullable<int>)
;            response.p5 = ^as(resultList[5 - 1],Nullable<decimal>)
;            response.p6 = ^as(resultList[6 - 1],Nullable<int>)
;            response.p7 = ^as(resultList[7 - 1],String)
;            response.p8 = ^as(resultList[8 - 1],Nullable<decimal>)
;            response.p9 = ^as(resultList[9 - 1],Nullable<int>)
;
            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst5, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst5_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst5_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst5_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst5"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst6, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst6_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst6_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst6_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst6"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.p2 = ^as(resultList[2 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst7, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst7_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst7_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst7_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst7"
            &   ,args.verno
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.verno)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst8, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst8_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst8_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst8_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst8"
            &   ,args.STRTEST1
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST1)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method encrypt_tst9, @Task<TraditionalBridge.TestClient.Encrypt.encrypt_tst9_Response>
            required in args, @TraditionalBridge.TestClient.Encrypt.encrypt_tst9_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Encrypt.encrypt_tst9_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("encrypt_tst9"
            &   ,args.strtest2
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest2)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
