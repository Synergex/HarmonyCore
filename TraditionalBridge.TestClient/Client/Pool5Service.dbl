;;*****************************************************************************
;;
;; Title:       Pool5Service.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "Pool5" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import TraditionalBridge.Models

namespace TraditionalBridge.TestClient

    public partial class Pool5Service extends DynamicCallProvider

        static IsInitialized, boolean
        static method Pool5Service
        proc
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method Pool5Service
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CanBePooled, @Task<TraditionalBridge.TestClient.Pool5.CanBePooled_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Pool5.CanBePooled_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CanBePooled"
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method getGreeting, @Task<TraditionalBridge.TestClient.Pool5.getGreeting_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.Pool5.getGreeting_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("getGreeting"
            &   ,ArgumentHelper.MaybeNull(response.message)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.message)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method setGreeting, @Task
            required in args, @TraditionalBridge.TestClient.Pool5.setGreeting_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("setGreeting"
            &   ,args.message
            &   )
        endmethod

    endclass

endnamespace
