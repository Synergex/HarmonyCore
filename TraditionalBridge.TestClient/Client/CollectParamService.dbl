;;*****************************************************************************
;;
;; Title:       CollectParamService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "CollectParam" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import TraditionalBridge.Models

namespace TraditionalBridge.TestClient

    public partial class CollectParamService extends DynamicCallProvider

        static IsInitialized, boolean
        static method CollectParamService
        proc
            DataObjectMetadataBase.LookupType(^typeof(Integertest))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest12))
            DataObjectMetadataBase.LookupType(^typeof(Strtest14))
            DataObjectMetadataBase.LookupType(^typeof(Strtest16))
            DataObjectMetadataBase.LookupType(^typeof(Strtest2))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest2))
            DataObjectMetadataBase.LookupType(^typeof(Datetimeary))
            DataObjectMetadataBase.LookupType(^typeof(Datetimestr))
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method CollectParamService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method ColPrmIntegers, @Task<TraditionalBridge.TestClient.CollectParam.ColPrmIntegers_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.ColPrmIntegers_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("ColPrmIntegers"
            &   ,ArgumentHelper.MaybeNull(response.INTEGERTESTS)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.INTEGERTESTS)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam1, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam1_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam1_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam1"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST1)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST1)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam12, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam12_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam12_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam12"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST12)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST12)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam14, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam14_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam14_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam14"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST14)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST14)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam16, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam16_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam16_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam16"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST16)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST16)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam2, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam2_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam2_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam2"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST2)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST2)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method CollectParam3, @Task<TraditionalBridge.TestClient.CollectParam.CollectParam3_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.CollectParam3_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("CollectParam3"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST3)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method TestStr2Timing, @Task<TraditionalBridge.TestClient.CollectParam.TestStr2Timing_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.TestStr2Timing_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("TestStr2Timing"
            &   ,ArgumentHelper.MaybeNull(response.STRTEST2)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST2)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method colprmDateTimeAry, @Task<TraditionalBridge.TestClient.CollectParam.colprmDateTimeAry_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.colprmDateTimeAry_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("colprmDateTimeAry"
            &   ,ArgumentHelper.MaybeNull(response.DATETIMEARY)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.DATETIMEARY)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method colprmDateTmeStr, @Task<TraditionalBridge.TestClient.CollectParam.colprmDateTmeStr_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.CollectParam.colprmDateTmeStr_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("colprmDateTmeStr"
            &   ,ArgumentHelper.MaybeNull(response.DATETIMESTR)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.DATETIMESTR)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
