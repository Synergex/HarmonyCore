;;*****************************************************************************
;;
;; Title:       strtestsService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "strtests" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNet.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import TraditionalBridge.Models

namespace TraditionalBridge.TestClient

    public partial class strtestsService extends DynamicCallProvider

        static IsInitialized, boolean
        static method strtestsService
        proc
            DataObjectMetadataBase.LookupType(^typeof(Singleimplieddecimal))
            DataObjectMetadataBase.LookupType(^typeof(Implieddecimaltest))
            DataObjectMetadataBase.LookupType(^typeof(Salesman))
            DataObjectMetadataBase.LookupType(^typeof(ManageFund))
            DataObjectMetadataBase.LookupType(^typeof(Dbauthor))
            DataObjectMetadataBase.LookupType(^typeof(Addres))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(Perfstruct))
            DataObjectMetadataBase.LookupType(^typeof(TrSyninsInp))
            DataObjectMetadataBase.LookupType(^typeof(TrSyninsRet))
            DataObjectMetadataBase.LookupType(^typeof(Refcount))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest4))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest4))
            DataObjectMetadataBase.LookupType(^typeof(Strtest12))
            DataObjectMetadataBase.LookupType(^typeof(Strtest12))
            DataObjectMetadataBase.LookupType(^typeof(Strtest14))
            DataObjectMetadataBase.LookupType(^typeof(Strtest16))
            DataObjectMetadataBase.LookupType(^typeof(Strtest18))
            DataObjectMetadataBase.LookupType(^typeof(Strtest19))
            DataObjectMetadataBase.LookupType(^typeof(Strtest2))
            DataObjectMetadataBase.LookupType(^typeof(Strtest19))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest23))
            DataObjectMetadataBase.LookupType(^typeof(Strtest24))
            DataObjectMetadataBase.LookupType(^typeof(Strtest25))
            DataObjectMetadataBase.LookupType(^typeof(Strtest27))
            DataObjectMetadataBase.LookupType(^typeof(Dborder))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest30))
            DataObjectMetadataBase.LookupType(^typeof(Strtest31))
            DataObjectMetadataBase.LookupType(^typeof(Dataset))
            DataObjectMetadataBase.LookupType(^typeof(Strtest4))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest1))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest7))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            DataObjectMetadataBase.LookupType(^typeof(Strtest3))
            IsInitialized = true
        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method strtestsService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; test a single id6.6
        ;;; </summary>
        public async method TestID66, @Task<TraditionalBridge.TestClient.strtests.TestID66_Response>
            required in args, @TraditionalBridge.TestClient.strtests.TestID66_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.TestID66_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("TestID66"
            &   ,args.SINGLEIMPLIEDDECIMAL
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.SINGLEIMPLIEDDECIMAL)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; test an id6.6 in between two alpha fields
        ;;; </summary>
        public async method TestStrID66, @Task<TraditionalBridge.TestClient.strtests.TestStrID66_Response>
            required in args, @TraditionalBridge.TestClient.strtests.TestStrID66_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.TestStrID66_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("TestStrID66"
            &   ,args.IMPLIEDDECIMALTEST
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.IMPLIEDDECIMALTEST)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; TR#22706 and TR#22729
        ;;; </summary>
        public async method arrayswitharrays, @Task<TraditionalBridge.TestClient.strtests.arrayswitharrays_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.arrayswitharrays_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("arrayswitharrays"
            &   ,ArgumentHelper.MaybeNull(response.SALESMAN)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.SALESMAN)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method manage_funds, @Task<TraditionalBridge.TestClient.strtests.manage_funds_Response>
            required in args, @TraditionalBridge.TestClient.strtests.manage_funds_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.manage_funds_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("manage_funds"
            &   ,args.MANAGE_FUNDS
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.MANAGE_FUNDS)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method paramdiff, @Task<TraditionalBridge.TestClient.strtests.paramdiff_Response>
            required in args, @TraditionalBridge.TestClient.strtests.paramdiff_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.paramdiff_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("paramdiff"
            &   ,args.p1
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.p1)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method passLargePacket, @Task
            required in args, @TraditionalBridge.TestClient.strtests.passLargePacket_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("passLargePacket"
            &   ,args.ADDRESS
            &   ,args.PERFSTRUCT
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method getNumRecords, @Task<TraditionalBridge.TestClient.strtests.getNumRecords_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.getNumRecords_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("getNumRecords"
            &   ,response.num
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.num)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method getStructArray, @Task<TraditionalBridge.TestClient.strtests.getStructArray_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.getStructArray_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("getStructArray"
            &   ,ArgumentHelper.MaybeNull(response.PERFSTRUCT)
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.PERFSTRUCT)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method inStructArray, @Task
            required in args, @TraditionalBridge.TestClient.strtests.inStructArray_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("inStructArray"
            &   ,args.PERFSTRUCT
            &   ,args.Count
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method inoutStructArray, @Task<TraditionalBridge.TestClient.strtests.inoutStructArray_Response>
            required in args, @TraditionalBridge.TestClient.strtests.inoutStructArray_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.inoutStructArray_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("inoutStructArray"
            &   ,args.PERFSTRUCT
            &   ,args.Count
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.PERFSTRUCT)
            ArgumentHelper.Argument(2, resultTuple, response.Count)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method outStructArray, @Task<TraditionalBridge.TestClient.strtests.outStructArray_Response>
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.outStructArray_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("outStructArray"
            &   ,ArgumentHelper.MaybeNull(response.PERFSTRUCT)
            &   ,response.Count
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.PERFSTRUCT)
            ArgumentHelper.Argument(2, resultTuple, response.Count)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method setStructArray, @Task
            required in args, @TraditionalBridge.TestClient.strtests.setStructArray_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("setStructArray"
            &   ,args.PERFSTRUCT
            &   ,args.cnt
            &   )
        endmethod

        ;;; <summary>
        ;;; TR#22706 and TR#22729
        ;;; </summary>
        public async method syninsurance, @Task<TraditionalBridge.TestClient.strtests.syninsurance_Response>
            required in args, @TraditionalBridge.TestClient.strtests.syninsurance_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.syninsurance_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("syninsurance"
            &   ,args.TR_SYNINS_INP
            &   ,ArgumentHelper.MayBeOptional(ArgumentHelper.MaybeNull(response.TR_SYNINS_RET))
            &   ,args.elementcount
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            data resultList, @List<Object>, resultTuple.Item2.ToList()

            response.TR_SYNINS_RET = ^as(resultList[2 - 1],@TrSyninsRet)
            ArgumentHelper.Argument(3, resultTuple, response.elementcount)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method testrefcount, @Task<TraditionalBridge.TestClient.strtests.testrefcount_Response>
            required in args, @TraditionalBridge.TestClient.strtests.testrefcount_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.testrefcount_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("testrefcount"
            &   ,args.REFCOUNT
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.REFCOUNT)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr1, @Task<TraditionalBridge.TestClient.strtests.teststr1_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr1_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr1_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr1"
            &   ,args.STRTEST1
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST1)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr10, @Task<TraditionalBridge.TestClient.strtests.teststr10_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr10_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr10_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr10"
            &   ,args.strtest4
            &   ,args.STRTEST3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest4)
            ArgumentHelper.Argument(2, resultTuple, response.STRTEST3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr11, @Task<TraditionalBridge.TestClient.strtests.teststr11_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr11_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr11_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr11"
            &   ,args.STRTEST3
            &   ,args.STRTEST4
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST3)
            ArgumentHelper.Argument(2, resultTuple, response.STRTEST4)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr12, @Task<TraditionalBridge.TestClient.strtests.teststr12_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr12_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr12_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr12"
            &   ,args.strtest12
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest12)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr13, @Task<TraditionalBridge.TestClient.strtests.teststr13_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr13_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr13_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr13"
            &   ,args.strtest12
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest12)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr14, @Task<TraditionalBridge.TestClient.strtests.teststr14_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr14_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr14_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr14"
            &   ,args.strtest14
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest14)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr16, @Task<TraditionalBridge.TestClient.strtests.teststr16_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr16_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr16_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr16"
            &   ,args.STRTEST16
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST16)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr18, @Task<TraditionalBridge.TestClient.strtests.teststr18_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr18_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr18_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr18"
            &   ,args.strtest18
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest18)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr19, @Task<TraditionalBridge.TestClient.strtests.teststr19_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr19_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr19_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr19"
            &   ,args.strtest19
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest19)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr2, @Task<TraditionalBridge.TestClient.strtests.teststr2_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr2_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr2_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr2"
            &   ,args.strtest2
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest2)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr20, @Task<TraditionalBridge.TestClient.strtests.teststr20_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr20_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr20_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr20"
            &   ,args.strtest19
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.strtest19)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr5a, @Task<TraditionalBridge.TestClient.strtests.teststr5a_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr5a_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr5a_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr5a"
            &   ,args.strtest1
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(2, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr5b, @Task<TraditionalBridge.TestClient.strtests.teststr5b_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr5b_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr5b_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr5b"
            &   ,args.strtest1
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest1)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr23, @Task<TraditionalBridge.TestClient.strtests.teststr23_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr23_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr23_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr23"
            &   ,args.strtest23
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.strtest23)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr24, @Task<TraditionalBridge.TestClient.strtests.teststr24_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr24_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr24_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr24"
            &   ,args.strtest24
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(1, resultTuple, response.strtest24)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr25, @Task<TraditionalBridge.TestClient.strtests.teststr25_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr25_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr25_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr25"
            &   ,args.STRTEST25
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST25)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr27, @Task<TraditionalBridge.TestClient.strtests.teststr27_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr27_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr27_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr27"
            &   ,args.STRTEST27
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST27)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr29, @Task<TraditionalBridge.TestClient.strtests.teststr29_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr29_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr29_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr29"
            &   ,args.ordnum
            &   ,args.DBORDER
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)

            ArgumentHelper.Argument(2, resultTuple, response.DBORDER)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr3, @Task<TraditionalBridge.TestClient.strtests.teststr3_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr3_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr3_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr3"
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr30, @Task<TraditionalBridge.TestClient.strtests.teststr30_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr30_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr30_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr30"
            &   ,args.STRTEST30
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST30)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr31, @Task<TraditionalBridge.TestClient.strtests.teststr31_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr31_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr31_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr31"
            &   ,args.STRTEST31
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.STRTEST31)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr32, @Task<TraditionalBridge.TestClient.strtests.teststr32_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr32_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr32_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr32"
            &   ,args.DATASET
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.DATASET)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr4, @Task<TraditionalBridge.TestClient.strtests.teststr4_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr4_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr4_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr4"
            &   ,args.strtest4
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest4)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr5, @Task<TraditionalBridge.TestClient.strtests.teststr5_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr5_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr5_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr5"
            &   ,args.strtest1
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest1)
            ArgumentHelper.Argument(2, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr6, @Task<TraditionalBridge.TestClient.strtests.teststr6_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr6_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr6_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr6"
            &   ,args.p1
            &   ,args.strtest1
            &   ,args.p3
            &   ,args.strtest3
            &   ,args.p5
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.p1)
            ArgumentHelper.Argument(2, resultTuple, response.strtest1)
            ArgumentHelper.Argument(3, resultTuple, response.p3)
            ArgumentHelper.Argument(4, resultTuple, response.strtest3)
            ArgumentHelper.Argument(5, resultTuple, response.p5)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr7, @Task<TraditionalBridge.TestClient.strtests.teststr7_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr7_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr7_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr7"
            &   ,args.strtest7
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest7)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr8, @Task<TraditionalBridge.TestClient.strtests.teststr8_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr8_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr8_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr8"
            &   ,args.strtest3
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.strtest3)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method teststr9, @Task<TraditionalBridge.TestClient.strtests.teststr9_Response>
            required in args, @TraditionalBridge.TestClient.strtests.teststr9_Request
        proc
            ;;Prepare the response object
            data response = new TraditionalBridge.TestClient.strtests.teststr9_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("teststr9"
            &   ,args.p1de7
            &   ,args.strtest3
            &   ,args.p3al10
            &   )

            ArgumentHelper.Argument(1, resultTuple, response.p1de7)
            ArgumentHelper.Argument(2, resultTuple, response.strtest3)
            ArgumentHelper.Argument(3, resultTuple, response.p3al10)

            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
