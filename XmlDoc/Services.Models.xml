<?xml version='1.0'?>
<!--Generated by xmldoc v12.2.1 on 01 DEC 2022 16:19:24-->
<doc>
  <assembly>
    <name>Services.Models</name>
  </assembly>
  <members>
    <member name="T:Services.Models.AppSettings">
       <summary>
       Application settings.
       </summary>
    </member>
    <member name="P:Services.Models.AppSettings.EnvironmentVariables">
       <summary>
       A collection of environment variables as required at runtime by the application.
       These environment variables will be established via the ProcessEnvironmentVariables
       method below.
       </summary>
    </member>
    <member name="M:Services.Models.AppSettings.ProcessEnvironmentVariables">
       <summary>
       This method is called by the AppSettingsMonitor to initially set the emvironment variables,
       and also to reset the values of environment variables if the application configuration
       changes.
       </summary>
    </member>
    <member name="M:Services.Models.Customer.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Customer.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Customer.CustomerNumber">
       <summary>
       Customer number
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Name">
       <summary>
       Customer name
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Street">
       <summary>
       Street address
       </summary>
    </member>
    <member name="P:Services.Models.Customer.City">
       <summary>
       City
       </summary>
    </member>
    <member name="P:Services.Models.Customer.State">
       <summary>
       State
       </summary>
    </member>
    <member name="P:Services.Models.Customer.ZipCode">
       <summary>
       Zip code
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Contact">
       <summary>
       Contact name
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Phone">
       <summary>
       Phone number
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Fax">
       <summary>
       Fax number
       </summary>
    </member>
    <member name="P:Services.Models.Customer.FavoriteItem">
       <summary>
       Customers favorite item
       </summary>
    </member>
    <member name="P:Services.Models.Customer.PaymentTermsCode">
       <summary>
       Payment terms code
       </summary>
    </member>
    <member name="P:Services.Models.Customer.TaxId">
       <summary>
       Customers tax ID number
       </summary>
    </member>
    <member name="P:Services.Models.Customer.CreditLimit">
       <summary>
       Credit limit
       </summary>
    </member>
    <member name="P:Services.Models.Customer.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Customer.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Customer.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Customer.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Customer.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Customer.REL_CustomerOrders">
       <summary>
       Relationship (Type D)
       CUSTOMER.CUSTOMER_NUMBER (one) &lt;-&gt; (many) ORDER.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="P:Services.Models.Customer.REL_CustomerFavoriteItem">
       <summary>
       Relationship (Type C)
       CUSTOMER.FAVORITE_ITEM (one) --&gt; (one) ITEM.ITEM_NUMBER
       </summary>
    </member>
    <member name="P:Services.Models.Customer.REL_CustomerNotes">
       <summary>
       Relationship (Type D)
       CUSTOMER.CUSTOMER_NUMBER (one) &lt;-&gt; (many) CUSTOMER_NOTE.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="P:Services.Models.Customer.REL_CustomerEx">
       <summary>
       Relationship (Type B)
       CUSTOMER.CUSTOMER_NUMBER (one) --&gt; (one) --&gt; (one) CUSTOMER_EX.PRIMARY
       </summary>
    </member>
    <member name="P:Services.Models.Customer.REL_Differentpk">
       <summary>
       Relationship (Type B)
       CUSTOMER.CUSTOMER_NUMBER (one) --&gt; (one) --&gt; (one) DIFFERENTPK.ID
       </summary>
    </member>
    <member name="M:Services.Models.Customer.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="M:Services.Models.CustomerEx.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.CustomerEx.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.Customerid">
       <summary>
       
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.Extradata">
       <summary>
       
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.CustomerEx.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.CustomerEx.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.CustomerEx.REL_Customer">
       <summary>
       Relationship (Type B)
       CUSTOMER_EX.PRIMARY (one) --&gt; (one) --&gt; (one) CUSTOMER.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.CustomerEx.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strCustomerEx">
       <summary>
       Global structure representing a CustomerEx record.
       </summary>
    </member>
    <member name="T:Services.Models.CustomerExMetadata">
       <summary>
       Exposes metadata relating to the CustomerEx model class.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerExMetadata.#ctor">
       <summary>
       Constructs an new CustomerExMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerExMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new CustomerEx object containing data from a record and a GRFA.
       The related data properties () will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new CustomerEx object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerExMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new CustomerEx object containing data from a record and a GRFA.
       The related data properties () will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new CustomerEx object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties () to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerExMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerExMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="T:Services.Models.strCustomer">
       <summary>
       Global structure representing a Customer record.
       </summary>
    </member>
    <member name="T:Services.Models.CustomerMetadata">
       <summary>
       Exposes metadata relating to the Customer model class.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerMetadata.#ctor">
       <summary>
       Constructs an new CustomerMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Customer object containing data from a record and a GRFA.
       The related data properties (REL_CustomerOrders, REL_CustomerFavoriteItem, REL_CustomerNotes,  and ) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Customer object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Customer object containing data from a record and a GRFA.
       The related data properties (REL_CustomerOrders, REL_CustomerFavoriteItem, REL_CustomerNotes,  and ) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Customer object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_CustomerOrders, REL_CustomerFavoriteItem, REL_CustomerNotes,  and ) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.CustomerNote.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNote.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.CustomerNumber">
       <summary>
       Customer number
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.NoteNumber">
       <summary>
       Note number
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.NoteText">
       <summary>
       Note text
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNote.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNote.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.CustomerNote.REL_Customer">
       <summary>
       Relationship (Type A)
       CUSTOMER_NOTE.CUSTOMER_NUMBER (one) --&gt; (one) --&gt; (many) CUSTOMER.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNote.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strCustomerNote">
       <summary>
       Global structure representing a CustomerNote record.
       </summary>
    </member>
    <member name="T:Services.Models.CustomerNoteMetadata">
       <summary>
       Exposes metadata relating to the CustomerNote model class.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNoteMetadata.#ctor">
       <summary>
       Constructs an new CustomerNoteMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.CustomerNoteMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new CustomerNote object containing data from a record and a GRFA.
       The related data properties (REL_Customer) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new CustomerNote object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerNoteMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new CustomerNote object containing data from a record and a GRFA.
       The related data properties (REL_Customer) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new CustomerNote object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Customer) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerNoteMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.CustomerNoteMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="T:Services.Models.DbContext">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.DbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Services.Models.DbContext})">
       <summary>
       Construct a new DbContext.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Customers">
       <summary>
       Exposes Customer data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.CustomerNotes">
       <summary>
       Exposes CustomerNote data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Items">
       <summary>
       Exposes Item data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Orders">
       <summary>
       Exposes Order data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.OrderItems">
       <summary>
       Exposes OrderItem data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Vendors">
       <summary>
       Exposes Vendor data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.CustomerExs">
       <summary>
       Exposes CustomerEx data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Nonuniquepks">
       <summary>
       Exposes Nonuniquepk data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Differentpks">
       <summary>
       Exposes Differentpk data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Testcars">
       <summary>
       Exposes Testcar data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Testcarlots">
       <summary>
       Exposes Testcarlot data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Testcarowner1s">
       <summary>
       Exposes Testcarowner1 data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Testcarowner2s">
       <summary>
       Exposes Testcarowner2 data.
       </summary>
    </member>
    <member name="P:Services.Models.DbContext.Testcarowner3s">
       <summary>
       Exposes Testcarowner3 data.
       </summary>
    </member>
    <member name="M:Services.Models.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Differentpk.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Differentpk.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Id">
       <summary>
       ID
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Alphapk">
       <summary>
       Alpha PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Decimalpk">
       <summary>
       Decimal PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Intergerpk">
       <summary>
       Integer PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Datepk">
       <summary>
       Date PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Timepk">
       <summary>
       Time PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Booleanpk">
       <summary>
       Boolean PK
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Differentpk.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Differentpk.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Differentpk.REL_Customer">
       <summary>
       Relationship (Type B)
       DIFFERENTPK.ID (one) --&gt; (one) --&gt; (one) CUSTOMER.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.Differentpk.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strDifferentpk">
       <summary>
       Global structure representing a Differentpk record.
       </summary>
    </member>
    <member name="T:Services.Models.DifferentpkMetadata">
       <summary>
       Exposes metadata relating to the Differentpk model class.
       </summary>
    </member>
    <member name="M:Services.Models.DifferentpkMetadata.#ctor">
       <summary>
       Constructs an new DifferentpkMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.DifferentpkMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Differentpk object containing data from a record and a GRFA.
       The related data properties () will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Differentpk object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.DifferentpkMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Differentpk object containing data from a record and a GRFA.
       The related data properties () will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Differentpk object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties () to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.DifferentpkMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.DifferentpkMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Item.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Item.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Item.ItemNumber">
       <summary>
       Item number
       </summary>
    </member>
    <member name="P:Services.Models.Item.VendorNumber">
       <summary>
       Vendor number
       </summary>
    </member>
    <member name="P:Services.Models.Item.Size">
       <summary>
       Size in gallons
       </summary>
    </member>
    <member name="P:Services.Models.Item.CommonName">
       <summary>
       Common name
       </summary>
    </member>
    <member name="P:Services.Models.Item.LatinName">
       <summary>
       Latin name
       </summary>
    </member>
    <member name="P:Services.Models.Item.ZoneCode">
       <summary>
       Hardiness zone code
       </summary>
    </member>
    <member name="P:Services.Models.Item.Type">
       <summary>
       Type code
       </summary>
    </member>
    <member name="P:Services.Models.Item.Flowering">
       <summary>
       Flowering?
       </summary>
    </member>
    <member name="P:Services.Models.Item.FlowerColor">
       <summary>
       Flower color
       </summary>
    </member>
    <member name="P:Services.Models.Item.Shape">
       <summary>
       Shape
       </summary>
    </member>
    <member name="P:Services.Models.Item.MaxHeight">
       <summary>
       Maximum height (in inches)
       </summary>
    </member>
    <member name="P:Services.Models.Item.MaxWidth">
       <summary>
       Maximum width (in inches)
       </summary>
    </member>
    <member name="P:Services.Models.Item.WaterRequirement">
       <summary>
       Water requirements
       </summary>
    </member>
    <member name="P:Services.Models.Item.SunRequirement">
       <summary>
       Sun requirements
       </summary>
    </member>
    <member name="P:Services.Models.Item.BinLocation">
       <summary>
       Bin/aisle
       </summary>
    </member>
    <member name="P:Services.Models.Item.QtyOnHand">
       <summary>
       Qty on hand
       </summary>
    </member>
    <member name="P:Services.Models.Item.QtyAllocated">
       <summary>
       Qty allocated
       </summary>
    </member>
    <member name="P:Services.Models.Item.QtyOnOrder">
       <summary>
       Qty on order
       </summary>
    </member>
    <member name="P:Services.Models.Item.ReorderLevel">
       <summary>
       Reorder point
       </summary>
    </member>
    <member name="P:Services.Models.Item.UnitPrice">
       <summary>
       Unit price
       </summary>
    </member>
    <member name="P:Services.Models.Item.CostPrice">
       <summary>
       Item cost
       </summary>
    </member>
    <member name="P:Services.Models.Item.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Item.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Item.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Item.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Item.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Item.REL_Vendor">
       <summary>
       Relationship (Type A)
       ITEM.VENDOR_NUMBER (one) --&gt; (one) --&gt; (many) VENDOR.VENDOR_NUMBER
       </summary>
    </member>
    <member name="P:Services.Models.Item.REL_OrderItems">
       <summary>
       Relationship (Type D)
       ITEM.ITEM_NUMBER (one) &lt;-&gt; (many) ORDER_ITEM.ITEM_ORDERED
       </summary>
    </member>
    <member name="M:Services.Models.Item.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strItem">
       <summary>
       Global structure representing a Item record.
       </summary>
    </member>
    <member name="T:Services.Models.ItemMetadata">
       <summary>
       Exposes metadata relating to the Item model class.
       </summary>
    </member>
    <member name="M:Services.Models.ItemMetadata.#ctor">
       <summary>
       Constructs an new ItemMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.ItemMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Item object containing data from a record and a GRFA.
       The related data properties (REL_Vendor and REL_OrderItems) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Item object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.ItemMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Item object containing data from a record and a GRFA.
       The related data properties (REL_Vendor and REL_OrderItems) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Item object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Vendor and REL_OrderItems) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.ItemMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.ItemMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Nonuniquepk.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Nonuniquepk.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Nonuniquepk.Pk">
       <summary>
       Primary Key
       </summary>
    </member>
    <member name="P:Services.Models.Nonuniquepk.Name">
       <summary>
       Name of person
       </summary>
    </member>
    <member name="P:Services.Models.Nonuniquepk.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Nonuniquepk.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Nonuniquepk.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Nonuniquepk.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Nonuniquepk.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="T:Services.Models.strNonuniquepk">
       <summary>
       Global structure representing a Nonuniquepk record.
       </summary>
    </member>
    <member name="T:Services.Models.NonuniquepkMetadata">
       <summary>
       Exposes metadata relating to the Nonuniquepk model class.
       </summary>
    </member>
    <member name="M:Services.Models.NonuniquepkMetadata.#ctor">
       <summary>
       Constructs an new NonuniquepkMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.NonuniquepkMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Nonuniquepk object containing data from a record and a GRFA.
       </summary>
       <param name="dataArea">The record containing the data for the new Nonuniquepk object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.NonuniquepkMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Nonuniquepk object containing data from a record and a GRFA.
       </summary>
       <param name="dataArea">The record containing the data for the new Nonuniquepk object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.NonuniquepkMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.NonuniquepkMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Order.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Order.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Order.OrderNumber">
       <summary>
       Order number
       </summary>
    </member>
    <member name="P:Services.Models.Order.CustomerNumber">
       <summary>
       Customer number
       </summary>
    </member>
    <member name="P:Services.Models.Order.PlacedBy">
       <summary>
       Order placed by
       </summary>
    </member>
    <member name="P:Services.Models.Order.CustomerReference">
       <summary>
       Customer order reference
       </summary>
    </member>
    <member name="P:Services.Models.Order.PaymentTermsCode">
       <summary>
       Payment terms code
       </summary>
    </member>
    <member name="P:Services.Models.Order.DateOrdered">
       <summary>
       Date ordered
       </summary>
    </member>
    <member name="P:Services.Models.Order.DateCompleted">
       <summary>
       Date order completed
       </summary>
    </member>
    <member name="P:Services.Models.Order.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Order.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Order.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Order.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Order.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Order.REL_OrderItems">
       <summary>
       Relationship (Type D)
       ORDER.ORDER_NUMBER (one) &lt;-&gt; (many) ORDER_ITEM.ORDER_NUMBER_AND_LINE_ITEM
       </summary>
    </member>
    <member name="P:Services.Models.Order.REL_Customer">
       <summary>
       Relationship (Type A)
       ORDER.CUSTOMER_NUMBER (one) --&gt; (one) --&gt; (many) CUSTOMER.CUSTOMER_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.Order.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="M:Services.Models.OrderItem.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.OrderItem.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.OrderNumber">
       <summary>
       Order number
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.ItemNumber">
       <summary>
       Line item number
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.ItemOrdered">
       <summary>
       Item ordered
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.QuantityOrdered">
       <summary>
       Quantity ordered
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.UnitPrice">
       <summary>
       Unit price
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.DateShipped">
       <summary>
       Date shipped
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.InvoiceNumber">
       <summary>
       Invoice number
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.OrderItem.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.OrderItem.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.REL_Order">
       <summary>
       Relationship (Type A)
       ORDER_ITEM.ORDER_NUMBER_AND_LINE_ITEM (one) --&gt; (one) --&gt; (many) ORDER.ORDER_NUMBER
       </summary>
    </member>
    <member name="P:Services.Models.OrderItem.REL_Item">
       <summary>
       Relationship (Type A)
       ORDER_ITEM.ITEM_ORDERED (one) --&gt; (one) --&gt; (many) ITEM.ITEM_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.OrderItem.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strOrderItem">
       <summary>
       Global structure representing a OrderItem record.
       </summary>
    </member>
    <member name="T:Services.Models.OrderItemMetadata">
       <summary>
       Exposes metadata relating to the OrderItem model class.
       </summary>
    </member>
    <member name="M:Services.Models.OrderItemMetadata.#ctor">
       <summary>
       Constructs an new OrderItemMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.OrderItemMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new OrderItem object containing data from a record and a GRFA.
       The related data properties (REL_Order and REL_Item) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new OrderItem object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderItemMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new OrderItem object containing data from a record and a GRFA.
       The related data properties (REL_Order and REL_Item) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new OrderItem object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Order and REL_Item) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderItemMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderItemMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="T:Services.Models.strOrder">
       <summary>
       Global structure representing a Order record.
       </summary>
    </member>
    <member name="T:Services.Models.OrderMetadata">
       <summary>
       Exposes metadata relating to the Order model class.
       </summary>
    </member>
    <member name="M:Services.Models.OrderMetadata.#ctor">
       <summary>
       Constructs an new OrderMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.OrderMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Order object containing data from a record and a GRFA.
       The related data properties (REL_OrderItems and REL_Customer) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Order object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Order object containing data from a record and a GRFA.
       The related data properties (REL_OrderItems and REL_Customer) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Order object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_OrderItems and REL_Customer) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.OrderMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Testcar.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Testcar.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Id">
       <summary>
       Car ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Name">
       <summary>
       Name of car
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Lotid">
       <summary>
       Car lot ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Owner1">
       <summary>
       Car owner 1
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Owner2">
       <summary>
       Car owner 2
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Owner3">
       <summary>
       Car owner 3
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Testcar.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Testcar.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.REL_Testcarlot">
       <summary>
       Relationship (Type A)
       TESTCAR.LOTID (one) --&gt; (one) --&gt; (many) TESTCARLOT.ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.REL_Testcarowner1">
       <summary>
       Relationship (Type A)
       TESTCAR.OWNERID1 (one) --&gt; (one) --&gt; (many) TESTCAROWNER1.OWNERID
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.REL_Testcarowner2">
       <summary>
       Relationship (Type A)
       TESTCAR.OWNERID2 (one) --&gt; (one) --&gt; (many) TESTCAROWNER2.OWNERID
       </summary>
    </member>
    <member name="P:Services.Models.Testcar.REL_Testcarowner3">
       <summary>
       Relationship (Type A)
       TESTCAR.OWNERID3 (one) --&gt; (one) --&gt; (many) TESTCAROWNER3.OWNERID
       </summary>
    </member>
    <member name="M:Services.Models.Testcar.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="M:Services.Models.Testcarlot.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Testcarlot.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.Id">
       <summary>
       Car lot ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.Name">
       <summary>
       Car lot name
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Testcarlot.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Testcarlot.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Testcarlot.REL_Testcars">
       <summary>
       Relationship (Type D)
       TESTCARLOT.ID (one) &lt;-&gt; (many) TESTCAR.LOTID
       </summary>
    </member>
    <member name="M:Services.Models.Testcarlot.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strTestcarlot">
       <summary>
       Global structure representing a Testcarlot record.
       </summary>
    </member>
    <member name="T:Services.Models.TestcarlotMetadata">
       <summary>
       Exposes metadata relating to the Testcarlot model class.
       </summary>
    </member>
    <member name="M:Services.Models.TestcarlotMetadata.#ctor">
       <summary>
       Constructs an new TestcarlotMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.TestcarlotMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Testcarlot object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarlot object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarlotMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Testcarlot object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarlot object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Testcars) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarlotMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarlotMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="T:Services.Models.strTestcar">
       <summary>
       Global structure representing a Testcar record.
       </summary>
    </member>
    <member name="T:Services.Models.TestcarMetadata">
       <summary>
       Exposes metadata relating to the Testcar model class.
       </summary>
    </member>
    <member name="M:Services.Models.TestcarMetadata.#ctor">
       <summary>
       Constructs an new TestcarMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.TestcarMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Testcar object containing data from a record and a GRFA.
       The related data properties (REL_Testcarlot, REL_Testcarowner1, REL_Testcarowner2 and REL_Testcarowner3) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcar object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Testcar object containing data from a record and a GRFA.
       The related data properties (REL_Testcarlot, REL_Testcarowner1, REL_Testcarowner2 and REL_Testcarowner3) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcar object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Testcarlot, REL_Testcarowner1, REL_Testcarowner2 and REL_Testcarowner3) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.TestcarMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.Id">
       <summary>
       Owner ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.Name">
       <summary>
       Owner name
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner1.REL_Testcars">
       <summary>
       Relationship (Type D)
       TESTCAROWNER1.OWNERID (one) &lt;-&gt; (many) TESTCAR.OWNERID1
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strTestcarowner1">
       <summary>
       Global structure representing a Testcarowner1 record.
       </summary>
    </member>
    <member name="T:Services.Models.Testcarowner1Metadata">
       <summary>
       Exposes metadata relating to the Testcarowner1 model class.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1Metadata.#ctor">
       <summary>
       Constructs an new Testcarowner1Metadata object.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner1Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Testcarowner1 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner1 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner1Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Testcarowner1 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner1 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Testcars) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner1Metadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner1Metadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.Id">
       <summary>
       Owner ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.Name">
       <summary>
       Owner name
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner2.REL_Testcars">
       <summary>
       Relationship (Type D)
       TESTCAROWNER2.OWNERID (one) &lt;-&gt; (many) TESTCAR.OWNERID2
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strTestcarowner2">
       <summary>
       Global structure representing a Testcarowner2 record.
       </summary>
    </member>
    <member name="T:Services.Models.Testcarowner2Metadata">
       <summary>
       Exposes metadata relating to the Testcarowner2 model class.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2Metadata.#ctor">
       <summary>
       Constructs an new Testcarowner2Metadata object.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner2Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Testcarowner2 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner2 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner2Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Testcarowner2 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner2 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Testcars) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner2Metadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner2Metadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.Id">
       <summary>
       Owner ID
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.Name">
       <summary>
       Owner name
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Testcarowner3.REL_Testcars">
       <summary>
       Relationship (Type D)
       TESTCAROWNER3.OWNERID (one) &lt;-&gt; (many) TESTCAR.OWNERID3
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strTestcarowner3">
       <summary>
       Global structure representing a Testcarowner3 record.
       </summary>
    </member>
    <member name="T:Services.Models.Testcarowner3Metadata">
       <summary>
       Exposes metadata relating to the Testcarowner3 model class.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3Metadata.#ctor">
       <summary>
       Constructs an new Testcarowner3Metadata object.
       </summary>
    </member>
    <member name="M:Services.Models.Testcarowner3Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Testcarowner3 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner3 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner3Metadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Testcarowner3 object containing data from a record and a GRFA.
       The related data properties (REL_Testcars) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Testcarowner3 object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Testcars) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner3Metadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.Testcarowner3Metadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
    <member name="M:Services.Models.Vendor.#ctor">
       <summary>
        Constructor, initialise the base fields
       </summary>
    </member>
    <member name="M:Services.Models.Vendor.#ctor(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
        Alternate Constructor, accepts the structured data
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.VendorNumber">
       <summary>
       Vendor number
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Name">
       <summary>
       Vendor name
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Street">
       <summary>
       Street address
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.City">
       <summary>
       City
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.State">
       <summary>
       State
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.ZipCode">
       <summary>
       Zip Code
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Contact">
       <summary>
       Contact name
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Phone">
       <summary>
       Phone number
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Fax">
       <summary>
       Fax number
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.PaymentTermsCode">
       <summary>
       Payment terms code
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.SynergyRecord">
       <summary>
       Expose the complete synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.OriginalSynergyRecord">
       <summary>
       Expose the complete original synergy record
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.Metadata">
       <summary>
       Metadata describing the public field properties
       </summary>
    </member>
    <member name="M:Services.Models.Vendor.InternalSynergyRecord(Harmony.Core.AlphaAction)">
       <summary>
      
       </summary>
    </member>
    <member name="M:Services.Models.Vendor.InternalGetValues">
       <summary>
      
       </summary>
    </member>
    <member name="P:Services.Models.Vendor.REL_Items">
       <summary>
       Relationship (Type D)
       VENDOR.VENDOR_NUMBER (one) &lt;-&gt; (many) ITEM.VENDOR_NUMBER
       </summary>
    </member>
    <member name="M:Services.Models.Vendor.Validate(Harmony.Core.ValidationType,System.IServiceProvider)">
       <summary>
       Validate data
       </summary>
       <param name="type">Validation type (create, update or delete)</param>
       <param name="sp">Serices provider</param>
    </member>
    <member name="T:Services.Models.strVendor">
       <summary>
       Global structure representing a Vendor record.
       </summary>
    </member>
    <member name="T:Services.Models.VendorMetadata">
       <summary>
       Exposes metadata relating to the Vendor model class.
       </summary>
    </member>
    <member name="M:Services.Models.VendorMetadata.#ctor">
       <summary>
       Constructs an new VendorMetadata object.
       </summary>
    </member>
    <member name="M:Services.Models.VendorMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a)">
       <summary>
       Returns a new Vendor object containing data from a record and a GRFA.
       The related data properties (REL_Items) will not be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Vendor object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.VendorMetadata.MakeNew(Synergex.SynergyDE.a,Synergex.SynergyDE.a,System.Collections.Generic.KeyValuePair{System.String,System.Object}[#])">
       <summary>
       Returns a new Vendor object containing data from a record and a GRFA.
       The related data properties (REL_Items) will be populated.
       </summary>
       <param name="dataArea">The record containing the data for the new Vendor object.</param>
       <param name="grfa">The GRFA associated with the current state of the data.</param>
       <param name="joinedObjects">Data to allow the related data properties (REL_Items) to be populated.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.VendorMetadata.FormatKeyLiteral(System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
       <summary>
       Formats a literal value for a key lookup.
       </summary>
       <param name="keyNumber">Key number.</param>
       <param name="parts">Dictionary containing key segment names and values.</param>
       <returns></returns>
    </member>
    <member name="M:Services.Models.VendorMetadata.InitializeCustomFields">
      <summary>
       Provide a partial method to allow for initialization of custom fields.
      </summary>
    </member>
  </members>
</doc>
