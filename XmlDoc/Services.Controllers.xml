<?xml version='1.0'?>
<!--Generated by xmldoc v12.2.1 on 01 DEC 2022 16:27:32-->
<doc>
  <assembly>
    <name>Services.Controllers</name>
  </assembly>
  <members>
    <member name="T:Services.Controllers.CustomerExsController">
       <summary>
       extended fields for a customer record
       </summary>
       <remarks>
       OData endpoints for extended fields for a customer record
       </remarks>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of CustomerExsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.GetCustomerExs">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.GetCustomerExByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerid" example="123"></param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.PostCustomerEx(Services.Models.CustomerEx)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.PutCustomerEx(System.Int32,Services.Models.CustomerEx)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerid" example="123"></param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.PatchCustomerEx(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.CustomerEx})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerid" example="123"></param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.DeleteCustomerEx(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerid" example="123"></param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerExsController.GetExtradata(System.Int32)">
       <summary>
       Get the Extradata property of a single CustomerEx, by primary key.
       </summary>
       <param name="key"></param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.CustomerNotesController">
       <summary>
       Customer notes
       </summary>
       <remarks>
       OData endpoints for Customer notes
       </remarks>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of CustomerNotesController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.GetCustomerNotes">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.GetCustomerNotesByPK(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="123">Customer number</param>
       <returns>Returns a collection of any CustomerNotes matching non-unique primary key, or an empty collection if no matching records are found.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.PutCustomerNoteByCustomerNumber(System.Int32,Services.Models.CustomerNote)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="123">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.PatchCustomerNoteByCustomerNumber(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.CustomerNote})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="123">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomerNotesController.DeleteCustomerNoteByCustomerNumber(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="123">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="T:Services.Controllers.CustomersController">
       <summary>
       Customer record
       </summary>
       <remarks>
       OData endpoints for Customer record
       </remarks>
    </member>
    <member name="M:Services.Controllers.CustomersController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of CustomersController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomers">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomerByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="355232">Customer number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByState(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key State
       </summary>
       <remarks>
      
       </remarks>
       <param name="aState" example="MO">State</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByZip(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Zip
       </summary>
       <remarks>
      
       </remarks>
       <param name="aZipCode" example="64127">Zip code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCustomersByPaymentTerms(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key PaymentTerms
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPaymentTermsCode" example="30">Payment terms code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.PostCustomer(Services.Models.Customer)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.PutCustomer(System.Int32,Services.Models.Customer)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="355232">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.PatchCustomer(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Customer})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="355232">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.DeleteCustomer(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="355232">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Customer, by primary key.
       </summary>
       <param name="key">Customer name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetStreet(System.Int32)">
       <summary>
       Get the Street property of a single Customer, by primary key.
       </summary>
       <param name="key">Street address</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCity(System.Int32)">
       <summary>
       Get the City property of a single Customer, by primary key.
       </summary>
       <param name="key">City</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetState(System.Int32)">
       <summary>
       Get the State property of a single Customer, by primary key.
       </summary>
       <param name="key">State</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetZipCode(System.Int32)">
       <summary>
       Get the ZipCode property of a single Customer, by primary key.
       </summary>
       <param name="key">Zip code</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetContact(System.Int32)">
       <summary>
       Get the Contact property of a single Customer, by primary key.
       </summary>
       <param name="key">Contact name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetPhone(System.Int32)">
       <summary>
       Get the Phone property of a single Customer, by primary key.
       </summary>
       <param name="key">Phone number</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetFax(System.Int32)">
       <summary>
       Get the Fax property of a single Customer, by primary key.
       </summary>
       <param name="key">Fax number</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetFavoriteItem(System.Int32)">
       <summary>
       Get the FavoriteItem property of a single Customer, by primary key.
       </summary>
       <param name="key">Customers favorite item</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetPaymentTermsCode(System.Int32)">
       <summary>
       Get the PaymentTermsCode property of a single Customer, by primary key.
       </summary>
       <param name="key">Payment terms code</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetTaxId(System.Int32)">
       <summary>
       Get the TaxId property of a single Customer, by primary key.
       </summary>
       <param name="key">Customers tax ID number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.CustomersController.GetCreditLimit(System.Int32)">
       <summary>
       Get the CreditLimit property of a single Customer, by primary key.
       </summary>
       <param name="key">Credit limit</param>
       <returns>
       Returns a decimal containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.DifferentpksController">
       <summary>
       Str with different PK types
       </summary>
       <remarks>
       OData endpoints for Str with different PK types
       </remarks>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of DifferentpksController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpks">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpkByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByAlphapk(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key Alphapk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aAlphapk" example="ABC">Alpha PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByDecimalpk(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Decimalpk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDecimalpk" example="123">Decimal PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByIntergerpk(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Intergerpk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aIntergerpk" example="123">Integer PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByDatepk(System.DateTime)">
       <summary>
       Query a subset of records identified by non-unique alternate key Datepk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDatepk" example="123">Date PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByTimepk(System.DateTime)">
       <summary>
       Query a subset of records identified by non-unique alternate key Timepk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aTimepk" example="123">Time PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDifferentpksByBooleanpk(System.Boolean)">
       <summary>
       Query a subset of records identified by non-unique alternate key Booleanpk
       </summary>
       <remarks>
      
       </remarks>
       <param name="aBooleanpk" example="True">Boolean PK</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.PostDifferentpk(Services.Models.Differentpk)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.PutDifferentpk(System.Int32,Services.Models.Differentpk)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.PatchDifferentpk(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Differentpk})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.DeleteDifferentpk(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetAlphapk(System.Int32)">
       <summary>
       Get the Alphapk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Alpha PK</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDecimalpk(System.Int32)">
       <summary>
       Get the Decimalpk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Decimal PK</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetIntergerpk(System.Int32)">
       <summary>
       Get the Intergerpk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Integer PK</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetDatepk(System.Int32)">
       <summary>
       Get the Datepk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Date PK</param>
       <returns>
       Returns a DateTime containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetTimepk(System.Int32)">
       <summary>
       Get the Timepk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Time PK</param>
       <returns>
       Returns a DateTime containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.DifferentpksController.GetBooleanpk(System.Int32)">
       <summary>
       Get the Booleanpk property of a single Differentpk, by primary key.
       </summary>
       <param name="key">Boolean PK</param>
       <returns>
       Returns  containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.ItemsController">
       <summary>
       Item master record
       </summary>
       <remarks>
       OData endpoints for Item master record
       </remarks>
    </member>
    <member name="M:Services.Controllers.ItemsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of ItemsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItems">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemNumber" example="19">Item number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByVendorNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key VendorNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="41">Vendor number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByColor(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key Color
       </summary>
       <remarks>
      
       </remarks>
       <param name="aFlowerColor" example="Red">Flower color</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsBySize(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Size
       </summary>
       <remarks>
      
       </remarks>
       <param name="aSize" example="5">Size in gallons</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetItemsByName(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key Name
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCommonName" example="European Hackberry">Common name</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.PostItem(Services.Models.Item)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.PutItem(System.Int32,Services.Models.Item)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemNumber" example="19">Item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.PatchItem(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Item})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemNumber" example="19">Item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.DeleteItem(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemNumber" example="19">Item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetVendorNumber(System.Int32)">
       <summary>
       Get the VendorNumber property of a single Item, by primary key.
       </summary>
       <param name="key">Vendor number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetSize(System.Int32)">
       <summary>
       Get the Size property of a single Item, by primary key.
       </summary>
       <param name="key">Size in gallons</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetCommonName(System.Int32)">
       <summary>
       Get the CommonName property of a single Item, by primary key.
       </summary>
       <param name="key">Common name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetLatinName(System.Int32)">
       <summary>
       Get the LatinName property of a single Item, by primary key.
       </summary>
       <param name="key">Latin name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetZoneCode(System.Int32)">
       <summary>
       Get the ZoneCode property of a single Item, by primary key.
       </summary>
       <param name="key">Hardiness zone code</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetType(System.Int32)">
       <summary>
       Get the Type property of a single Item, by primary key.
       </summary>
       <param name="key">Type code</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetFlowering(System.Int32)">
       <summary>
       Get the Flowering property of a single Item, by primary key.
       </summary>
       <param name="key">Flowering?</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetFlowerColor(System.Int32)">
       <summary>
       Get the FlowerColor property of a single Item, by primary key.
       </summary>
       <param name="key">Flower color</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetShape(System.Int32)">
       <summary>
       Get the Shape property of a single Item, by primary key.
       </summary>
       <param name="key">Shape</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetMaxHeight(System.Int32)">
       <summary>
       Get the MaxHeight property of a single Item, by primary key.
       </summary>
       <param name="key">Maximum height (in inches)</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetMaxWidth(System.Int32)">
       <summary>
       Get the MaxWidth property of a single Item, by primary key.
       </summary>
       <param name="key">Maximum width (in inches)</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetWaterRequirement(System.Int32)">
       <summary>
       Get the WaterRequirement property of a single Item, by primary key.
       </summary>
       <param name="key">Water requirements</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetSunRequirement(System.Int32)">
       <summary>
       Get the SunRequirement property of a single Item, by primary key.
       </summary>
       <param name="key">Sun requirements</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetBinLocation(System.Int32)">
       <summary>
       Get the BinLocation property of a single Item, by primary key.
       </summary>
       <param name="key">Bin/aisle</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetQtyOnHand(System.Int32)">
       <summary>
       Get the QtyOnHand property of a single Item, by primary key.
       </summary>
       <param name="key">Qty on hand</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetQtyAllocated(System.Int32)">
       <summary>
       Get the QtyAllocated property of a single Item, by primary key.
       </summary>
       <param name="key">Qty allocated</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetQtyOnOrder(System.Int32)">
       <summary>
       Get the QtyOnOrder property of a single Item, by primary key.
       </summary>
       <param name="key">Qty on order</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetReorderLevel(System.Int32)">
       <summary>
       Get the ReorderLevel property of a single Item, by primary key.
       </summary>
       <param name="key">Reorder point</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetUnitPrice(System.Int32)">
       <summary>
       Get the UnitPrice property of a single Item, by primary key.
       </summary>
       <param name="key">Unit price</param>
       <returns>
       Returns a decimal containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.ItemsController.GetCostPrice(System.Int32)">
       <summary>
       Get the CostPrice property of a single Item, by primary key.
       </summary>
       <param name="key">Item cost</param>
       <returns>
       Returns a decimal containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.NonuniquepksController">
       <summary>
       Str with nonunique PKs
       </summary>
       <remarks>
       OData endpoints for Str with nonunique PKs
       </remarks>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of NonuniquepksController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.GetNonuniquepks">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.GetNonuniquepksByPK(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPk" example="123">Primary Key</param>
       <returns>Returns a collection of any Nonuniquepks matching non-unique primary key, or an empty collection if no matching records are found.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.PutNonuniquepkByPk(System.Int32,Services.Models.Nonuniquepk)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPk" example="123">Primary Key</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.PatchNonuniquepkByPk(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Nonuniquepk})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPk" example="123">Primary Key</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.NonuniquepksController.DeleteNonuniquepkByPk(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPk" example="123">Primary Key</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="T:Services.Controllers.OrderItemsController">
       <summary>
       Order items
       </summary>
       <remarks>
       OData endpoints for Order items
       </remarks>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of OrderItemsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItems">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemByPK(System.Int32,System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="5238">Order number</param>
       <param name="aItemNumber" example="1">Line item number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByItemOrdered(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key ItemOrdered
       </summary>
       <remarks>
      
       </remarks>
       <param name="aItemOrdered" example="21">Item ordered</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByDateShipped(System.DateTime)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateShipped
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateShipped" example="2018-03-17T00:00:00-08:00">Date shipped</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetOrderItemsByInvoiceNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key InvoiceNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aInvoiceNumber" example="166825">Invoice number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.PostOrderItem(Services.Models.OrderItem)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.PutOrderItem(System.Int32,System.Int32,Services.Models.OrderItem)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="5238">Order number</param>
       <param name="aItemNumber" example="1">Line item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.PatchOrderItem(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.OrderItem})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="5238">Order number</param>
       <param name="aItemNumber" example="1">Line item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.DeleteOrderItem(System.Int32,System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="5238">Order number</param>
       <param name="aItemNumber" example="1">Line item number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetItemOrdered(System.Int32,System.Int32)">
       <summary>
       Get the ItemOrdered property of a single OrderItem, by primary key.
       </summary>
       <param name="aOrderNumber">Order number</param>
       <param name="aItemNumber">Line item number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetQuantityOrdered(System.Int32,System.Int32)">
       <summary>
       Get the QuantityOrdered property of a single OrderItem, by primary key.
       </summary>
       <param name="aOrderNumber">Order number</param>
       <param name="aItemNumber">Line item number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetUnitPrice(System.Int32,System.Int32)">
       <summary>
       Get the UnitPrice property of a single OrderItem, by primary key.
       </summary>
       <param name="aOrderNumber">Order number</param>
       <param name="aItemNumber">Line item number</param>
       <returns>
       Returns a decimal containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetDateShipped(System.Int32,System.Int32)">
       <summary>
       Get the DateShipped property of a single OrderItem, by primary key.
       </summary>
       <param name="aOrderNumber">Order number</param>
       <param name="aItemNumber">Line item number</param>
       <returns>
       Returns a DateTime containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrderItemsController.GetInvoiceNumber(System.Int32,System.Int32)">
       <summary>
       Get the InvoiceNumber property of a single OrderItem, by primary key.
       </summary>
       <param name="aOrderNumber">Order number</param>
       <param name="aItemNumber">Line item number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.OrdersController">
       <summary>
       Orders
       </summary>
       <remarks>
       OData endpoints for Orders
       </remarks>
    </member>
    <member name="M:Services.Controllers.OrdersController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of OrdersController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrders">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrderByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="162512">Order number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByCustomerNumber(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key CustomerNumber
       </summary>
       <remarks>
      
       </remarks>
       <param name="aCustomerNumber" example="622822">Customer number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByDateOrdered(System.DateTime)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateOrdered
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateOrdered" example="2018-03-01T00:00:00-08:00">Date ordered</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetOrdersByDateCompleted(System.DateTime)">
       <summary>
       Query a subset of records identified by non-unique alternate key DateCompleted
       </summary>
       <remarks>
      
       </remarks>
       <param name="aDateCompleted" example="2018-03-12T00:00:00-08:00">Date order completed</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.PostOrder(Services.Models.Order)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.PutOrder(System.Int32,Services.Models.Order)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="162512">Order number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.PatchOrder(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Order})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="162512">Order number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.DeleteOrder(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOrderNumber" example="162512">Order number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetCustomerNumber(System.Int32)">
       <summary>
       Get the CustomerNumber property of a single Order, by primary key.
       </summary>
       <param name="key">Customer number</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetPlacedBy(System.Int32)">
       <summary>
       Get the PlacedBy property of a single Order, by primary key.
       </summary>
       <param name="key">Order placed by</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetCustomerReference(System.Int32)">
       <summary>
       Get the CustomerReference property of a single Order, by primary key.
       </summary>
       <param name="key">Customer order reference</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetPaymentTermsCode(System.Int32)">
       <summary>
       Get the PaymentTermsCode property of a single Order, by primary key.
       </summary>
       <param name="key">Payment terms code</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetDateOrdered(System.Int32)">
       <summary>
       Get the DateOrdered property of a single Order, by primary key.
       </summary>
       <param name="key">Date ordered</param>
       <returns>
       Returns a DateTime containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersController.GetDateCompleted(System.Int32)">
       <summary>
       Get the DateCompleted property of a single Order, by primary key.
       </summary>
       <param name="key">Date order completed</param>
       <returns>
       Returns a DateTime containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.OrdersMethods.#ctor(Services.Models.DbContext,System.IServiceProvider)">
       <summary>
       Constructor
       </summary>
       <param name="aDbContext">DBContext supplied by dependency injection.</param>
       <param name="aServicesProvider">Services provider supplied by dependency injection.</param>
    </member>
    <member name="M:Services.Controllers.ExternalCallContext.BeforeCall(System.String,System.Object[#])">
       <summary>
       Called before each bridge call, before returning to your code
       </summary>
       <param name="name">name of the method being called</param>
       <param name="args">Arguments being passed to the method, which you could change!</param>
       <returns></returns>
    </member>
    <member name="T:Services.Controllers.TestcarlotsController">
       <summary>
       Test car lot
       </summary>
       <remarks>
       OData endpoints for Test car lot
       </remarks>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of TestcarlotsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.GetTestcarlots">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.GetTestcarlotByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car lot ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.PostTestcarlot(Services.Models.Testcarlot)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.PutTestcarlot(System.Int32,Services.Models.Testcarlot)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car lot ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.PatchTestcarlot(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Testcarlot})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car lot ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarlotsController.DeleteTestcarlot(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car lot ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="T:Services.Controllers.Testcarowner1sController">
       <summary>
       Test car owner 1
       </summary>
       <remarks>
       OData endpoints for Test car owner 1
       </remarks>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of Testcarowner1sController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.GetTestcarowner1s">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.GetTestcarowner1ByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.PostTestcarowner1(Services.Models.Testcarowner1)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.PutTestcarowner1(System.Int32,Services.Models.Testcarowner1)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.PatchTestcarowner1(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Testcarowner1})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.DeleteTestcarowner1(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner1sController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Testcarowner1, by primary key.
       </summary>
       <param name="key">Owner name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.Testcarowner2sController">
       <summary>
       Test car owner 2
       </summary>
       <remarks>
       OData endpoints for Test car owner 2
       </remarks>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of Testcarowner2sController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.GetTestcarowner2s">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.GetTestcarowner2ByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.PostTestcarowner2(Services.Models.Testcarowner2)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.PutTestcarowner2(System.Int32,Services.Models.Testcarowner2)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.PatchTestcarowner2(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Testcarowner2})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.DeleteTestcarowner2(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner2sController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Testcarowner2, by primary key.
       </summary>
       <param name="key">Owner name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.Testcarowner3sController">
       <summary>
       Test car owner 3
       </summary>
       <remarks>
       OData endpoints for Test car owner 3
       </remarks>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of Testcarowner3sController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.GetTestcarowner3s">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.GetTestcarowner3ByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.PostTestcarowner3(Services.Models.Testcarowner3)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.PutTestcarowner3(System.Int32,Services.Models.Testcarowner3)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.PatchTestcarowner3(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Testcarowner3})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.DeleteTestcarowner3(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Owner ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.Testcarowner3sController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Testcarowner3, by primary key.
       </summary>
       <param name="key">Owner name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.TestcarsController">
       <summary>
       Test car
       </summary>
       <remarks>
       OData endpoints for Test car
       </remarks>
    </member>
    <member name="M:Services.Controllers.TestcarsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of TestcarsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcars">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcarByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car ID</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcarsByLotid(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Lotid
       </summary>
       <remarks>
      
       </remarks>
       <param name="aLotid" example="123">Car lot ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcarsByOwnerid1(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Ownerid1
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOwner1" example="123">Car owner 1</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcarsByOwnerid2(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Ownerid2
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOwner2" example="123">Car owner 2</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetTestcarsByOwnerid3(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Ownerid3
       </summary>
       <remarks>
      
       </remarks>
       <param name="aOwner3" example="123">Car owner 3</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.PostTestcar(Services.Models.Testcar)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.PutTestcar(System.Int32,Services.Models.Testcar)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.PatchTestcar(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Testcar})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.DeleteTestcar(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aId" example="123">Car ID</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Testcar, by primary key.
       </summary>
       <param name="key">Name of car</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetLotid(System.Int32)">
       <summary>
       Get the Lotid property of a single Testcar, by primary key.
       </summary>
       <param name="key">Car lot ID</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetOwner1(System.Int32)">
       <summary>
       Get the Owner1 property of a single Testcar, by primary key.
       </summary>
       <param name="key">Car owner 1</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetOwner2(System.Int32)">
       <summary>
       Get the Owner2 property of a single Testcar, by primary key.
       </summary>
       <param name="key">Car owner 2</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.TestcarsController.GetOwner3(System.Int32)">
       <summary>
       Get the Owner3 property of a single Testcar, by primary key.
       </summary>
       <param name="key">Car owner 3</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="T:Services.Controllers.VendorsController">
       <summary>
       Vendor record
       </summary>
       <remarks>
       OData endpoints for Vendor record
       </remarks>
    </member>
    <member name="M:Services.Controllers.VendorsController.#ctor(Services.Models.DbContext,System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Services.Models.AppSettings})">
       <summary>
       Constructs a new instance of VendorsController
       </summary>
       <param name="aDbContext">Database context instance (DI)</param>
       <param name="aServiceProvider">Service provider instance (DI)</param>
       <param name="aAppSettings">Application settings</param>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendors">
       <summary>
       Query the entire collection of records
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorByPK(System.Int32)">
       <summary>
       Query a single record identified by unique primary key
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <returns>Returns a SingleResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByVendstate(System.Int32,System.Int32)">
       <summary>
       Query a single record identified by unique alternate key Vendstate
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <param name="aZipCode" example="03214">Zip Code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByState(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key State
       </summary>
       <remarks>
      
       </remarks>
       <param name="aState" example="NH">State</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByZip(System.Int32)">
       <summary>
       Query a subset of records identified by non-unique alternate key Zip
       </summary>
       <remarks>
      
       </remarks>
       <param name="aZipCode" example="03214">Zip Code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetVendorsByPaymentTerms(System.String)">
       <summary>
       Query a subset of records identified by non-unique alternate key PaymentTerms
       </summary>
       <remarks>
      
       </remarks>
       <param name="aPaymentTermsCode" example="60">Payment terms code</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.PostVendor(Services.Models.Vendor)">
       <summary>
       Create a new record (automatically assigned primary key)
       </summary>
       <remarks>
      
       </remarks>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="200"><HTTP_200_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.PutVendor(System.Int32,Services.Models.Vendor)">
       <summary>
       Update a record if it exists otherwise create a new record (primary key provided by client)
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="201"><HTTP_201_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.PatchVendor(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Services.Models.Vendor})">
       <summary>
       Patch (partial update) an existing record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="400"><HTTP_400_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.DeleteVendor(System.Int32)">
       <summary>
       Delete a record
       </summary>
       <remarks>
      
       </remarks>
       <param name="aVendorNumber" example="39">Vendor number</param>
       <returns>Returns an IActionResult indicating the status of the operation and containing any data that was returned.</returns>
       <response code="204"><HTTP_204_MESSAGE></response>
       <response code="404"><HTTP_404_MESSAGE></response>
       <response code="500"><HTTP_500_MESSAGE></response>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetName(System.Int32)">
       <summary>
       Get the Name property of a single Vendor, by primary key.
       </summary>
       <param name="key">Vendor name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetStreet(System.Int32)">
       <summary>
       Get the Street property of a single Vendor, by primary key.
       </summary>
       <param name="key">Street address</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetCity(System.Int32)">
       <summary>
       Get the City property of a single Vendor, by primary key.
       </summary>
       <param name="key">City</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetState(System.Int32)">
       <summary>
       Get the State property of a single Vendor, by primary key.
       </summary>
       <param name="key">State</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetZipCode(System.Int32)">
       <summary>
       Get the ZipCode property of a single Vendor, by primary key.
       </summary>
       <param name="key">Zip Code</param>
       <returns>
       Returns an int containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetContact(System.Int32)">
       <summary>
       Get the Contact property of a single Vendor, by primary key.
       </summary>
       <param name="key">Contact name</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetPhone(System.Int32)">
       <summary>
       Get the Phone property of a single Vendor, by primary key.
       </summary>
       <param name="key">Phone number</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetFax(System.Int32)">
       <summary>
       Get the Fax property of a single Vendor, by primary key.
       </summary>
       <param name="key">Fax number</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
    <member name="M:Services.Controllers.VendorsController.GetPaymentTermsCode(System.Int32)">
       <summary>
       Get the PaymentTermsCode property of a single Vendor, by primary key.
       </summary>
       <param name="key">Payment terms code</param>
       <returns>
       Returns a string containing the value of the requested property.
      </returns>
    </member>
  </members>
</doc>
