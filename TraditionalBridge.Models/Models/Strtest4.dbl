;;*****************************************************************************
;;
;; Title:       Strtest4.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure STRTEST4.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace TraditionalBridge.Models

    public partial class Strtest4 extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strStrtest4
        private mOriginalSynergyData, strStrtest4
        protected mGlobalRFA  ,a10

        private static sMetadata, @Strtest4Metadata

.region "Constructors"

        static method Strtest4
        proc
            sMetadata = new Strtest4Metadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Strtest4), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Strtest4
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Strtest4
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; DE 10
        ;;; </summary>
        {Range(0,9999999999, ErrorMessage="DE 10 must be between 0 and 9999999999. ")}
        public property Str4Lv1fld1, long
            method get
            proc
                mreturn (long)mSynergyData.str4_lv1fld1
            endmethod
            method set
            proc
                mSynergyData.str4_lv1fld1 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; AL 20
        ;;; </summary>
        {StringLength(20, ErrorMessage="AL 20 cannot exceed 20 characters. ")}
        public property Str4Lv1fld2, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.str4_lv1fld2, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.str4_lv1fld2 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; DE 6
        ;;; </summary>
        {Range(0,999999, ErrorMessage="DE 6 must be between 0 and 999999. ")}
        public property Str4Grp1Str4Lev2fld1, int
            method get
            proc
                mreturn (int)mSynergyData.str4_grp1.str4_lev2fld1
            endmethod
            method set
            proc
                mSynergyData.str4_grp1.str4_lev2fld1 = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(23, ErrorMessage=" cannot exceed 23 characters. ")}
        public property Str4Grp1Str4Lv2grp2, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.str4_grp1.str4_lv2grp2, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.str4_grp1.str4_lv2grp2 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; AL 15
        ;;; </summary>
        {StringLength(15, ErrorMessage="AL 15 cannot exceed 15 characters. ")}
        public property Str4Grp1Str4Lv2fld2, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.str4_grp1.str4_lv2fld2, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.str4_grp1.str4_lv2fld2 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; AL 10
        ;;; </summary>
        {StringLength(10, ErrorMessage="AL 10 cannot exceed 10 characters. ")}
        public property Str4Lv1fld3, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.str4_lv1fld3, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.str4_lv1fld3 = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[6]
        endmethod

.endregion

    endclass

endnamespace
