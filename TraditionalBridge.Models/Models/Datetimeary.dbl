;;*****************************************************************************
;;
;; Title:       Datetimeary.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure DATETIMEARY.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace TraditionalBridge.Models

    public partial class Datetimeary extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strDatetimeary
        private mOriginalSynergyData, strDatetimeary
        protected mGlobalRFA  ,a10

        private static sMetadata, @DatetimearyMetadata

.region "Constructors"

        static method Datetimeary
        proc
            sMetadata = new DatetimearyMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Datetimeary), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Datetimeary
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Datetimeary
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; Date 8 YYYYMMDD 1
        ;;; </summary>
        public property AdtsDt81, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt8[1], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt8[1] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 8 YYYYMMDD 2
        ;;; </summary>
        public property AdtsDt82, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt8[2], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt8[2] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 8 YYYYMMDD 3
        ;;; </summary>
        public property AdtsDt83, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt8[3], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt8[3] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 6 YYMMDD 1
        ;;; </summary>
        public property AdtsDt61, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt6[1], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mSynergyData.adts_dt6[1] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 6 YYMMDD 2
        ;;; </summary>
        public property AdtsDt62, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt6[2], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mSynergyData.adts_dt6[2] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 6 YYMMDD 3
        ;;; </summary>
        public property AdtsDt63, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt6[3], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYMMDD"
                mSynergyData.adts_dt6[3] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 7 YYYYJJJ 1
        ;;; </summary>
        public property AdtsDt71, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt7[1], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mSynergyData.adts_dt7[1] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 7 YYYYJJJ 2
        ;;; </summary>
        public property AdtsDt72, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt7[2], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mSynergyData.adts_dt7[2] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 7 YYYYJJJ 3
        ;;; </summary>
        public property AdtsDt73, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt7[3], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                formatString = "YYYYJJJ"
                mSynergyData.adts_dt7[3] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 5 YYJJJ 1
        ;;; </summary>
        public property AdtsDt51, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt5[1], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt5[1] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 5 YYJJJ 2
        ;;; </summary>
        public property AdtsDt52, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt5[2], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt5[2] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Date 5 YYJJJ 3
        ;;; </summary>
        public property AdtsDt53, DateTime
            method get
            proc
                data formatString = "YYYYMMDD"
                mreturn (DateTime)SynergyDecimalDateConverter.Convert(mSynergyData.adts_dt5[3], ^null, formatString, ^null)
            endmethod
            method set
            proc
                data formatString = "YYYYMMDD"
                mSynergyData.adts_dt5[3] = (D)SynergyDecimalDateConverter.ConvertBack(value, ^null, formatString, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 6 HHMMSS 1
        ;;; </summary>
        public property AdtsTm61, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm6[1],"XX:XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm6[1] = (value.Hour * 10000) + (value.Minute * 100) + value.Second
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 6 HHMMSS 2
        ;;; </summary>
        public property AdtsTm62, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm6[2],"XX:XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm6[2] = (value.Hour * 10000) + (value.Minute * 100) + value.Second
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 6 HHMMSS 3
        ;;; </summary>
        public property AdtsTm63, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm6[3],"XX:XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm6[3] = (value.Hour * 10000) + (value.Minute * 100) + value.Second
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 4 HHMM 1
        ;;; </summary>
        public property AdtsTm41, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm4[1],"XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm4[1] = (value.Hour * 100) + value.Minute
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 4 HHMM 2
        ;;; </summary>
        public property AdtsTm42, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm4[2],"XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm4[2] = (value.Hour * 100) + value.Minute
            endmethod
        endproperty

        ;;; <summary>
        ;;; Time 4 HHMM 3
        ;;; </summary>
        public property AdtsTm43, DateTime
            method get
            proc
                mreturn Convert.ToDateTime(%string(mSynergyData.adts_tm4[3],"XX:XX"))
            endmethod
            method set
            proc
                mSynergyData.adts_tm4[3] = (value.Hour * 100) + value.Minute
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
            method get
            proc
                mreturn mGlobalRFA
            endmethod
            method set
            proc
                mGlobalRFA = value
            endmethod
        endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[18]
        endmethod

.endregion

    endclass

endnamespace
