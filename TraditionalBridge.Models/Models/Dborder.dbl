;;*****************************************************************************
;;
;; Title:       Dborder.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure DBORDER and from the data file DATA:ord.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters
import Harmony.Core.Context
import Harmony.Core.FileIO
import Microsoft.Extensions.DependencyInjection

namespace TraditionalBridge.Models

    public partial class Dborder extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strDborder
        private mOriginalSynergyData, strDborder
        protected mGlobalRFA  ,a10

        private static sMetadata, @DborderMetadata

.region "Constructors"

        static method Dborder
        proc
            sMetadata = new DborderMetadata()
            DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Dborder), sMetadata)
        endmethod

        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Dborder
            parent()
        proc
            init mSynergyData, mOriginalSynergyData
        endmethod

        ;;; <summary>
        ;;;  Alternate Constructor, accepts the structured data
        ;;; </summary>
        public method Dborder
            required in inData, a
            required in inGrfa, a
            parent()
        proc
            mSynergyData = mOriginalSynergyData = inData
            mGlobalRFA = inGrfa
        endmethod

.endregion

.region "Attributes of this entity"

        ;;; <summary>
        ;;; Unique order number
        ;;; </summary>
        {Key}
        {Range(0,9999999999, ErrorMessage="Unique order number must be between 0 and 9999999999. ")}
        public property Orderno, long
            method get
            proc
                mreturn (long)mSynergyData.orderno
            endmethod
            method set
            proc
                mSynergyData.orderno = value
            endmethod
        endproperty

        ;;; <summary>
        ;;; Customer's name
        ;;; </summary>
        {StringLength(40, ErrorMessage="Customer's name cannot exceed 40 characters. ")}
        public property CustName, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.cust_name, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.cust_name = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses1Street1Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses1Street2Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses1Street3Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(30, ErrorMessage=" cannot exceed 30 characters. ")}
        public property Adresses1City, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.city, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.city = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(2, ErrorMessage=" cannot exceed 2 characters. ")}
        public property Adresses1State, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.state, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.state = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Adresses1Country, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.country, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.country = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(20, ErrorMessage=" cannot exceed 20 characters. ")}
        public property Adresses1PostalCode, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.postal_code, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.postal_code = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses2Street1Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses2Street2Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(40, ErrorMessage=" cannot exceed 40 characters. ")}
        public property Adresses2Street3Line, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.street.line, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.street.line = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(30, ErrorMessage=" cannot exceed 30 characters. ")}
        public property Adresses2City, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.city, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.city = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(2, ErrorMessage=" cannot exceed 2 characters. ")}
        public property Adresses2State, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.state, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.state = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(10, ErrorMessage=" cannot exceed 10 characters. ")}
        public property Adresses2Country, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.country, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.country = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

        ;;; <summary>
        ;;; 
        ;;; </summary>
        {StringLength(20, ErrorMessage=" cannot exceed 20 characters. ")}
        public property Adresses2PostalCode, String
            method get
            proc
                mreturn (String)SynergyAlphaConverter.Convert(mSynergyData.adresses.postal_code, ^null, ^null, ^null)
            endmethod
            method set
            proc
                mSynergyData.adresses.postal_code = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
            endmethod
        endproperty

.endregion

.region "Other attributes"

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
        public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
        public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

        ;;; <summary>
        ;;; Metadata describing the public field properties
        ;;; </summary>
        public override property Metadata, @DataObjectMetadataBase
            method get
            proc
                mreturn sMetadata
            endmethod
        endproperty

        public override property GlobalRFA, [#]byte
			method get
			proc
                mreturn mGlobalRFA
			endmethod
			method set
			proc
                mGlobalRFA = value
			endmethod
		endproperty

.endregion

.region "Public methods"

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalSynergyRecord, void
            targetMethod, @AlphaAction
        proc
            targetMethod(mSynergyData, mGlobalRFA)
        endmethod

        ;;; <summary>
        ;;;
        ;;; </summary>
        public override method InternalGetValues, [#]@object
        proc
            ;;TODO: This should be returning boxed values for each of our fields
            mreturn new Object[16]
        endmethod

.endregion

.region "Properties to represent keys"

        ;;Access keys

        private _KEY_ORDERNO, string, ""
        public readonly property KEY_ORDERNO, string, ""

.endregion

    endclass

endnamespace
