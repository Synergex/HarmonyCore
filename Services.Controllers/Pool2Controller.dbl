;;*****************************************************************************
;;
;; Title:       Pool2Controller.dbl
;;
;; Description: This class defines a WebAPI controller that exposes
;;              various endpoints used to execute routines via the
;;              Harmony Core Traditional Bridge mechanism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.Mvc
import Microsoft.Extensions.Configuration
import Microsoft.Extensions.Options
import Newtonsoft.Json
import System
import System.Collections.Generic
import System.Linq
import System.Net.Mime
import System.Text
import System.Threading.Tasks
import Pool2

import Services.Controllers

namespace Services.Controllers

    {Produces("application/json")}
    {Route("Pool2")}
    ;;; <summary>
    ;;; Pool2
    ;;; </summary>
    ;;; <remarks>
    ;;; Custom coded endpoints for interface Pool2
    ;;; </remarks>
    public partial class Pool2Controller extends ControllerBase

        ;;Services provided via dependency injection
        private _Pool2Service, @Pool2Service
        private _AppSettings, @IOptions<Services.Models.AppSettings>

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        ;;; <param name="aPool2Service">Pool2Service instance provided via dependency injection</param>
        ;;; <param name="aAppSettings">Application settings</param>
        public method Pool2Controller
            aPool2Service, @Pool2Service
            aAppSettings, @IOptions<Services.Models.AppSettings>
        proc
            _Pool2Service = aPool2Service
            _AppSettings = aAppSettings
        endmethod

        {HttpGet}
        {Route("Initialize")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method Initialize, @Task<ActionResult<Initialize_Response>>
        proc
            mreturn ok(await _Pool2Service.Initialize())
        endmethod

        {HttpGet}
        {Route("Cleanup")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method Cleanup, @Task<IActionResult>
        proc
            await _Pool2Service.Cleanup()
            mreturn ok()
        endmethod

        {HttpGet}
        {Route("getGreeting")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method getGreeting, @Task<ActionResult<getGreeting_Response>>
        proc
            mreturn ok(await _Pool2Service.getGreeting())
        endmethod

        {HttpPost}
        {Route("setGreeting")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method setGreeting, @Task<IActionResult>
            {FromBody}
            required in aRequest, @setGreeting_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            await _Pool2Service.setGreeting(aRequest)
            mreturn ok()
        endmethod

    endclass

endnamespace
