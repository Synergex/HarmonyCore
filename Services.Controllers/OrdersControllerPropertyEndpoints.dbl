;;*****************************************************************************
;;
;; Title:       OrdersControllerPropertyEndpoints.dbl
;;
;; Description: Adds individual property endpoints to OrdersController.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Routing
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Mvc

namespace Services.Controllers

    public partial class OrdersController

        {ODataRoute("({key})/CustomerNumber")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the CustomerNumber property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Customer number</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetCustomerNumber, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.CustomerNumber)
        endmethod

        {ODataRoute("({key})/PlacedBy")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the PlacedBy property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Order placed by</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetPlacedBy, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.PlacedBy)
        endmethod

        {ODataRoute("({key})/CustomerReference")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the CustomerReference property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Customer order reference</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetCustomerReference, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.CustomerReference)
        endmethod

        {ODataRoute("({key})/PaymentTermsCode")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the PaymentTermsCode property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Payment terms code</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetPaymentTermsCode, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.PaymentTermsCode)
        endmethod

        {ODataRoute("({key})/DateOrdered")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the DateOrdered property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Date ordered</param>
        ;;; <returns>
        ;;; Returns a DateTime containing the value of the requested property.
        ;;;</returns>
        public method GetDateOrdered, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.DateOrdered)
        endmethod

        {ODataRoute("({key})/DateCompleted")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the DateCompleted property of a single Order, by primary key.
        ;;; </summary>
        ;;; <param name="key">Date order completed</param>
        ;;; <returns>
        ;;; Returns a DateTime containing the value of the requested property.
        ;;;</returns>
        public method GetDateCompleted, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Orders.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.DateCompleted)
        endmethod


    endclass

endnamespace