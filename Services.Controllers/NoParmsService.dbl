;;*****************************************************************************
;;
;; Title:       NoParmsService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "NoParms" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import Harmony.Core.EF.Extensions
import Harmony.OData
import Harmony.OData.Adapter
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Microsoft.AspNetCore.Mvc
import Microsoft.AspNetCore.OData
import Microsoft.AspNetCore.Authorization
import Newtonsoft.Json.Linq
import System.Linq

import Services.Models

namespace Services.Controllers

    public partial class NoParmsService extends DynamicCallProvider

        static IsInitialized, boolean

        static method NoParmsService
        proc

            ;;If there is a NoParmsServiceCustom method, call it
            NoParmsServiceCustom()

            IsInitialized = true

        endmethod

        ;;; <summary>
        ;;; Partial method to allow custom constructor code.
        ;;; </summary>
        ;;; <param name="services"></param>
        partial static method NoParmsServiceCustom, void

        endmethod

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method NoParmsService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            if(!IsInitialized)
                throw new Exception("cctor missing")
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method NoParmsNoRtn, @Task
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("NoParmsNoRtn"
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method NoParmsWithRtn, @Task<NoParms.NoParmsWithRtn_Response>
        proc
            ;;Prepare the response object
            data response = new NoParms.NoParmsWithRtn_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("NoParmsWithRtn"
            &   )

             ;;Set the return value in the return data
            ArgumentHelper.Argument(0, resultTuple, response.ReturnValue)


            ;;Return the response
            mreturn response

        endmethod

    endclass

endnamespace
