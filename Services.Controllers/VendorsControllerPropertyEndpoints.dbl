;;*****************************************************************************
;;
;; Title:       VendorsControllerPropertyEndpoints.dbl
;;
;; Description: Adds individual property endpoints to VendorsController.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Routing
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Mvc

namespace Services.Controllers

    public partial class VendorsController

        {ODataRoute("({key})/Name")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Name property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Vendor name</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetName, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Name)
        endmethod

        {ODataRoute("({key})/Street")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Street property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Street address</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetStreet, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Street)
        endmethod

        {ODataRoute("({key})/City")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the City property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">City</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetCity, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.City)
        endmethod

        {ODataRoute("({key})/State")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the State property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">State</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetState, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.State)
        endmethod

        {ODataRoute("({key})/ZipCode")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the ZipCode property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Zip Code</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetZipCode, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.ZipCode)
        endmethod

        {ODataRoute("({key})/Contact")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Contact property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Contact name</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetContact, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Contact)
        endmethod

        {ODataRoute("({key})/Phone")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Phone property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Phone number</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetPhone, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Phone)
        endmethod

        {ODataRoute("({key})/Fax")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Fax property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Fax number</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetFax, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Fax)
        endmethod

        {ODataRoute("({key})/PaymentTermsCode")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the PaymentTermsCode property of a single Vendor, by primary key.
        ;;; </summary>
        ;;; <param name="key">Payment terms code</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetPaymentTermsCode, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Vendors.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.PaymentTermsCode)
        endmethod


    endclass

endnamespace