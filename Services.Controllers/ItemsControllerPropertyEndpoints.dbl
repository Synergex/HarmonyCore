;;*****************************************************************************
;;
;; Title:       ItemsControllerPropertyEndpoints.dbl
;;
;; Description: Adds individual property endpoints to ItemsController.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.OData.Routing.Controllers
import Microsoft.AspNetCore.OData.Routing.Attributes
import Microsoft.AspNetCore.OData.Query
import Microsoft.AspNetCore.OData.Results
import Microsoft.AspNetCore.OData.Formatter
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Mvc

namespace Services.Controllers

    public partial class ItemsController

        {HttpGet("Items({key})/VendorNumber")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the VendorNumber property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Vendor number</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetVendorNumber, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.VendorNumber)
        endmethod

        {HttpGet("Items({key})/Size")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Size property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Size in gallons</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetSize, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Size)
        endmethod

        {HttpGet("Items({key})/CommonName")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the CommonName property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Common name</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetCommonName, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.CommonName)
        endmethod

        {HttpGet("Items({key})/LatinName")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the LatinName property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Latin name</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetLatinName, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.LatinName)
        endmethod

        {HttpGet("Items({key})/ZoneCode")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the ZoneCode property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Hardiness zone code</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetZoneCode, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.ZoneCode)
        endmethod

        {HttpGet("Items({key})/Type")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Type property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Type code</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetType, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Type)
        endmethod

        {HttpGet("Items({key})/Flowering")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Flowering property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Flowering?</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetFlowering, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Flowering)
        endmethod

        {HttpGet("Items({key})/FlowerColor")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the FlowerColor property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Flower color</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetFlowerColor, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.FlowerColor)
        endmethod

        {HttpGet("Items({key})/Shape")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Shape property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Shape</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetShape, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Shape)
        endmethod

        {HttpGet("Items({key})/MaxHeight")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the MaxHeight property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Maximum height (in inches)</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetMaxHeight, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.MaxHeight)
        endmethod

        {HttpGet("Items({key})/MaxWidth")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the MaxWidth property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Maximum width (in inches)</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetMaxWidth, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.MaxWidth)
        endmethod

        {HttpGet("Items({key})/WaterRequirement")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the WaterRequirement property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Water requirements</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetWaterRequirement, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.WaterRequirement)
        endmethod

        {HttpGet("Items({key})/SunRequirement")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the SunRequirement property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Sun requirements</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetSunRequirement, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.SunRequirement)
        endmethod

        {HttpGet("Items({key})/BinLocation")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the BinLocation property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Bin/aisle</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetBinLocation, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.BinLocation)
        endmethod

        {HttpGet("Items({key})/QtyOnHand")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the QtyOnHand property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Qty on hand</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetQtyOnHand, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.QtyOnHand)
        endmethod

        {HttpGet("Items({key})/QtyAllocated")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the QtyAllocated property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Qty allocated</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetQtyAllocated, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.QtyAllocated)
        endmethod

        {HttpGet("Items({key})/QtyOnOrder")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the QtyOnOrder property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Qty on order</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetQtyOnOrder, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.QtyOnOrder)
        endmethod

        {HttpGet("Items({key})/ReorderLevel")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the ReorderLevel property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Reorder point</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetReorderLevel, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.ReorderLevel)
        endmethod

        {HttpGet("Items({key})/UnitPrice")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the UnitPrice property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Unit price</param>
        ;;; <returns>
        ;;; Returns a decimal containing the value of the requested property.
        ;;;</returns>
        public method GetUnitPrice, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.UnitPrice)
        endmethod

        {HttpGet("Items({key})/CostPrice")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the CostPrice property of a single Item, by primary key.
        ;;; </summary>
        ;;; <param name="key">Item cost</param>
        ;;; <returns>
        ;;; Returns a decimal containing the value of the requested property.
        ;;;</returns>
        public method GetCostPrice, @IActionResult
            required in key, int
        proc
            data result = _DbContext.Items.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.CostPrice)
        endmethod


    endclass

endnamespace
