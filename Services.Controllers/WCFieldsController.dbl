;;*****************************************************************************
;;
;; Title:       WCFieldsController.dbl
;;
;; Description: This class defines a WebAPI controller that exposes
;;              various endpoints used to execute routines via the
;;              Harmony Core Traditional Bridge mechanism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.Mvc
import Microsoft.Extensions.Configuration
import Microsoft.Extensions.Options
import Newtonsoft.Json
import System
import System.Collections.Generic
import System.Linq
import System.Net.Mime
import System.Text
import System.Threading.Tasks
import WCFields

import Services.Controllers

namespace Services.Controllers

    {Produces("application/json")}
    {Route("WCFields")}
    ;;; <summary>
    ;;; WCFields
    ;;; </summary>
    ;;; <remarks>
    ;;; Custom coded endpoints for interface WCFields
    ;;; </remarks>
    public partial class WCFieldsController extends ControllerBase

        ;;Services provided via dependency injection
        private _WCFieldsService, @WCFieldsService
        private _AppSettings, @IOptions<Services.Models.AppSettings>

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        ;;; <param name="aWCFieldsService">WCFieldsService instance provided via dependency injection</param>
        ;;; <param name="aAppSettings">Application settings</param>
        public method WCFieldsController
            aWCFieldsService, @WCFieldsService
            aAppSettings, @IOptions<Services.Models.AppSettings>
        proc
            _WCFieldsService = aWCFieldsService
            _AppSettings = aAppSettings
        endmethod

        {HttpPost}
        {Route("teststr1")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method teststr1, @Task<ActionResult<teststr1_Response>>
            {FromBody}
            required in aRequest, @teststr1_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _WCFieldsService.teststr1(aRequest))
        endmethod

        {HttpPost}
        {Route("teststr2")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method teststr2, @Task<ActionResult<teststr2_Response>>
            {FromBody}
            required in aRequest, @teststr2_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _WCFieldsService.teststr2(aRequest))
        endmethod

        {HttpPost}
        {Route("teststr3")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method teststr3, @Task<ActionResult<teststr3_Response>>
            {FromBody}
            required in aRequest, @teststr3_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _WCFieldsService.teststr3(aRequest))
        endmethod

        {HttpPost}
        {Route("teststr9")}
        {Consumes(MediaTypeNames.Application.Json)}
        {Produces("application/json")}
        ;;; <summary>
        ;;;   The method catalog does not provide a description for this operation.
        ;;; </summary>
        ;;; <remarks>
        ;;;   The functinality of this endpoint is based on custom code in the underlying application. 
        ;;; </remarks>
        ;;; <response code="200">OK. The operation completed successfully.</response>
        ;;; <response code="400">Bad request. The request was malformed or contained inappropriate content.</response>
        ;;; <response code="500">Internal server error. Report the issue to the API maintainer.</response>
        ;;; <returns></returns>
        public async method teststr9, @Task<ActionResult<teststr9_Response>>
            {FromBody}
            required in aRequest, @teststr9_Request
        proc
            if (!ModelState.IsValid)
                mreturn BadRequest()
            mreturn ok(await _WCFieldsService.teststr9(aRequest))
        endmethod

    endclass

endnamespace
