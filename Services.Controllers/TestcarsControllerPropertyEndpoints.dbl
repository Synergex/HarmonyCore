;;*****************************************************************************
;;
;; Title:       TestcarsControllerPropertyEndpoints.dbl
;;
;; Description: Adds individual property endpoints to TestcarsController.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.OData.Routing.Controllers
import Microsoft.AspNetCore.OData.Routing.Attributes
import Microsoft.AspNetCore.OData.Query
import Microsoft.AspNetCore.OData.Results
import Microsoft.AspNetCore.OData.Formatter
import Microsoft.AspNetCore.Http
import Microsoft.AspNetCore.Mvc

namespace Services.Controllers

    public partial class TestcarsController

        {HttpGet("Testcars({key})/Name")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Name property of a single Testcar, by primary key.
        ;;; </summary>
        ;;; <param name="key">Name of car</param>
        ;;; <returns>
        ;;; Returns a string containing the value of the requested property.
        ;;;</returns>
        public method GetName, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Testcars.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Name)
        endmethod

        {HttpGet("Testcars({key})/Lotid")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Lotid property of a single Testcar, by primary key.
        ;;; </summary>
        ;;; <param name="key">Car lot ID</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetLotid, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Testcars.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Lotid)
        endmethod

        {HttpGet("Testcars({key})/Owner1")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Owner1 property of a single Testcar, by primary key.
        ;;; </summary>
        ;;; <param name="key">Car owner 1</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetOwner1, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Testcars.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Owner1)
        endmethod

        {HttpGet("Testcars({key})/Owner2")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Owner2 property of a single Testcar, by primary key.
        ;;; </summary>
        ;;; <param name="key">Car owner 2</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetOwner2, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Testcars.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Owner2)
        endmethod

        {HttpGet("Testcars({key})/Owner3")}
        {Produces("application/json")}
        {ProducesResponseType(StatusCodes.Status200OK)}
        {ProducesResponseType(StatusCodes.Status404NotFound)}
        ;;; <summary>
        ;;; Get the Owner3 property of a single Testcar, by primary key.
        ;;; </summary>
        ;;; <param name="key">Car owner 3</param>
        ;;; <returns>
        ;;; Returns an int containing the value of the requested property.
        ;;;</returns>
        public method GetOwner3, @IActionResult
            {FromODataUri}
            required in key, int
        proc
            data result = _DbContext.Testcars.Find(key)
            if (result==^null)
                mreturn NotFound()
            mreturn OK(result.Owner3)
        endmethod


    endclass

endnamespace