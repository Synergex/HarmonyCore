import Json
import Synergex.TestFramework
import Harmony.TraditionalBridge
import System.Text.Json
import TraditionalBridge.Test

namespace TraditionalBridge.UnitTest

    {TestClass}
    public class LrgPkts
        
        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method P2StrArysO64k, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":203,"method":"P2StrArysO64k","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method P3StrAry, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":204,"method":"P3StrAry","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method P4StrAry, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":205,"method":"P4StrAry","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Outs NUM_RECORDS, which is defined to 910
        ;;; </summary>
        public method getNumRecords, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":206,"method":"getNumRecords","params":[{"ReturnedValue":false},{"PassedValue":2,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Outs copied array from a global data section
        ;;; </summary>
        public method getStructArray, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":207,"method":"getStructArray","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("LrgPkts")}
        {TestMethod}
        ;;; <summary>
        ;;; Outs copied array set to global data section
        ;;; </summary>
        public method setStructArray, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchLrgPkts('{"jsonrpc":"2.0","id":208,"method":"setStructArray","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
    endclass
endnamespace