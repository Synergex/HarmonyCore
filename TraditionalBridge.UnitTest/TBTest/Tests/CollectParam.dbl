import Json
import Synergex.TestFramework
import Harmony.TraditionalBridge
import System.Text.Json
import TraditionalBridge.Test

namespace TraditionalBridge.UnitTest

    {TestClass}
    public class CollectParam
        
        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure and makes sure it's set correctly
        ;;; </summary>
        public method ColPrmIntegers, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":249,"method":"ColPrmIntegers","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam1, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":250,"method":"CollectParam1","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in array and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam12, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":251,"method":"CollectParam12","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam14, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":252,"method":"CollectParam14","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in array and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam16, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":253,"method":"CollectParam16","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in array and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam2, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":254,"method":"CollectParam2","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure and makes sure it's set correctly
        ;;; </summary>
        public method CollectParam3, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":255,"method":"CollectParam3","params":[{"ReturnedValue":false,{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in array and makes sure it's set correctly
        ;;; </summary>
        public method TestStr2Timing, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":256,"method":"TestStr2Timing","params":[{"ReturnedValue":false},{"PassedValue":["","",""],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in array in various datetime formats
        ;;; </summary>
        public method colprmDateTimeAry, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":257,"method":"colprmDateTimeAry","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod

        {TestCategory("CollectParam")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties of structure in various datetime formats
        ;;; </summary>
        public method colprmDateTmeStr, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchCollectParam('{"jsonrpc":"2.0","id":258,"method":"colprmDateTmeStr","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":128}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
    endclass
endnamespace
