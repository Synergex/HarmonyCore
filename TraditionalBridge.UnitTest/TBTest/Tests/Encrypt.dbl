import Json
import Synergex.TestFramework
import Harmony.TraditionalBridge
import System.Text.Json
import TraditionalBridge.Test

namespace TraditionalBridge.UnitTest

    {TestClass}
    public class Encrypt
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst1, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":18,"method":"encrypt_tst1","params":[{"ReturnedValue":false},{"PassedValue":"abcde","DataType":1},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321.123","DataType":4},{"PassedValue":1234,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst10, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":19,"method":"encrypt_tst10","params":[{"ReturnedValue":false},{"PassedValue":{"GRFA":"","Value":""},"DataType":16}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst11, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":20,"method":"encrypt_tst11","params":[{"ReturnedValue":false},{"PassedValue":{"GRFA":"","Value":""},"DataType":16}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst12, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":21,"method":"encrypt_tst12","params":[{"ReturnedValue":false},{"PassedValue":{"GRFA":"","Value":""},"DataType":16},{"PassedValue":{"GRFA":"","Value":""},"DataType":16}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst2, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":22,"method":"encrypt_tst2","params":[{"ReturnedValue":false},{"PassedValue":"12345.43","DataType":4},{"PassedValue":"54321.12345","DataType":4},{"PassedValue":"123.4321","DataType":4},{"PassedValue":"987.65","DataType":4},{"PassedValue":"9876543210","DataType":2},{"PassedValue":"777.7777","DataType":4},{"PassedValue":"98765.4321","DataType":4},{"PassedValue":"12345678","DataType":2},{"PassedValue":"9876543.2","DataType":4},{"PassedValue":"123456789","DataType":4}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst3, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":23,"method":"encrypt_tst3","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"dlrow","DataType":1},{"PassedValue":"olleh","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        ;{Ignore("dbr.exe crashes by ntdll.dll here")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst4, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":24,"method":"encrypt_tst4","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":1234,"DataType":8},{"PassedValue":"54321","DataType":2},{"PassedValue":"bye","DataType":1},{"PassedValue":"654.321","DataType":4},{"PassedValue":[""],"DataType":1024},{"PassedValue":[""],"DataType":1024},{"PassedValue":[""],"DataType":1024},{"PassedValue":[""],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst5, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":25,"method":"encrypt_tst5","params":[{"ReturnedValue":true,"DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst6, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":26,"method":"encrypt_tst6","params":[{"ReturnedValue":true,"DataType":2},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst7, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":27,"method":"encrypt_tst7","params":[{"ReturnedValue":false},{"PassedValue":"qwertyuiopasdfghjklzxcvbnm","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst8, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":28,"method":"encrypt_tst8","params":[{"ReturnedValue":false},{"PassedValue":{"GRFA":"","Value":""},"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("Encrypt")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets properties
        ;;; </summary>
        public method encrypt_tst9, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchEncrypt('{"jsonrpc":"2.0","id":29,"method":"encrypt_tst9","params":[{"ReturnedValue":false},{"PassedValue":{"GRFA":"","Value":""},"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
    endclass
endnamespace