import Json
import Synergex.TestFramework
import Harmony.TraditionalBridge
import System.Text.Json
import TraditionalBridge.Test

namespace TraditionalBridge.UnitTest

    {TestClass}
    public class syntst
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Writes a few variables
        ;;; </summary>
        public method array21, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":117,"method":"array21","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":["hello","world"],"DataType":1024},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Writes time, waits, and writes time again, then writes variables
        ;;; Note: This test takes 20+ seconds on purpose
        ;;; See: XfplEnvironment\sample_method.dbl:719
        ;;; </summary>
        public method artest1, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":118,"method":"artest1","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile.ddf, writes variables, then returns 987654
        ;;; </summary>
        public method function_eleven, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":119,"method":"function_eleven","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables, then returns 88
        ;;; </summary>
        public method function_twelve, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":120,"method":"function_twelve","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixteen, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":121,"method":"function_sixteen","params":[{"ReturnedValue":false},{"PassedValue":["hello","world"],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_nineteen, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":122,"method":"function_nineteen","params":[{"ReturnedValue":false},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"2012","DataType":2},{"PassedValue":"22","DataType":2},{"PassedValue":"2002","DataType":2},{"PassedValue":"98765","DataType":2},{"PassedValue":"56789","DataType":2}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables, then returns -12345
        ;;; </summary>
        public method function_twentysix, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":123,"method":"function_twentysix","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":"hello","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"e","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtytwo, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":124,"method":"function_sixtytwo","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtythree, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":125,"method":"function_sixtythree","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":0,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtyfour, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":126,"method":"function_sixtyfour","params":[{"ReturnedValue":false},{"PassedValue":1,"DataType":8},{"PassedValue":12,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":4321,"DataType":8},{"PassedValue":0,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":21,"DataType":8},{"PassedValue":5678,"DataType":8},{"PassedValue":8765,"DataType":8},{"PassedValue":2,"DataType":8},{"PassedValue":3,"DataType":8},{"PassedValue":22,"DataType":8},{"PassedValue":2012,"DataType":8},{"PassedValue":12220234,"DataType":8},{"PassedValue":9,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtyfive, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":127,"method":"function_sixtyfive","params":[{"ReturnedValue":false},{"PassedValue":1,"DataType":8},{"PassedValue":23,"DataType":8},{"PassedValue":4567,"DataType":8},{"PassedValue":89098765,"DataType":8},{"PassedValue":4,"DataType":8},{"PassedValue":3,"DataType":8},{"PassedValue":21,"DataType":8},{"PassedValue":2345,"DataType":8},{"PassedValue":67890987,"DataType":8},{"PassedValue":6,"DataType":8},{"PassedValue":5,"DataType":8},{"PassedValue":43,"DataType":8},{"PassedValue":2123,"DataType":8},{"PassedValue":45678909,"DataType":8},{"PassedValue":8,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtysix, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":128,"method":"function_sixtysix","params":[{"ReturnedValue":false},{"PassedValue":"1","DataType":2},{"PassedValue":"123","DataType":2},{"PassedValue":"1234.56","DataType":4},{"PassedValue":"43.21","DataType":4},{"PassedValue":"2","DataType":2},{"PassedValue":"321","DataType":2},{"PassedValue":"9876.54","DataType":4},{"PassedValue":"56.78","DataType":4},{"PassedValue":"9","DataType":2},{"PassedValue":"12345","DataType":2},{"PassedValue":"123456.7","DataType":4},{"PassedValue":"123.456","DataType":4},{"PassedValue":"6","DataType":2},{"PassedValue":"123456789","DataType":2},{"PassedValue":"12345543421","DataType":2},{"PassedValue":"1357.2","DataType":4}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtyseven, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":129,"method":"function_sixtyseven","params":[{"ReturnedValue":false},{"PassedValue":"a","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"goodbyeworld","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"1","DataType":2},{"PassedValue":"234567","DataType":2},{"PassedValue":"7654321","DataType":2},{"PassedValue":"2012","DataType":2},{"PassedValue":"9","DataType":2},{"PassedValue":"2653563","DataType":2},{"PassedValue":"35246978","DataType":2},{"PassedValue":"645346","DataType":2}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtyeight, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":130,"method":"function_sixtyeight","params":[{"ReturnedValue":false},{"PassedValue":1234,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":12,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":12,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":12,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":1,"DataType":8},{"PassedValue":12,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":1234,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_sixtynine, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":131,"method":"function_sixtynine","params":[{"ReturnedValue":false},{"PassedValue":"1","DataType":2},{"PassedValue":"123.321","DataType":4},{"PassedValue":"20.12","DataType":4},{"PassedValue":"321.12","DataType":4},{"PassedValue":"123","DataType":2},{"PassedValue":"2","DataType":2},{"PassedValue":"321","DataType":2},{"PassedValue":"12","DataType":2},{"PassedValue":"20.12","DataType":4},{"PassedValue":"0","DataType":2},{"PassedValue":"12345.432","DataType":4},{"PassedValue":"2012.222","DataType":4},{"PassedValue":"4321.12","DataType":4},{"PassedValue":"5","DataType":2}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_seventy, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":132,"method":"function_seventy","params":[{"ReturnedValue":false},{"PassedValue":"h","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hi","DataType":1},{"PassedValue":"a","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"e","DataType":1},{"PassedValue":"f","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"worldhello","DataType":1},{"PassedValue":"worl","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_seventyfour, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":133,"method":"function_seventyfour","params":[{"ReturnedValue":false},{"PassedValue":"helloworld","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_seventyfive, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":134,"method":"function_seventyfive","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_seventysix, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":135,"method":"function_seventysix","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_eighty, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":136,"method":"function_eighty","params":[{"ReturnedValue":false},{"PassedValue":"123456789.01","DataType":4},{"PassedValue":"88888888.01","DataType":4},{"PassedValue":"4444.01","DataType":4},{"PassedValue":"22.01","DataType":4},{"PassedValue":"123456789.01","DataType":4},{"PassedValue":"88888888.01","DataType":4},{"PassedValue":"4444.01","DataType":4},{"PassedValue":"22.01","DataType":4},{"PassedValue":"123456789.01","DataType":4},{"PassedValue":"88888888.01","DataType":4},{"PassedValue":"4444.01","DataType":4},{"PassedValue":"22.01","DataType":4},{"PassedValue":"123456789.01","DataType":4},{"PassedValue":"88888888.01","DataType":4},{"PassedValue":"4444.01","DataType":4},{"PassedValue":"22.01","DataType":4}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables, returns 24524 + 1
        ;;; </summary>
        public method function_eightyfive, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":137,"method":"function_eightyfive","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_ninetyone, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":138,"method":"function_ninetyone","params":[{"ReturnedValue":false},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_ninetytwo, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":139,"method":"function_ninetytwo","params":[{"ReturnedValue":false},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables, returns id7 * 2
        ;;; </summary>
        public method function_ninetythree, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":140,"method":"function_ninetythree","params":[{"ReturnedValue":true,"DataType":4},{"PassedValue":2012,"DataType":8},{"PassedValue":"2012.12","DataType":4}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_onehundredandone, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":141,"method":"function_onehundredandone","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"wo","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"worl","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"worl","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_onehundredandfour, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":142,"method":"function_onehundredandfour","params":[{"ReturnedValue":false},{"PassedValue":"h","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"he","DataType":1},{"PassedValue":"w","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"worl","DataType":1},{"PassedValue":"w","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"worl","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables
        ;;; </summary>
        public method function_onehundredandfive, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":143,"method":"function_onehundredandfive","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":"hello","DataType":1},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"h","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes variables, returns empty string
        ;;; </summary>
        public method function_onehundredandseven, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":144,"method":"function_onehundredandseven","params":[{"ReturnedValue":true,"DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method elb_not_found, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":145,"method":"elb_not_found","params":[{"ReturnedValue":false}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; This test fails on purpose because it is trying to divide by zero
        ;;; </summary>
        public method fatal, void
            endparams
            record
                dispatchResult, @string
        proc
            try
            begin
                dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":146,"method":"fatal","params":[{"ReturnedValue":false}]}'))
                DispatchRunner.EnsureSuccess(dispatchResult)
            end
            catch (e, @Exception)
            begin
            end
            endtry
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Outs hello, unless nothing is passed in
        ;;; </summary>
        public method hello, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":147,"method":"hello","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 7
        ;;; </summary>
        public method methoddiff, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":148,"method":"methoddiff","params":[{"ReturnedValue":true,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method missingFromElb, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":149,"method":"missingFromElb","params":[{"ReturnedValue":false}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        ;{Ignore("dbr.exe crashes by ntdll.dll here")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets members of array to decimals
        ;;; </summary>
        public method msc_arytst_dec, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":150,"method":"msc_arytst_dec","params":[{"ReturnedValue":false},{"PassedValue":[{"GRFA": "", "Value":""}],"DataType":32}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        ;{Ignore("dbr.exe crashes by ntdll.dll here")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets members of array to implied decimals
        ;;; </summary>
        public method msc_arytst_imp, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":151,"method":"msc_arytst_imp","params":[{"ReturnedValue":false},{"PassedValue":["1234.567"],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        ;{Ignore("dbr.exe crashes by ntdll.dll here")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets members of array to ints
        ;;; </summary>
        public method msc_arytst_int, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":152,"method":"msc_arytst_int","params":[{"ReturnedValue":false},{"PassedValue":[1234],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        ;{Ignore("dbr.exe crashes by ntdll.dll here")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets members of array to strings
        ;;; </summary>
        public method msc_arytst_str, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":153,"method":"msc_arytst_str","params":[{"ReturnedValue":false},{"PassedValue":["hello","world"],"DataType":1024}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method not_in_elb, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":154,"method":"not_in_elb","params":[{"ReturnedValue":false},{"PassedValue":"2012","DataType":2}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Effectively does nothing
        ;;; </summary>
        public method null2122, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":155,"method":"null2122","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes if 22nd variable is passed in or not
        ;;; </summary>
        public method optional22, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":156,"method":"optional22","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 99
        ;;; </summary>
        public method outi4, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":157,"method":"outi4","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":2012,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 1242134
        ;;; </summary>
        public method outi8, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":158,"method":"outi8","params":[{"ReturnedValue":true,"DataType":8},{"PassedValue":20120222,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Opens TEST:testfile, writes if 40th variable is passed in or not, changes some variables, writes them
        ;;; </summary>
        public method parm40, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":159,"method":"parm40","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"hello","DataType":1},{"PassedValue":"world","DataType":1},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"12345","DataType":2},{"PassedValue":"54321","DataType":2},{"PassedValue":"12.34","DataType":4},{"PassedValue":"34.56","DataType":4},{"PassedValue":"12.34","DataType":4},{"PassedValue":"34.56","DataType":4},{"PassedValue":"12.34","DataType":4},{"PassedValue":"34.56","DataType":4},{"PassedValue":"12.34","DataType":4},{"PassedValue":"34.56","DataType":4},{"PassedValue":"12.34","DataType":4},{"PassedValue":"34.56","DataType":4},{"PassedValue":1,"DataType":8},{"PassedValue":2,"DataType":8},{"PassedValue":3,"DataType":8},{"PassedValue":45,"DataType":8},{"PassedValue":67,"DataType":8},{"PassedValue":89,"DataType":8},{"PassedValue":1234,"DataType":8},{"PassedValue":5678,"DataType":8},{"PassedValue":8765,"DataType":8},{"PassedValue":4321,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Sets variable
        ;;; </summary>
        public method passstring, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":160,"method":"passstring","params":[{"ReturnedValue":false},{"PassedValue":"helloworld","DataType":1},{"PassedValue":"dlrowolleh","DataType":1},{"PassedValue":"65535","DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns hello
        ;;; </summary>
        public method retAlpha5, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":161,"method":"retAlpha5","params":[{"ReturnedValue":true,"DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 999
        ;;; </summary>
        public method retDec3, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":162,"method":"retDec3","params":[{"ReturnedValue":true,"DataType":2}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 99
        ;;; </summary>
        public method retI4, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":163,"method":"retI4","params":[{"ReturnedValue":true,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 9.9
        ;;; </summary>
        public method retIdec31, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":164,"method":"retIdec31","params":[{"ReturnedValue":true,"DataType":4}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 99
        ;;; </summary>
        public method retVal, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":165,"method":"retVal","params":[{"ReturnedValue":true,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns a40000, all filled with 'A'
        ;;; </summary>
        public method rtnAlpha40k, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":166,"method":"rtnAlpha40k","params":[{"ReturnedValue":true,"DataType":1}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Returns 0
        ;;; </summary>
        public method stoptest, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":167,"method":"stoptest","params":[{"ReturnedValue":true,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
        
        {TestCategory("syntst")}
        {TestMethod}
        ;;; <summary>
        ;;; Eeffectively does nothing
        ;;; </summary>
        public method uninitParams, void
            endparams
            record
                dispatchResult, @string
        proc
            dispatchResult = DispatchRunner.RemoveMessageHeader(DispatchRunner.RunDispatchsyntst('{"jsonrpc":"2.0","id":168,"method":"uninitParams","params":[{"ReturnedValue":false},{"PassedValue":"hello","DataType":1},{"PassedValue":"123","DataType":2},{"PassedValue":"456.7","DataType":4},{"PassedValue":8901,"DataType":8}]}'))
            DispatchRunner.EnsureSuccess(dispatchResult)
        endmethod
    endclass
endnamespace