;;*****************************************************************************
;;
;; Title:       Order.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure ORDERS and from the data file DAT:orders.ism.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge

namespace TraditionalBridge.Test.Models

	public partial class Order extends DataObjectBase

		;; Metadata, current record state, and a copy of the original state
		public static sMetadata, @OrderMetadata
		private mOrder, strOrder 
		private mOriginalOrder, strOrder 
		
		;;; <summary>
		;;;  Construct an empty Order object
		;;; </summary>
		public method Order
			parent()
		proc
			init mOrder, mOriginalOrder
		endmethod

		;;; <summary>
		;;;  Construct a Order object containing data from a record
		;;; </summary>
		public method Order
			required in inData, strOrder
			parent()
		proc
			mOrder = mOriginalOrder = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @AlphaAction
		proc
			targetMethod.Run(mOrder, mGlobalRFA)
		endmethod
		
		;;; <summary>
		;;; Order number
		;;; </summary>
		public property OrderNumber, d
			method get
			proc
				mreturn mOrder.order_number
			endmethod
			method set
			proc
				mOrder.order_number = value
			endmethod
		endproperty

		;;; <summary>
		;;; Customer number
		;;; </summary>
		public property CustomerNumber, d
			method get
			proc
				mreturn mOrder.customer_number
			endmethod
			method set
			proc
				mOrder.customer_number = value
			endmethod
		endproperty

		;;; <summary>
		;;; Order placed by
		;;; </summary>
		public property PlacedBy, a
			method get
			proc
				mreturn mOrder.placed_by
			endmethod
			method set
			proc
				mOrder.placed_by = value
			endmethod
		endproperty

		;;; <summary>
		;;; Customer order reference
		;;; </summary>
		public property CustomerReference, a
			method get
			proc
				mreturn mOrder.customer_reference
			endmethod
			method set
			proc
				mOrder.customer_reference = value
			endmethod
		endproperty

		;;; <summary>
		;;; Payment terms code
		;;; </summary>
		public property PaymentTermsCode, a
			method get
			proc
				mreturn mOrder.payment_terms_code
			endmethod
			method set
			proc
				mOrder.payment_terms_code = value
			endmethod
		endproperty

		;;; <summary>
		;;; Date ordered
		;;; </summary>
		public property DateOrdered, d
			method get
			proc
				mreturn mOrder.date_ordered
			endmethod
			method set
			proc
				mOrder.date_ordered = value
			endmethod
		endproperty

		;;; <summary>
		;;; Date order completed
		;;; </summary>
		public property DateCompleted, d
			method get
			proc
				mreturn mOrder.date_completed
			endmethod
			method set
			proc
				mOrder.date_completed = value
			endmethod
		endproperty

		;;; <summary>
		;;; Expose the complete synergy record
		;;; </summary>
		public override property SynergyRecord, a
			method get
			proc
				mreturn mOrder
			endmethod
		endproperty
		
		;;; <summary>
		;;; Expose the complete original synergy record
		;;; </summary>
		public override property OriginalSynergyRecord, a
			method get
			proc
				mreturn mOriginalOrder
			endmethod
		endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				if(sMetadata == ^null)
					sMetadata = new OrderMetadata()
				mreturn sMetadata
			endmethod
		endproperty

	endclass

endnamespace