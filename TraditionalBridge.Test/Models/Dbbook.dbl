;;*****************************************************************************
;;
;; Title:       Dbbook.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure DBBOOK and from the data file DATA:book.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge

namespace TraditionalBridge.Test.Models

	public partial class Dbbook extends DataObjectBase

		;; Metadata, current record state, and a copy of the original state
		public static sMetadata, @DbbookMetadata
		private mDbbook, strDbbook 
		private mOriginalDbbook, strDbbook 
		
		;;; <summary>
		;;;  Construct an empty Dbbook object
		;;; </summary>
		public method Dbbook
			parent()
		proc
			init mDbbook, mOriginalDbbook
		endmethod

		;;; <summary>
		;;;  Construct a Dbbook object containing data from a record
		;;; </summary>
		public method Dbbook
			required in inData, strDbbook
			parent()
		proc
			mDbbook = mOriginalDbbook = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @AlphaAction
		proc
			targetMethod.Run(mDbbook, mGlobalRFA)
		endmethod
		
		;;; <summary>
		;;; Unique Book identifier
		;;; </summary>
		public property Bookid, a
			method get
			proc
				mreturn mDbbook.bookid
			endmethod
			method set
			proc
				mDbbook.bookid = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Authorid, a
			method get
			proc
				mreturn mDbbook.authorid
			endmethod
			method set
			proc
				mDbbook.authorid = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Publisherid, a
			method get
			proc
				mreturn mDbbook.publisherid
			endmethod
			method set
			proc
				mDbbook.publisherid = value
			endmethod
		endproperty

		;;; <summary>
		;;; Book's title
		;;; </summary>
		public property Title, a
			method get
			proc
				mreturn mDbbook.title
			endmethod
			method set
			proc
				mDbbook.title = value
			endmethod
		endproperty

		;;; <summary>
		;;; Number of pages
		;;; </summary>
		public property Pages, i
			method get
			proc
				mreturn mDbbook.pages
			endmethod
			method set
			proc
				mDbbook.pages = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Price, d
			method get
			proc
				mreturn mDbbook.price
			endmethod
			method set
			proc
				mDbbook.price = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property QtyOnHand, d
			method get
			proc
				mreturn mDbbook.qty_on_hand
			endmethod
			method set
			proc
				mDbbook.qty_on_hand = value
			endmethod
		endproperty

		;;; <summary>
		;;; Expose the complete synergy record
		;;; </summary>
		public override property SynergyRecord, a
			method get
			proc
				mreturn mDbbook
			endmethod
		endproperty
		
		;;; <summary>
		;;; Expose the complete original synergy record
		;;; </summary>
		public override property OriginalSynergyRecord, a
			method get
			proc
				mreturn mOriginalDbbook
			endmethod
		endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				if(sMetadata == ^null)
					sMetadata = new DbbookMetadata()
				mreturn sMetadata
			endmethod
		endproperty

	endclass

endnamespace