;;*****************************************************************************
;;
;; Title:       Datatablestr.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure DATATABLESTR.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge

namespace TraditionalBridge.Test.Models

	public partial class Datatablestr extends DataObjectBase

		;; Metadata, current record state, and a copy of the original state
		public static sMetadata, @DatatablestrMetadata
		private mDatatablestr, strDatatablestr 
		private mOriginalDatatablestr, strDatatablestr 
		
		;;; <summary>
		;;;  Construct an empty Datatablestr object
		;;; </summary>
		public method Datatablestr
			parent()
		proc
			init mDatatablestr, mOriginalDatatablestr
		endmethod

		;;; <summary>
		;;;  Construct a Datatablestr object containing data from a record
		;;; </summary>
		public method Datatablestr
			required in inData, strDatatablestr
			parent()
		proc
			mDatatablestr = mOriginalDatatablestr = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @AlphaAction
		proc
			targetMethod.Run(mDatatablestr, mGlobalRFA)
		endmethod
		
		;;; <summary>
		;;; Account number
		;;; </summary>
		public property Accountnumber, d
			method get
			proc
				mreturn mDatatablestr.accountnumber
			endmethod
			method set
			proc
				mDatatablestr.accountnumber = value
			endmethod
		endproperty

		;;; <summary>
		;;; name
		;;; </summary>
		public property Name, a
			method get
			proc
				mreturn mDatatablestr.name
			endmethod
			method set
			proc
				mDatatablestr.name = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Amount, d
			method get
			proc
				mreturn mDatatablestr.amount
			endmethod
			method set
			proc
				mDatatablestr.amount = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Qty, d
			method get
			proc
				mreturn mDatatablestr.qty
			endmethod
			method set
			proc
				mDatatablestr.qty = value
			endmethod
		endproperty

		;;; <summary>
		;;; Expose the complete synergy record
		;;; </summary>
		public override property SynergyRecord, a
			method get
			proc
				mreturn mDatatablestr
			endmethod
		endproperty
		
		;;; <summary>
		;;; Expose the complete original synergy record
		;;; </summary>
		public override property OriginalSynergyRecord, a
			method get
			proc
				mreturn mOriginalDatatablestr
			endmethod
		endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				if(sMetadata == ^null)
					sMetadata = new DatatablestrMetadata()
				mreturn sMetadata
			endmethod
		endproperty

	endclass

endnamespace