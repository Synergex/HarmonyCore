;;*****************************************************************************
;;
;; Title:       Coercestructure.dbl
;;
;; Description: Data model representing data defined by the repository
;;              structure COERCESTRUCTURE.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge

namespace TraditionalBridge.Test.Models

	public partial class Coercestructure extends DataObjectBase

		;; Metadata, current record state, and a copy of the original state
		public static sMetadata, @CoercestructureMetadata
		private mCoercestructure, strCoercestructure 
		private mOriginalCoercestructure, strCoercestructure 
		
		;;; <summary>
		;;;  Construct an empty Coercestructure object
		;;; </summary>
		public method Coercestructure
			parent()
		proc
			init mCoercestructure, mOriginalCoercestructure
		endmethod

		;;; <summary>
		;;;  Construct a Coercestructure object containing data from a record
		;;; </summary>
		public method Coercestructure
			required in inData, strCoercestructure
			parent()
		proc
			mCoercestructure = mOriginalCoercestructure = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @AlphaAction
		proc
			targetMethod.Run(mCoercestructure, mGlobalRFA)
		endmethod
		
		;;; <summary>
		;;; 
		;;; </summary>
		public property Decint, d
			method get
			proc
				mreturn mCoercestructure.decint
			endmethod
			method set
			proc
				mCoercestructure.decint = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decbool, d
			method get
			proc
				mreturn mCoercestructure.decbool
			endmethod
			method set
			proc
				mCoercestructure.decbool = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decbyte, d
			method get
			proc
				mreturn mCoercestructure.decbyte
			endmethod
			method set
			proc
				mCoercestructure.decbyte = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decshort, d
			method get
			proc
				mreturn mCoercestructure.decshort
			endmethod
			method set
			proc
				mCoercestructure.decshort = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Declong, d
			method get
			proc
				mreturn mCoercestructure.declong
			endmethod
			method set
			proc
				mCoercestructure.declong = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decsbyte, d
			method get
			proc
				mreturn mCoercestructure.decsbyte
			endmethod
			method set
			proc
				mCoercestructure.decsbyte = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decuint, d
			method get
			proc
				mreturn mCoercestructure.decuint
			endmethod
			method set
			proc
				mCoercestructure.decuint = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decushort, d
			method get
			proc
				mreturn mCoercestructure.decushort
			endmethod
			method set
			proc
				mCoercestructure.decushort = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Deculong, d
			method get
			proc
				mreturn mCoercestructure.deculong
			endmethod
			method set
			proc
				mCoercestructure.deculong = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Decdatetime, d
			method get
			proc
				mreturn mCoercestructure.decdatetime
			endmethod
			method set
			proc
				mCoercestructure.decdatetime = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Nulldatetime, d
			method get
			proc
				mreturn mCoercestructure.nulldatetime
			endmethod
			method set
			proc
				mCoercestructure.nulldatetime = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Iddecimal, d
			method get
			proc
				mreturn mCoercestructure.iddecimal
			endmethod
			method set
			proc
				mCoercestructure.iddecimal = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Iddouble, d
			method get
			proc
				mreturn mCoercestructure.iddouble
			endmethod
			method set
			proc
				mCoercestructure.iddouble = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Idfloat, d
			method get
			proc
				mreturn mCoercestructure.idfloat
			endmethod
			method set
			proc
				mCoercestructure.idfloat = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intint, i
			method get
			proc
				mreturn mCoercestructure.intint
			endmethod
			method set
			proc
				mCoercestructure.intint = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intbool, i
			method get
			proc
				mreturn mCoercestructure.intbool
			endmethod
			method set
			proc
				mCoercestructure.intbool = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intbyte, i
			method get
			proc
				mreturn mCoercestructure.intbyte
			endmethod
			method set
			proc
				mCoercestructure.intbyte = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intshort, i
			method get
			proc
				mreturn mCoercestructure.intshort
			endmethod
			method set
			proc
				mCoercestructure.intshort = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intlong, i
			method get
			proc
				mreturn mCoercestructure.intlong
			endmethod
			method set
			proc
				mCoercestructure.intlong = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intsbyte, i
			method get
			proc
				mreturn mCoercestructure.intsbyte
			endmethod
			method set
			proc
				mCoercestructure.intsbyte = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intuint, i
			method get
			proc
				mreturn mCoercestructure.intuint
			endmethod
			method set
			proc
				mCoercestructure.intuint = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intushort, i
			method get
			proc
				mreturn mCoercestructure.intushort
			endmethod
			method set
			proc
				mCoercestructure.intushort = value
			endmethod
		endproperty

		;;; <summary>
		;;; 
		;;; </summary>
		public property Intulong, i
			method get
			proc
				mreturn mCoercestructure.intulong
			endmethod
			method set
			proc
				mCoercestructure.intulong = value
			endmethod
		endproperty

		;;; <summary>
		;;; Expose the complete synergy record
		;;; </summary>
		public override property SynergyRecord, a
			method get
			proc
				mreturn mCoercestructure
			endmethod
		endproperty
		
		;;; <summary>
		;;; Expose the complete original synergy record
		;;; </summary>
		public override property OriginalSynergyRecord, a
			method get
			proc
				mreturn mOriginalCoercestructure
			endmethod
		endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				if(sMetadata == ^null)
					sMetadata = new CoercestructureMetadata()
				mreturn sMetadata
			endmethod
		endproperty

	endclass

endnamespace