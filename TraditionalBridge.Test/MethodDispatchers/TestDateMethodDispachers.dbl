;;*****************************************************************************
;;
;; Title:       TestDateMethodDispachers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Test.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Test.TestDate


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method TestDate.GetDate8
    ;;; </summary>
    public class GetDate8_Dispatcher extends RoutineStub

        private mDatetimestrMetadata, @DataObjectMetadataBase

        public method GetDate8_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDatetimestrMetadata = DataObjectMetadataBase.LookupType("Datetimestr")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN idx D2)
                arg1,               D2
                ;;Argument 2 (REQUIRED OUT dstruct structure @Datetimestr)
                arg2DataObject,     @DataObjectBase
                arg2,               strDatetimestr
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN idx D2)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED OUT dstruct structure @Datetimestr)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall GetDate8(arg1,arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT dstruct structure @Datetimestr)
            
            ;;Argument 2: Single Datetimestr record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,34,"DATETIMESTR",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method TestDate.UserDates
    ;;; </summary>
    public class UserDates_Dispatcher extends RoutineStub

        private mUserdateMetadata, @DataObjectMetadataBase

        public method UserDates_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mUserdateMetadata = DataObjectMetadataBase.LookupType("Userdate")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT USERDATES structure @Userdate)
                arg1DataObject,     @DataObjectBase
                arg1,               strUserdate
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT USERDATES structure @Userdate)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall UserDates(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT USERDATES structure @Userdate)
            
            ;;Argument 1: Single Userdate record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,40,"USERDATES",true)
        endmethod

    endclass

endnamespace