;;*****************************************************************************
;;
;; Title:       V93IFMethodDispachers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Test.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Test.V93IF


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.ALReposOpts
    ;;; </summary>
    public class ALReposOpts_Dispatcher extends RoutineStub

        private mV93reposoptMetadata, @DataObjectMetadataBase

        public method ALReposOpts_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mV93reposoptMetadata = DataObjectMetadataBase.LookupType("V93reposopt")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT V93REPOSOPTS ArrayList collection of structure @V93reposopt returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT V93REPOSOPTS ArrayList collection of structure @V93reposopt returned as DataTable)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall alreposopts(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT V93REPOSOPTS ArrayList collection of structure @V93reposopt returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,41,"V93REPOSOPTS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.ALReposOptsIn
    ;;; </summary>
    public class ALReposOptsIn_Dispatcher extends RoutineStub

        private mV93reposoptMetadata, @DataObjectMetadataBase

        public method ALReposOptsIn_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mV93reposoptMetadata = DataObjectMetadataBase.LookupType("V93reposopt")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN V93REPOSOPTS ArrayList collection of structure @V93reposopt returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN V93REPOSOPTS ArrayList collection of structure @V93reposopt returned as DataTable)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],41)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg1Array,arg1,FieldDataType.AlphaField)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall alreposoptsin(arg1)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.BinArrayStr
    ;;; </summary>
    public class BinArrayStr_Dispatcher extends RoutineStub

        private mBinarytestMetadata, @DataObjectMetadataBase

        public method BinArrayStr_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mBinarytestMetadata = DataObjectMetadataBase.LookupType("Binarytest")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT BINARYTEST structure @Binarytest)
                arg1DataObject,     @DataObjectBase
                arg1,               strBinarytest
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT BINARYTEST structure @Binarytest)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mBinarytestMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall BinArrayStr(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT BINARYTEST structure @Binarytest)
            
            ;;Argument 1: Single Binarytest record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,90,"BINARYTEST",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.BinaryHdlIn
    ;;; </summary>
    public class BinaryHdlIn_Dispatcher extends RoutineStub


        public method BinaryHdlIn_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustID I4)
                arg1,               I4
                ;;Argument 2 (REQUIRED IN AddressID I4)
                arg2,               I4
                ;;Argument 3 (REQUIRED OUT Structure A46)
                arg3,               A46
                ;;Argument 4 (REQUIRED IN GRFA D_HANDLE)
                arg4Array,          JSON_ELEMENT
                arg4Handle,         d_handle
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustID I4)

            arg1 = dispatcher.GetInt(arguments[1])

            ;;Argument 2 (REQUIRED IN AddressID I4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;Argument 3 (REQUIRED OUT Structure A46)


            ;;Argument 4 (REQUIRED IN GRFA D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[4])
            arg4Array = arguments[4].GetProperty("PassedValue")
            arg4Handle = %mem_proc(DM_ALLOC,arg4Array.GetArrayLength())

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %BinaryHdlIn(arg1,arg2,arg3,arg4Handle)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT Structure A46)
            
            serializer.ArgumentData(3,%atrim(arg3),FieldDataType.AlphaField,46,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.BinaryHdlInOut
    ;;; </summary>
    public class BinaryHdlInOut_Dispatcher extends RoutineStub


        public method BinaryHdlInOut_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustID I4)
                arg1,               I4
                ;;Argument 2 (REQUIRED IN AddressID I4)
                arg2,               I4
                ;;Argument 3 (REQUIRED OUT Structure A46)
                arg3,               A46
                ;;Argument 4 (REQUIRED INOUT GRFA D_HANDLE)
                arg4Array,          JSON_ELEMENT
                arg4Handle,         d_handle
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustID I4)

            arg1 = dispatcher.GetInt(arguments[1])

            ;;Argument 2 (REQUIRED IN AddressID I4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;Argument 3 (REQUIRED OUT Structure A46)


            ;;Argument 4 (REQUIRED INOUT GRFA D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[4])
            arg4Array = arguments[4].GetProperty("PassedValue")
            arg4Handle = %mem_proc(DM_ALLOC,arg4Array.GetArrayLength())

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %BinaryHdlInOut(arg1,arg2,arg3,arg4Handle)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT Structure A46)
            
            serializer.ArgumentData(3,%atrim(arg3),FieldDataType.AlphaField,46,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 4 (REQUIRED INOUT GRFA D_HANDLE)
            
            serializer.ArgumentData(4,arg4Handle,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.BinaryHdlOut
    ;;; </summary>
    public class BinaryHdlOut_Dispatcher extends RoutineStub


        public method BinaryHdlOut_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN CustID I4)
                arg1,               I4
                ;;Argument 2 (REQUIRED IN AddressID I4)
                arg2,               I4
                ;;Argument 3 (REQUIRED OUT Structure A46)
                arg3,               A46
                ;;Argument 4 (REQUIRED OUT GRFA D_HANDLE)
                arg4Array,          JSON_ELEMENT
                arg4Handle,         d_handle
                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN CustID I4)

            arg1 = dispatcher.GetInt(arguments[1])

            ;;Argument 2 (REQUIRED IN AddressID I4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;Argument 3 (REQUIRED OUT Structure A46)


            ;;Argument 4 (REQUIRED OUT GRFA D_HANDLE)

            arg4Handle = %mem_proc(DM_ALLOC,4)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %BinaryHdlOut(arg1,arg2,arg3,arg4Handle)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT Structure A46)
            
            serializer.ArgumentData(3,%atrim(arg3),FieldDataType.AlphaField,46,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 4 (REQUIRED OUT GRFA D_HANDLE)
            
            serializer.ArgumentData(4,arg4Handle,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.DoFuentes
;    ;;; </summary>
;    public class DoFuentes_Dispatcher extends RoutineStub
;
;        private mFuenteMetadata, @DataObjectMetadataBase
;
;        public method DoFuentes_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mFuenteMetadata = DataObjectMetadataBase.LookupType("Fuente")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED INOUT FUENTES structure @Fuente)
;                arg1DataObject,     @DataObjectBase
;                arg1,               strFuente
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED INOUT FUENTES structure @Fuente)
;
;            ;;Structure argument. Get the data object then get the record from it
;            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mFuenteMetadata)
;            arg1 = arg1DataObject.SynergyRecord
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall DeFuentes(arg1)
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED INOUT FUENTES structure @Fuente)
;            
;            ;;Argument 1: Single Fuente record
;            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,43,"FUENTES",true)
;        endmethod
;
;    endclass
;
;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.DoFuentesALin
;    ;;; </summary>
;    public class DoFuentesALin_Dispatcher extends RoutineStub
;
;        private mFuenteMetadata, @DataObjectMetadataBase
;
;        public method DoFuentesALin_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mFuenteMetadata = DataObjectMetadataBase.LookupType("Fuente")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED IN FUENTES ArrayList collection of structure @Fuente)
;                arg1Array,          JSON_ELEMENT
;                arg1,               @ArrayList
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED IN FUENTES ArrayList collection of structure @Fuente)
;
;            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],43)
;            arg1Array = arguments[1].GetProperty("PassedValue")
;            arg1 = new ArrayList()
;            dispatcher.UnwrapObjectCollection(argumentDefinition,arg1Array,arg1,FieldDataType.AlphaField)
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall DoFuentesALin(arg1)
;        endmethod
;
;    endclass
;
;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.DoFuentesALout
;    ;;; </summary>
;    public class DoFuentesALout_Dispatcher extends RoutineStub
;
;        private mFuenteMetadata, @DataObjectMetadataBase
;
;        public method DoFuentesALout_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mFuenteMetadata = DataObjectMetadataBase.LookupType("Fuente")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED OUT FUENTES ArrayList collection of structure @Fuente)
;                arg1Array,          JSON_ELEMENT
;                arg1,               @ArrayList
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED OUT FUENTES ArrayList collection of structure @Fuente)
;
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall DoFuentesALout(arg1)
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED OUT FUENTES ArrayList collection of structure @Fuente)
;            
;            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,43,"FUENTES",true)
;        endmethod
;
;    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.EnumTest1
    ;;; </summary>
    public class EnumTest1_Dispatcher extends RoutineStub


        public method EnumTest1_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT AColor enum COLOR)
                arg1,               COLOR
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT AColor enum COLOR)

            arg1 = (COLOR)dispatcher.GetInt(arguments[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall EnumTest1S(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT AColor enum COLOR)
            
            ;TODO: Do we need custom processing for enum fields beyond the integer value?
            serializer.ArgumentData(1,(int)arg1,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.EnumTest2
    ;;; </summary>
    public class EnumTest2_Dispatcher extends RoutineStub


        public method EnumTest2_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                returnValue,         COLOR
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %EnumTest2()

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.EnumTest3
    ;;; </summary>
    public class EnumTest3_Dispatcher extends RoutineStub


        public method EnumTest3_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN aColor enum COLOR)
                arg1,               COLOR
                ;;Argument 2 (REQUIRED INOUT Alpha1 A10)
                arg2,               A10
                ;;Argument 3 (REQUIRED OUT bColor enum COLOR)
                arg3,               COLOR
                returnValue,         COLOR
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN aColor enum COLOR)

            arg1 = (COLOR)dispatcher.GetInt(arguments[1])

            ;;Argument 2 (REQUIRED INOUT Alpha1 A10)

            arg2 = dispatcher.GetText(arguments[2])

            ;;Argument 3 (REQUIRED OUT bColor enum COLOR)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %EnumTest3(arg1,arg2,arg3)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT Alpha1 A10)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,10,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED OUT bColor enum COLOR)
            
            ;TODO: Do we need custom processing for enum fields beyond the integer value?
            serializer.ArgumentData(3,(int)arg3,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.EnumTest4
;    ;;; </summary>
;    public class EnumTest4_Dispatcher extends RoutineStub
;
;        private mEnumstructureMetadata, @DataObjectMetadataBase
;
;        public method EnumTest4_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mEnumstructureMetadata = DataObjectMetadataBase.LookupType("Enumstructure")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE structure @Enumstructure)
;                arg1DataObject,     @DataObjectBase
;                arg1,               strEnumstructure
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE structure @Enumstructure)
;
;            ;;Structure argument. Get the data object then get the record from it
;            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mEnumstructureMetadata)
;            arg1 = arg1DataObject.SynergyRecord
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall EnumTest4(arg1)
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE structure @Enumstructure)
;            
;            ;;Argument 1: Single Enumstructure record
;            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,44,"ENUMSTRUCTURE",true)
;        endmethod
;
;    endclass
;
;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.EnumTest5
;    ;;; </summary>
;    public class EnumTest5_Dispatcher extends RoutineStub
;
;        private mEnumstructureMetadata, @DataObjectMetadataBase
;
;        public method EnumTest5_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mEnumstructureMetadata = DataObjectMetadataBase.LookupType("Enumstructure")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE [*]structure @Enumstructure)
;                arg1Array,          JSON_ELEMENT
;                arg1Handle,         D_HANDLE
;                arg1HandlePos,      int
;            endrecord
;
;            ;;Temp structure tempstr1
;            structure tempstr1
;                arry, @Enumstructure
;            endstructure
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE [*]structure @Enumstructure)
;
;            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],44)
;            arg1Array = arguments[1].GetProperty("PassedValue")
;            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
;            arg1HandlePos = 1
;            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall EnumTest5(^m(strEnumstructure,arg1Handle))
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED INOUT ENUMSTRUCTURE [*]structure @Enumstructure)
;            
;            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,44,"ENUMSTRUCTURE",%mem_proc(DM_GETSIZE,arg1Handle)/44,true)
;        endmethod
;
;    endclass
;
;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.EnumTest6
;    ;;; </summary>
;    public class EnumTest6_Dispatcher extends RoutineStub
;
;        private mEnumstructureMetadata, @DataObjectMetadataBase
;
;        public method EnumTest6_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mEnumstructureMetadata = DataObjectMetadataBase.LookupType("Enumstructure")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED IN ENUMSTRUCTURE ArrayList collection of structure @Enumstructure)
;                arg1Array,          JSON_ELEMENT
;                arg1,               @ArrayList
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED IN ENUMSTRUCTURE ArrayList collection of structure @Enumstructure)
;
;            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],44)
;            arg1Array = arguments[1].GetProperty("PassedValue")
;            arg1 = new ArrayList()
;            dispatcher.UnwrapObjectCollection(argumentDefinition,arg1Array,arg1,FieldDataType.AlphaField)
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall EnumTest6(arg1)
;        endmethod
;
;    endclass
;
;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.EnumTest7
;    ;;; </summary>
;    public class EnumTest7_Dispatcher extends RoutineStub
;
;        private mEnumstructureMetadata, @DataObjectMetadataBase
;
;        public method EnumTest7_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mEnumstructureMetadata = DataObjectMetadataBase.LookupType("Enumstructure")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED OUT ENUMSTRUCTURE ArrayList collection of structure @Enumstructure)
;                arg1Array,          JSON_ELEMENT
;                arg1,               @ArrayList
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED OUT ENUMSTRUCTURE ArrayList collection of structure @Enumstructure)
;
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall EnumTest7(arg1)
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED OUT ENUMSTRUCTURE ArrayList collection of structure @Enumstructure)
;            
;            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,44,"ENUMSTRUCTURE",true)
;        endmethod
;
;    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.LargeDTOut
    ;;; </summary>
    public class LargeDTOut_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method LargeDTOut_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey returned as DataTable)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey returned as DataTable)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall LargeDTOut(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey returned as DataTable)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,50,"TIMEKEY",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method V93IF.ReposOptionsV93
    ;;; </summary>
    public class ReposOptionsV93_Dispatcher extends RoutineStub

        private mV93reposoptMetadata, @DataObjectMetadataBase

        public method ReposOptionsV93_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mV93reposoptMetadata = DataObjectMetadataBase.LookupType("V93reposopt")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT V93REPOSOPTS structure @V93reposopt)
                arg1DataObject,     @DataObjectBase
                arg1,               strV93reposopt
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT V93REPOSOPTS structure @V93reposopt)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mV93reposoptMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall reposoptsv93(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT V93REPOSOPTS structure @V93reposopt)
            
            ;;Argument 1: Single V93reposopt record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,41,"V93REPOSOPTS",true)
        endmethod

    endclass

;    ;;-------------------------------------------------------------------------
;    ;;; <summary>
;    ;;; Dispatcher for method V93IF.StrOptTest1
;    ;;; </summary>
;    public class StrOptTest1_Dispatcher extends RoutineStub
;
;        private mStroptsoutterMetadata, @DataObjectMetadataBase
;
;        public method StrOptTest1_Dispatcher
;        proc
;            ;;Initialize the meta data for any data objects that are used by parameters to the method
;            mStroptsoutterMetadata = DataObjectMetadataBase.LookupType("Stroptsoutter")
;        endmethod
;
;        protected override method DispatchInternal, void
;            required in name,       string
;            required in callFrame,  JSON_ELEMENT
;            required in serializer, @DispatchSerializer
;            required in dispatcher, @RoutineDispatcher
;            record
;                requestId,          int
;                arguments,          JSON_ELEMENT
;                argumentDefinition, @ArgumentDataDefinition
;
;                ;;Argument 1 (REQUIRED INOUT STROPTSOUTTER structure @Stroptsoutter)
;                arg1DataObject,     @DataObjectBase
;                arg1,               strStroptsoutter
;            endrecord
;
;
;        proc
;
;            ;;------------------------------------------------------------
;            ;;Process inbound arguments
;
;            arguments = callFrame.GetProperty("params")
;
;            ;;Argument 1 (REQUIRED INOUT STROPTSOUTTER structure @Stroptsoutter)
;
;            ;;Structure argument. Get the data object then get the record from it
;            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStroptsoutterMetadata)
;            arg1 = arg1DataObject.SynergyRecord
;
;            ;;------------------------------------------------------------
;            ;; Call the underlying routine
;
;            xcall StrOptTst1(arg1)
;
;            ;;--------------------------------------------------------------------------------
;            ;;Argument 1 (REQUIRED INOUT STROPTSOUTTER structure @Stroptsoutter)
;            
;            ;;Argument 1: Single Stroptsoutter record
;            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,70,"STROPTSOUTTER",true)
;        endmethod
;
;    endclass

endnamespace
