;;*****************************************************************************
;;
;; Title:       AutoTimeMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Test.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Test.AutoTime


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeALin
    ;;; </summary>
    public class AutoTimeALin_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeALin_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN TIMEKEY ArrayList collection of structure @Timekey)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN TIMEKEY ArrayList collection of structure @Timekey)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],50)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg1Array,arg1,FieldDataType.AlphaField)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeALin(arg1)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeALout
    ;;; </summary>
    public class AutoTimeALout_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeALout_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeALout(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT TIMEKEY ArrayList collection of structure @Timekey)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,50,"TIMEKEY",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeArray
    ;;; </summary>
    public class AutoTimeArray_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT TIMEKEY [*]structure @Timekey)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, @Timekey
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT TIMEKEY [*]structure @Timekey)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],50)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeArray(^marray(strTimekey,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT TIMEKEY [*]structure @Timekey)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,50,"TIMEKEY",%mem_proc(DM_GETSIZE,arg1Handle)/50,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeINOUT
    ;;; </summary>
    public class AutoTimeINOUT_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeINOUT_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT TIMEKEY structure @Timekey)
                arg1DataObject,     @DataObjectBase
                arg1,               strTimekey
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT TIMEKEY structure @Timekey)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mTimekeyMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeInOut(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT TIMEKEY structure @Timekey)
            
            ;;Argument 1: Single Timekey record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,50,"TIMEKEY",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeIn
    ;;; </summary>
    public class AutoTimeIn_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeIn_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN TIMEKEY structure @Timekey)
                arg1DataObject,     @DataObjectBase
                arg1,               strTimekey
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN TIMEKEY structure @Timekey)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mTimekeyMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeIn(arg1)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method AutoTime.AutoTimeOut
    ;;; </summary>
    public class AutoTimeOut_Dispatcher extends RoutineStub

        private mTimekeyMetadata, @DataObjectMetadataBase

        public method AutoTimeOut_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTimekeyMetadata = DataObjectMetadataBase.LookupType("Timekey")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT TIMEKEY structure @Timekey)
                arg1DataObject,     @DataObjectBase
                arg1,               strTimekey
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT TIMEKEY structure @Timekey)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall AutoTimeOut(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT TIMEKEY structure @Timekey)
            
            ;;Argument 1: Single Timekey record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,50,"TIMEKEY",true)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Test.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Test.Models
    public class AutoTimeDummyModel
    endclass
endnamespace

