;;*****************************************************************************
;;
;; Title:       CollectParamMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.CollectParam


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.ColPrmIntegers
    ;;; </summary>
    public class ColPrmIntegers_Dispatcher extends RoutineStub

        private mIntegertestMetadata, @DataObjectMetadataBase

        public method ColPrmIntegers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mIntegertestMetadata = DataObjectMetadataBase.LookupType("Integertest")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT INTEGERTESTS memory handle collection of structure @Integertest)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT INTEGERTESTS memory handle collection of structure @Integertest)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,15)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall ColPrmIntegers(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT INTEGERTESTS memory handle collection of structure @Integertest)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,15,"INTEGERTESTS",%mem_proc(DM_GETSIZE,arg1Handle)/15,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam1
    ;;; </summary>
    public class CollectParam1_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase

        public method CollectParam1_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST1 memory handle collection of structure @Strtest1)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST1 memory handle collection of structure @Strtest1)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,46)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam1(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST1 memory handle collection of structure @Strtest1)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,46,"STRTEST1",%mem_proc(DM_GETSIZE,arg1Handle)/46,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam12
    ;;; </summary>
    public class CollectParam12_Dispatcher extends RoutineStub

        private mStrtest12Metadata, @DataObjectMetadataBase

        public method CollectParam12_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest12Metadata = DataObjectMetadataBase.LookupType("Strtest12")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST12 memory handle collection of structure @Strtest12)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST12 memory handle collection of structure @Strtest12)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,56)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam12(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST12 memory handle collection of structure @Strtest12)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,56,"STRTEST12",%mem_proc(DM_GETSIZE,arg1Handle)/56,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam14
    ;;; </summary>
    public class CollectParam14_Dispatcher extends RoutineStub

        private mStrtest14Metadata, @DataObjectMetadataBase

        public method CollectParam14_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest14Metadata = DataObjectMetadataBase.LookupType("Strtest14")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST14 memory handle collection of structure @Strtest14)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST14 memory handle collection of structure @Strtest14)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,112)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam14(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST14 memory handle collection of structure @Strtest14)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,112,"STRTEST14",%mem_proc(DM_GETSIZE,arg1Handle)/112,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam16
    ;;; </summary>
    public class CollectParam16_Dispatcher extends RoutineStub

        private mStrtest16Metadata, @DataObjectMetadataBase

        public method CollectParam16_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest16Metadata = DataObjectMetadataBase.LookupType("Strtest16")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST16 memory handle collection of structure @Strtest16)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST16 memory handle collection of structure @Strtest16)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,120)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam16(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST16 memory handle collection of structure @Strtest16)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,120,"STRTEST16",%mem_proc(DM_GETSIZE,arg1Handle)/120,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam2
    ;;; </summary>
    public class CollectParam2_Dispatcher extends RoutineStub

        private mStrtest2Metadata, @DataObjectMetadataBase

        public method CollectParam2_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest2Metadata = DataObjectMetadataBase.LookupType("Strtest2")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST2 memory handle collection of structure @Strtest2)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST2 memory handle collection of structure @Strtest2)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,71)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam2(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST2 memory handle collection of structure @Strtest2)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,71,"STRTEST2",%mem_proc(DM_GETSIZE,arg1Handle)/71,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.CollectParam3
    ;;; </summary>
    public class CollectParam3_Dispatcher extends RoutineStub

        private mStrtest3Metadata, @DataObjectMetadataBase

        public method CollectParam3_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST3 memory handle collection of structure @Strtest3)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST3 memory handle collection of structure @Strtest3)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,58)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CollectParam3(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST3 memory handle collection of structure @Strtest3)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,58,"STRTEST3",%mem_proc(DM_GETSIZE,arg1Handle)/58,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.TestStr2Timing
    ;;; </summary>
    public class TestStr2Timing_Dispatcher extends RoutineStub

        private mStrtest2Metadata, @DataObjectMetadataBase

        public method TestStr2Timing_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest2Metadata = DataObjectMetadataBase.LookupType("Strtest2")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT STRTEST2 structure @Strtest2)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT STRTEST2 [*]structure @Strtest2)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,71)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall TestStr2Timing(^marray(strStrtest2,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT STRTEST2 [*]structure @Strtest2)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,71,"STRTEST2",%mem_proc(DM_GETSIZE,arg1Handle)/71,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.colprmDateTimeAry
    ;;; </summary>
    public class colprmDateTimeAry_Dispatcher extends RoutineStub

        private mDatetimearyMetadata, @DataObjectMetadataBase

        public method colprmDateTimeAry_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDatetimearyMetadata = DataObjectMetadataBase.LookupType("Datetimeary")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT DATETIMEARY memory handle collection of structure @Datetimeary)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT DATETIMEARY memory handle collection of structure @Datetimeary)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,108)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall colprmDateTimeAry(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT DATETIMEARY memory handle collection of structure @Datetimeary)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,108,"DATETIMEARY",%mem_proc(DM_GETSIZE,arg1Handle)/108,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method CollectParam.colprmDateTmeStr
    ;;; </summary>
    public class colprmDateTmeStr_Dispatcher extends RoutineStub

        private mDatetimestrMetadata, @DataObjectMetadataBase

        public method colprmDateTmeStr_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDatetimestrMetadata = DataObjectMetadataBase.LookupType("Datetimestr")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT DATETIMESTR memory handle collection of structure @Datetimestr)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT DATETIMESTR memory handle collection of structure @Datetimestr)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,34)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall colprmDateTmeStr(arg1Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT DATETIMESTR memory handle collection of structure @Datetimestr)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,34,"DATETIMESTR",%mem_proc(DM_GETSIZE,arg1Handle)/34,true)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class CollectParamDummyModel
    endclass
endnamespace

