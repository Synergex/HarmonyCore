;;*****************************************************************************
;;
;; Title:       SampleXfplEnvMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.SampleXfplEnv


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.ArrayListParameters
    ;;; </summary>
    public class ArrayListParameters_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method ArrayListParameters_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN p1 ArrayList collection of @ArrayList)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                ;;Argument 2 (REQUIRED OUT p2 ArrayList collection of @ArrayList)
                arg2Array,          JSON_ELEMENT
                arg2,               @ArrayList
                ;;Argument 3 (REQUIRED IN p4 ArrayList collection of @ArrayList)
                arg3Array,          JSON_ELEMENT
                arg3,               @ArrayList
                ;;Argument 4 (REQUIRED OUT p5 ArrayList collection of @ArrayList)
                arg4Array,          JSON_ELEMENT
                arg4,               @ArrayList
                ;;Argument 5 (REQUIRED IN p7 ArrayList collection of @ArrayList)
                arg5Array,          JSON_ELEMENT
                arg5,               @ArrayList
                ;;Argument 6 (REQUIRED OUT p8 ArrayList collection of @ArrayList)
                arg6Array,          JSON_ELEMENT
                arg6,               @ArrayList
                ;;Argument 7 (REQUIRED IN p10 ArrayList collection of @ArrayList)
                arg7Array,          JSON_ELEMENT
                arg7,               @ArrayList
                ;;Argument 8 (REQUIRED OUT p11 ArrayList collection of @ArrayList)
                arg8Array,          JSON_ELEMENT
                arg8,               @ArrayList
                ;;Argument 9 (REQUIRED IN p13 ArrayList collection of @ArrayList)
                arg9Array,          JSON_ELEMENT
                arg9,               @ArrayList
                ;;Argument 10 (REQUIRED OUT p14 ArrayList collection of @ArrayList)
                arg10Array,          JSON_ELEMENT
                arg10,               @ArrayList
                ;;Argument 11 (REQUIRED IN p16 ArrayList collection of @ArrayList)
                arg11Array,          JSON_ELEMENT
                arg11,               @ArrayList
                ;;Argument 12 (REQUIRED OUT p17 ArrayList collection of @ArrayList)
                arg12Array,          JSON_ELEMENT
                arg12,               @ArrayList
                ;;Argument 13 (REQUIRED IN p19 ArrayList collection of @ArrayList)
                arg13Array,          JSON_ELEMENT
                arg13,               @ArrayList
                ;;Argument 14 (REQUIRED OUT p20 ArrayList collection of @ArrayList)
                arg14Array,          JSON_ELEMENT
                arg14,               @ArrayList
                ;;Argument 15 (REQUIRED IN p22 ArrayList collection of @ArrayList)
                arg15Array,          JSON_ELEMENT
                arg15,               @ArrayList
                ;;Argument 16 (REQUIRED OUT p23 ArrayList collection of @ArrayList)
                arg16Array,          JSON_ELEMENT
                arg16,               @ArrayList
                ;;Argument 17 (REQUIRED IN p25 ArrayList collection of structure @Customer)
                arg17Array,          JSON_ELEMENT
                arg17,               @ArrayList
                ;;Argument 18 (REQUIRED OUT p26 ArrayList collection of structure @Customer)
                arg18Array,          JSON_ELEMENT
                arg18,               @ArrayList
                ;;Argument 19 (REQUIRED IN p28 ArrayList collection of @ArrayList YYYYMMDD date)
                arg19Array,          JSON_ELEMENT
                arg19,               @ArrayList
                ;;Argument 20 (REQUIRED OUT p29 ArrayList collection of @ArrayList YYYYMMDD date)
                arg20Array,          JSON_ELEMENT
                arg20,               @ArrayList
                ;;Argument 21 (REQUIRED IN p31 ArrayList collection of @ArrayList YYMMDD date)
                arg21Array,          JSON_ELEMENT
                arg21,               @ArrayList
                ;;Argument 22 (REQUIRED OUT p32 ArrayList collection of @ArrayList YYMMDD date)
                arg22Array,          JSON_ELEMENT
                arg22,               @ArrayList
                ;;Argument 23 (REQUIRED IN p34 ArrayList collection of @ArrayList YYYYJJJ date)
                arg23Array,          JSON_ELEMENT
                arg23,               @ArrayList
                ;;Argument 24 (REQUIRED OUT p35 ArrayList collection of @ArrayList YYYYJJJ date)
                arg24Array,          JSON_ELEMENT
                arg24,               @ArrayList
                ;;Argument 25 (REQUIRED IN p37 ArrayList collection of @ArrayList YYJJJ date)
                arg25Array,          JSON_ELEMENT
                arg25,               @ArrayList
                ;;Argument 26 (REQUIRED OUT p38 ArrayList collection of @ArrayList YYJJJ date)
                arg26Array,          JSON_ELEMENT
                arg26,               @ArrayList
                ;;Argument 27 (REQUIRED IN p40 ArrayList collection of @ArrayList HHMMSS time)
                arg27Array,          JSON_ELEMENT
                arg27,               @ArrayList
                ;;Argument 28 (REQUIRED OUT p41 ArrayList collection of @ArrayList HHMMSS time)
                arg28Array,          JSON_ELEMENT
                arg28,               @ArrayList
                ;;Argument 29 (REQUIRED IN p43 ArrayList collection of @ArrayList HHMM time)
                arg29Array,          JSON_ELEMENT
                arg29,               @ArrayList
                ;;Argument 30 (REQUIRED OUT p44 ArrayList collection of @ArrayList HHMM time)
                arg30Array,          JSON_ELEMENT
                arg30,               @ArrayList
                ;;Argument 31 (REQUIRED IN p46 ArrayList collection of @ArrayList YYYYMMDDHHMISS date)
                arg31Array,          JSON_ELEMENT
                arg31,               @ArrayList
                ;;Argument 32 (REQUIRED OUT p47 ArrayList collection of @ArrayList YYYYMMDDHHMISS date)
                arg32Array,          JSON_ELEMENT
                arg32,               @ArrayList
                ;;Argument 33 (REQUIRED IN p49 ArrayList collection of @ArrayList)
                arg33Array,          JSON_ELEMENT
                arg33,               @ArrayList
                ;;Argument 34 (REQUIRED OUT p50 ArrayList collection of @ArrayList)
                arg34Array,          JSON_ELEMENT
                arg34,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN p1 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],1)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg1Array,arg1,FieldDataType.AlphaField)

            ;;Argument 2 (REQUIRED OUT p2 ArrayList collection of @ArrayList)

            arg2 = new ArrayList()

            ;;Argument 3 (REQUIRED IN p4 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[3],6)
            arg3Array = arguments[3].GetProperty("PassedValue")
            arg3 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg3Array,arg3,FieldDataType.DecimalField)

            ;;Argument 4 (REQUIRED OUT p5 ArrayList collection of @ArrayList)

            arg4 = new ArrayList()

            ;;Argument 5 (REQUIRED IN p7 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[5],12)
            arg5Array = arguments[5].GetProperty("PassedValue")
            arg5 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg5Array,arg5,FieldDataType.DecimalField)

            ;;Argument 6 (REQUIRED OUT p8 ArrayList collection of @ArrayList)

            arg6 = new ArrayList()

            ;;Argument 7 (REQUIRED IN p10 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[7],6,2)
            arg7Array = arguments[7].GetProperty("PassedValue")
            arg7 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg7Array,arg7,FieldDataType.ImpliedDecimal)

            ;;Argument 8 (REQUIRED OUT p11 ArrayList collection of @ArrayList)

            arg8 = new ArrayList()

            ;;Argument 9 (REQUIRED IN p13 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[9],1)
            arg9Array = arguments[9].GetProperty("PassedValue")
            arg9 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg9Array,arg9,FieldDataType.IntegerField)

            ;;Argument 10 (REQUIRED OUT p14 ArrayList collection of @ArrayList)

            arg10 = new ArrayList()

            ;;Argument 11 (REQUIRED IN p16 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[11],2)
            arg11Array = arguments[11].GetProperty("PassedValue")
            arg11 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg11Array,arg11,FieldDataType.IntegerField)

            ;;Argument 12 (REQUIRED OUT p17 ArrayList collection of @ArrayList)

            arg12 = new ArrayList()

            ;;Argument 13 (REQUIRED IN p19 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[13],4)
            arg13Array = arguments[13].GetProperty("PassedValue")
            arg13 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg13Array,arg13,FieldDataType.IntegerField)

            ;;Argument 14 (REQUIRED OUT p20 ArrayList collection of @ArrayList)

            arg14 = new ArrayList()

            ;;Argument 15 (REQUIRED IN p22 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[15],8)
            arg15Array = arguments[15].GetProperty("PassedValue")
            arg15 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg15Array,arg15,FieldDataType.IntegerField)

            ;;Argument 16 (REQUIRED OUT p23 ArrayList collection of @ArrayList)

            arg16 = new ArrayList()

            ;;Argument 17 (REQUIRED IN p25 ArrayList collection of structure @Customer)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[17],161)
            arg17Array = arguments[17].GetProperty("PassedValue")
            arg17 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg17Array,arg17,FieldDataType.AlphaField)

            ;;Argument 18 (REQUIRED OUT p26 ArrayList collection of structure @Customer)

            arg18 = new ArrayList()

            ;;Argument 19 (REQUIRED IN p28 ArrayList collection of @ArrayList YYYYMMDD date)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[19],8)
            arg19Array = arguments[19].GetProperty("PassedValue")
            arg19 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg19Array,arg19,FieldDataType.DecimalField)

            ;;Argument 20 (REQUIRED OUT p29 ArrayList collection of @ArrayList YYYYMMDD date)

            arg20 = new ArrayList()

            ;;Argument 21 (REQUIRED IN p31 ArrayList collection of @ArrayList YYMMDD date)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[21],6)
            arg21Array = arguments[21].GetProperty("PassedValue")
            arg21 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg21Array,arg21,FieldDataType.DecimalField)

            ;;Argument 22 (REQUIRED OUT p32 ArrayList collection of @ArrayList YYMMDD date)

            arg22 = new ArrayList()

            ;;Argument 23 (REQUIRED IN p34 ArrayList collection of @ArrayList YYYYJJJ date)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[23],7)
            arg23Array = arguments[23].GetProperty("PassedValue")
            arg23 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg23Array,arg23,FieldDataType.DecimalField)

            ;;Argument 24 (REQUIRED OUT p35 ArrayList collection of @ArrayList YYYYJJJ date)

            arg24 = new ArrayList()

            ;;Argument 25 (REQUIRED IN p37 ArrayList collection of @ArrayList YYJJJ date)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[25],5)
            arg25Array = arguments[25].GetProperty("PassedValue")
            arg25 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg25Array,arg25,FieldDataType.DecimalField)

            ;;Argument 26 (REQUIRED OUT p38 ArrayList collection of @ArrayList YYJJJ date)

            arg26 = new ArrayList()

            ;;Argument 27 (REQUIRED IN p40 ArrayList collection of @ArrayList HHMMSS time)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[27],6)
            arg27Array = arguments[27].GetProperty("PassedValue")
            arg27 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg27Array,arg27,FieldDataType.DecimalField)

            ;;Argument 28 (REQUIRED OUT p41 ArrayList collection of @ArrayList HHMMSS time)

            arg28 = new ArrayList()

            ;;Argument 29 (REQUIRED IN p43 ArrayList collection of @ArrayList HHMM time)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[29],4)
            arg29Array = arguments[29].GetProperty("PassedValue")
            arg29 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg29Array,arg29,FieldDataType.DecimalField)

            ;;Argument 30 (REQUIRED OUT p44 ArrayList collection of @ArrayList HHMM time)

            arg30 = new ArrayList()

            ;;Argument 31 (REQUIRED IN p46 ArrayList collection of @ArrayList YYYYMMDDHHMISS date)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[31],14)
            arg31Array = arguments[31].GetProperty("PassedValue")
            arg31 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg31Array,arg31,FieldDataType.DecimalField)

            ;;Argument 32 (REQUIRED OUT p47 ArrayList collection of @ArrayList YYYYMMDDHHMISS date)

            arg32 = new ArrayList()

            ;;Argument 33 (REQUIRED IN p49 ArrayList collection of @ArrayList)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[33],20)
            arg33Array = arguments[33].GetProperty("PassedValue")
            arg33 = new ArrayList()
            dispatcher.UnwrapObjectCollection(argumentDefinition,arg33Array,arg33,FieldDataType.AlphaField)

            ;;Argument 34 (REQUIRED OUT p50 ArrayList collection of @ArrayList)

            arg34 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall arraylist_parameters(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23,arg24,arg25,arg26,arg27,arg28,arg29,arg30,arg31,arg32,arg33,arg34)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT p2 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(2,arg2,FieldDataType.AlphaArrayField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 4 (REQUIRED OUT p5 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(4,arg4,FieldDataType.DecimalArrayField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 6 (REQUIRED OUT p8 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(6,arg6,FieldDataType.DecimalArrayField,12,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 8 (REQUIRED OUT p11 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(8,arg8,FieldDataType.ImpliedDecimalArrayField,6,2,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 10 (REQUIRED OUT p14 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(10,arg10,FieldDataType.IntegerArrayField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 12 (REQUIRED OUT p17 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(12,arg12,FieldDataType.IntegerArrayField,2,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 14 (REQUIRED OUT p20 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(14,arg14,FieldDataType.IntegerArrayField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 16 (REQUIRED OUT p23 ArrayList collection of @ArrayList)
            
            serializer.ArgumentData(16,arg16,FieldDataType.IntegerArrayField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 18 (REQUIRED OUT p26 ArrayList collection of structure @Customer)
            
            serializer.ArgumentData(18,arg18,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 20 (REQUIRED OUT p29 ArrayList collection of @ArrayList YYYYMMDD date)
            
            serializer.ArgumentData(20,arg20,FieldDataType.DecimalArrayField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 22 (REQUIRED OUT p32 ArrayList collection of @ArrayList YYMMDD date)
            
            serializer.ArgumentData(22,arg22,FieldDataType.DecimalArrayField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 24 (REQUIRED OUT p35 ArrayList collection of @ArrayList YYYYJJJ date)
            
            serializer.ArgumentData(24,arg24,FieldDataType.DecimalArrayField,7,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 26 (REQUIRED OUT p38 ArrayList collection of @ArrayList YYJJJ date)
            
            serializer.ArgumentData(26,arg26,FieldDataType.DecimalArrayField,5,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 28 (REQUIRED OUT p41 ArrayList collection of @ArrayList HHMMSS time)
            
            serializer.ArgumentData(28,arg28,FieldDataType.DecimalArrayField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 30 (REQUIRED OUT p44 ArrayList collection of @ArrayList HHMM time)
            
            serializer.ArgumentData(30,arg30,FieldDataType.DecimalArrayField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 32 (REQUIRED OUT p47 ArrayList collection of @ArrayList YYYYMMDDHHMISS date)
            
            serializer.ArgumentData(32,arg32,FieldDataType.DecimalArrayField,14,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 34 (REQUIRED OUT p50 ArrayList collection of @ArrayList)
            
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.ArrayParameters
    ;;; </summary>
    public class ArrayParameters_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method ArrayParameters_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN p1 [*]a1)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED OUT p2 [*]a1)
                arg2Array,          JSON_ELEMENT
                arg2Handle,         D_HANDLE
                arg2HandlePos,      int
                ;;Argument 3 (REQUIRED INOUT p3 [*]a1)
                arg3Array,          JSON_ELEMENT
                arg3Handle,         D_HANDLE
                arg3HandlePos,      int
                ;;Argument 4 (REQUIRED IN p25 structure @Customer)
                arg4Array,          JSON_ELEMENT
                arg4Handle,         D_HANDLE
                arg4HandlePos,      int
                ;;Argument 5 (REQUIRED OUT p26 structure @Customer)
                arg5Array,          JSON_ELEMENT
                arg5Handle,         D_HANDLE
                arg5HandlePos,      int
                ;;Argument 6 (REQUIRED INOUT p27 structure @Customer)
                arg6Array,          JSON_ELEMENT
                arg6Handle,         D_HANDLE
                arg6HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, a1
            endstructure

            ;;Temp structure tempstr2
            structure tempstr2
                arry, a1
            endstructure

            ;;Temp structure tempstr3
            structure tempstr3
                arry, a1
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN p1 [*][*]a1)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],1)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED OUT p2 [*][*]a1)

            arg2Handle = %mem_proc(DM_ALLOC | DM_ZERO,1)

            ;;Argument 3 (REQUIRED INOUT p3 [*][*]a1)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[3],1)
            arg3Array = arguments[3].GetProperty("PassedValue")
            arg3Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg3Array.GetArrayLength())
            arg3HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg3Handle),argumentDefinition,arg3HandlePos,arg3Array)

            ;;Argument 4 (REQUIRED IN p25 [*]structure @Customer)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[4],161)
            arg4Array = arguments[4].GetProperty("PassedValue")
            arg4Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg4Array.GetArrayLength())
            arg4HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg4Handle),argumentDefinition,arg4HandlePos,arg4Array)

            ;;Argument 5 (REQUIRED OUT p26 [*]structure @Customer)

            arg5Handle = %mem_proc(DM_ALLOC | DM_ZERO,161)

            ;;Argument 6 (REQUIRED INOUT p27 [*]structure @Customer)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[6],161)
            arg6Array = arguments[6].GetProperty("PassedValue")
            arg6Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg6Array.GetArrayLength())
            arg6HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg6Handle),argumentDefinition,arg6HandlePos,arg6Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall array_parameters(^marray(tempstr1.arry,arg1Handle),^marray(tempstr2.arry,arg2Handle),^marray(tempstr3.arry,arg3Handle),^marray(strCustomer,arg4Handle),^marray(strCustomer,arg5Handle),^marray(strCustomer,arg6Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT p2 [*][*]a1)
            
            serializer.ArgumentHandleData(2,arg2Handle,FieldDataType.AlphaArrayField,1,0,%mem_proc(DM_GETSIZE,arg2Handle)/1,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED INOUT p3 [*][*]a1)
            
            serializer.ArgumentHandleData(3,arg3Handle,FieldDataType.AlphaArrayField,1,0,%mem_proc(DM_GETSIZE,arg3Handle)/1,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 5 (REQUIRED OUT p26 [*]structure @Customer)
            
            serializer.ArgumentHandleData(5,arg5Handle,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",%mem_proc(DM_GETSIZE,arg5Handle)/161,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 6 (REQUIRED INOUT p27 [*]structure @Customer)
            
            serializer.ArgumentHandleData(6,arg6Handle,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",%mem_proc(DM_GETSIZE,arg6Handle)/161,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.GetAllCustomers
    ;;; </summary>
    public class GetAllCustomers_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method GetAllCustomers_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @Customer)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
                arg2,               a80
                returnValue,         METHOD_STATUS
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @Customer)

            arg1 = new ArrayList()

            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %get_all_customers(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Customers ArrayList collection of structure @Customer)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,161,"CUSTOMERS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,80,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.GetAllItems
    ;;; </summary>
    public class GetAllItems_Dispatcher extends RoutineStub

        private mItemMetadata, @DataObjectMetadataBase

        public method GetAllItems_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mItemMetadata = DataObjectMetadataBase.LookupType("Item")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @Item)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
                arg2,               a80
                returnValue,         METHOD_STATUS
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @Item)

            arg1 = new ArrayList()

            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %get_all_items(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Items ArrayList collection of structure @Item)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,151,"ITEMS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,80,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.GetAllOrders
    ;;; </summary>
    public class GetAllOrders_Dispatcher extends RoutineStub

        private mOrderMetadata, @DataObjectMetadataBase

        public method GetAllOrders_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mOrderMetadata = DataObjectMetadataBase.LookupType("Order")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @Order)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
                arg2,               a80
                returnValue,         METHOD_STATUS
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @Order)

            arg1 = new ArrayList()

            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %get_all_orders(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Orders ArrayList collection of structure @Order)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,100,"ORDERS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,80,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.GetAllVendors
    ;;; </summary>
    public class GetAllVendors_Dispatcher extends RoutineStub

        private mVendorMetadata, @DataObjectMetadataBase

        public method GetAllVendors_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mVendorMetadata = DataObjectMetadataBase.LookupType("Vendor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @Vendor)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
                ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
                arg2,               a80
                returnValue,         METHOD_STATUS
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @Vendor)

            arg1 = new ArrayList()

            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %get_all_vendors(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Vendors ArrayList collection of structure @Vendor)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,135,"VENDORS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,80,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.GetCustomerArray
    ;;; </summary>
    public class GetCustomerArray_Dispatcher extends RoutineStub


        public method GetCustomerArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT Customers [*]a162)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
                arg2,               a80
                returnValue,         METHOD_STATUS
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, a162
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT Customers [*][*]a162)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,162)

            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %get_customers_array(^marray(tempstr1.arry,arg1Handle),arg2)

            ;;Function return value
            serializer.ArgumentData(0,(int)returnValue,FieldDataType.EnumField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT Customers [*][*]a162)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.AlphaArrayField,162,0,%mem_proc(DM_GETSIZE,arg1Handle)/162,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT ErrorMessage a80)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,80,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method SampleXfplEnv.SimpleParameters
    ;;; </summary>
    public class SimpleParameters_Dispatcher extends RoutineStub

        private mCustomerMetadata, @DataObjectMetadataBase

        public method SimpleParameters_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mCustomerMetadata = DataObjectMetadataBase.LookupType("Customer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN p1 a1)
                arg1,               a1
                ;;Argument 2 (REQUIRED OUT p2 a1)
                arg2,               a1
                ;;Argument 3 (REQUIRED INOUT p3 a1)
                arg3,               a1
                ;;Argument 4 (REQUIRED IN p4 d6)
                arg4,               d6
                ;;Argument 5 (REQUIRED OUT p5 d6)
                arg5,               d6
                ;;Argument 6 (REQUIRED INOUT p6 d6)
                arg6,               d6
                ;;Argument 7 (REQUIRED IN p7 d12)
                arg7,               d12
                ;;Argument 8 (REQUIRED OUT p8 d12)
                arg8,               d12
                ;;Argument 9 (REQUIRED INOUT p9 d12)
                arg9,               d12
                ;;Argument 10 (REQUIRED IN p10 d6.2)
                arg10,               d6.2
                ;;Argument 11 (REQUIRED OUT p11 d6.2)
                arg11,               d6.2
                ;;Argument 12 (REQUIRED INOUT p12 d6.2)
                arg12,               d6.2
                ;;Argument 13 (REQUIRED IN p13 i1)
                arg13,               i1
                ;;Argument 14 (REQUIRED OUT p14 i1)
                arg14,               i1
                ;;Argument 15 (REQUIRED INOUT p15 i1)
                arg15,               i1
                ;;Argument 16 (REQUIRED IN p16 i2)
                arg16,               i2
                ;;Argument 17 (REQUIRED OUT p17 i2)
                arg17,               i2
                ;;Argument 18 (REQUIRED INOUT p18 i2)
                arg18,               i2
                ;;Argument 19 (REQUIRED IN p19 i4)
                arg19,               i4
                ;;Argument 20 (REQUIRED OUT p20 i4)
                arg20,               i4
                ;;Argument 21 (REQUIRED INOUT p21 i4)
                arg21,               i4
                ;;Argument 22 (REQUIRED IN p22 i8)
                arg22,               i8
                ;;Argument 23 (REQUIRED OUT p23 i8)
                arg23,               i8
                ;;Argument 24 (REQUIRED INOUT p24 i8)
                arg24,               i8
                ;;Argument 25 (REQUIRED IN p25 structure @Customer)
                arg25DataObject,     @DataObjectBase
                arg25,               strCustomer
                ;;Argument 26 (REQUIRED OUT p26 structure @Customer)
                arg26DataObject,     @DataObjectBase
                arg26,               strCustomer
                ;;Argument 27 (REQUIRED INOUT p27 structure @Customer)
                arg27DataObject,     @DataObjectBase
                arg27,               strCustomer
                ;;Argument 28 (REQUIRED IN p28 d8 YYYYMMDD date)
                arg28,               d8
                ;;Argument 29 (REQUIRED OUT p29 d8 YYYYMMDD date)
                arg29,               d8
                ;;Argument 30 (REQUIRED INOUT p30 d8 YYYYMMDD date)
                arg30,               d8
                ;;Argument 31 (REQUIRED IN p31 d6 YYMMDD date)
                arg31,               d6
                ;;Argument 32 (REQUIRED OUT p32 d6 YYMMDD date)
                arg32,               d6
                ;;Argument 33 (REQUIRED INOUT p33 d6 YYMMDD date)
                arg33,               d6
                ;;Argument 34 (REQUIRED IN p34 d7 YYYYJJJ date)
                arg34,               d7
                ;;Argument 35 (REQUIRED OUT p35 d7 YYYYJJJ date)
                arg35,               d7
                ;;Argument 36 (REQUIRED INOUT p36 d7 YYYYJJJ date)
                arg36,               d7
                ;;Argument 37 (REQUIRED IN p37 d5 YYJJJ date)
                arg37,               d5
                ;;Argument 38 (REQUIRED OUT p38 d5 YYJJJ date)
                arg38,               d5
                ;;Argument 39 (REQUIRED INOUT p39 d5 YYJJJ date)
                arg39,               d5
                ;;Argument 40 (REQUIRED IN p40 d6 HHMMSS time)
                arg40,               d6
                ;;Argument 41 (REQUIRED OUT p41 d6 HHMMSS time)
                arg41,               d6
                ;;Argument 42 (REQUIRED INOUT p42 d6 HHMMSS time)
                arg42,               d6
                ;;Argument 43 (REQUIRED IN p43 d4 HHMM time)
                arg43,               d4
                ;;Argument 44 (REQUIRED OUT p44 d4 HHMM time)
                arg44,               d4
                ;;Argument 45 (REQUIRED INOUT p45 d4 HHMM time)
                arg45,               d4
                ;;Argument 46 (REQUIRED IN p46 d14 YYYYMMDDHHMISS date)
                arg46,               d14
                ;;Argument 47 (REQUIRED OUT p47 d14 HHMM time)
                arg47,               d14
                ;;Argument 48 (REQUIRED INOUT p48 d14 HHMM time)
                arg48,               d14
                ;;Argument 49 (REQUIRED IN p49 d20 YYYYMMDDHHMISS date)
                arg49,               d20
                ;;Argument 50 (REQUIRED OUT p50 d20 YYYYMMDDHHMISS date)
                arg50,               d20
                ;;Argument 51 (REQUIRED INOUT p51 d20 YYYYMMDDHHMISS date)
                arg51,               d20
                ;;Argument 52 (REQUIRED IN p52 enum METHOD_STATUS)
                arg52,               METHOD_STATUS
                ;;Argument 53 (REQUIRED OUT p53 enum METHOD_STATUS)
                arg53,               METHOD_STATUS
                ;;Argument 54 (REQUIRED INOUT p54 enum METHOD_STATUS)
                arg54,               METHOD_STATUS
                ;;Argument 55 (REQUIRED IN p55 D_HANDLE)
                arg55Array,          JSON_ELEMENT
                arg55Handle,         D_HANDLE
                ;;Argument 56 (REQUIRED OUT p56 D_HANDLE)
                arg56Array,          JSON_ELEMENT
                arg56Handle,         D_HANDLE
                ;;Argument 57 (REQUIRED INOUT p57 D_HANDLE)
                arg57Array,          JSON_ELEMENT
                arg57Handle,         D_HANDLE
                ;;Argument 58 (REQUIRED IN p58 D_HANDLE)
                arg58Array,          JSON_ELEMENT
                arg58Handle,         D_HANDLE
                ;;Argument 59 (REQUIRED OUT p59 D_HANDLE)
                arg59Array,          JSON_ELEMENT
                arg59Handle,         D_HANDLE
                ;;Argument 60 (REQUIRED INOUT p60 D_HANDLE)
                arg60Array,          JSON_ELEMENT
                arg60Handle,         D_HANDLE
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN p1 a1)

            arg1 = dispatcher.GetText(arguments[1])

            ;;Argument 2 (REQUIRED OUT p2 a1)


            ;;Argument 3 (REQUIRED INOUT p3 a1)

            arg3 = dispatcher.GetText(arguments[3])

            ;;Argument 4 (REQUIRED IN p4 d6)

            arg4 = dispatcher.GetDecimal(arguments[4])

            ;;Argument 5 (REQUIRED OUT p5 d6)


            ;;Argument 6 (REQUIRED INOUT p6 d6)

            arg6 = dispatcher.GetDecimal(arguments[6])

            ;;Argument 7 (REQUIRED IN p7 d12)

            arg7 = dispatcher.GetDecimal(arguments[7])

            ;;Argument 8 (REQUIRED OUT p8 d12)


            ;;Argument 9 (REQUIRED INOUT p9 d12)

            arg9 = dispatcher.GetDecimal(arguments[9])

            ;;Argument 10 (REQUIRED IN p10 d6.2)

            arg10 = dispatcher.GetImplied(arguments[10])

            ;;Argument 11 (REQUIRED OUT p11 d6.2)


            ;;Argument 12 (REQUIRED INOUT p12 d6.2)

            arg12 = dispatcher.GetImplied(arguments[12])

            ;;Argument 13 (REQUIRED IN p13 i1)

            arg13 = dispatcher.GetInt(arguments[13])

            ;;Argument 14 (REQUIRED OUT p14 i1)


            ;;Argument 15 (REQUIRED INOUT p15 i1)

            arg15 = dispatcher.GetInt(arguments[15])

            ;;Argument 16 (REQUIRED IN p16 i2)

            arg16 = dispatcher.GetInt(arguments[16])

            ;;Argument 17 (REQUIRED OUT p17 i2)


            ;;Argument 18 (REQUIRED INOUT p18 i2)

            arg18 = dispatcher.GetInt(arguments[18])

            ;;Argument 19 (REQUIRED IN p19 i4)

            arg19 = dispatcher.GetInt(arguments[19])

            ;;Argument 20 (REQUIRED OUT p20 i4)


            ;;Argument 21 (REQUIRED INOUT p21 i4)

            arg21 = dispatcher.GetInt(arguments[21])

            ;;Argument 22 (REQUIRED IN p22 i8)

            arg22 = dispatcher.GetInt(arguments[22])

            ;;Argument 23 (REQUIRED OUT p23 i8)


            ;;Argument 24 (REQUIRED INOUT p24 i8)

            arg24 = dispatcher.GetInt(arguments[24])

            ;;Argument 25 (REQUIRED IN p25 structure @Customer)

            ;;Structure argument. Get the data object then get the record from it
            arg25DataObject = dispatcher.DeserializeObject(arguments[25],mCustomerMetadata)
            arg25 = arg25DataObject.SynergyRecord

            ;;Argument 26 (REQUIRED OUT p26 structure @Customer)


            ;;Argument 27 (REQUIRED INOUT p27 structure @Customer)

            ;;Structure argument. Get the data object then get the record from it
            arg27DataObject = dispatcher.DeserializeObject(arguments[27],mCustomerMetadata)
            arg27 = arg27DataObject.SynergyRecord

            ;;Argument 28 (REQUIRED IN p28 d8 YYYYMMDD date)

            arg28 = dispatcher.GetDecimal(arguments[28])

            ;;Argument 29 (REQUIRED OUT p29 d8 YYYYMMDD date)


            ;;Argument 30 (REQUIRED INOUT p30 d8 YYYYMMDD date)

            arg30 = dispatcher.GetDecimal(arguments[30])

            ;;Argument 31 (REQUIRED IN p31 d6 YYMMDD date)

            arg31 = dispatcher.GetDecimal(arguments[31])

            ;;Argument 32 (REQUIRED OUT p32 d6 YYMMDD date)


            ;;Argument 33 (REQUIRED INOUT p33 d6 YYMMDD date)

            arg33 = dispatcher.GetDecimal(arguments[33])

            ;;Argument 34 (REQUIRED IN p34 d7 YYYYJJJ date)

            arg34 = dispatcher.GetDecimal(arguments[34])

            ;;Argument 35 (REQUIRED OUT p35 d7 YYYYJJJ date)


            ;;Argument 36 (REQUIRED INOUT p36 d7 YYYYJJJ date)

            arg36 = dispatcher.GetDecimal(arguments[36])

            ;;Argument 37 (REQUIRED IN p37 d5 YYJJJ date)

            arg37 = dispatcher.GetDecimal(arguments[37])

            ;;Argument 38 (REQUIRED OUT p38 d5 YYJJJ date)


            ;;Argument 39 (REQUIRED INOUT p39 d5 YYJJJ date)

            arg39 = dispatcher.GetDecimal(arguments[39])

            ;;Argument 40 (REQUIRED IN p40 d6 HHMMSS time)

            arg40 = dispatcher.GetDecimal(arguments[40])

            ;;Argument 41 (REQUIRED OUT p41 d6 HHMMSS time)


            ;;Argument 42 (REQUIRED INOUT p42 d6 HHMMSS time)

            arg42 = dispatcher.GetDecimal(arguments[42])

            ;;Argument 43 (REQUIRED IN p43 d4 HHMM time)

            arg43 = dispatcher.GetDecimal(arguments[43])

            ;;Argument 44 (REQUIRED OUT p44 d4 HHMM time)


            ;;Argument 45 (REQUIRED INOUT p45 d4 HHMM time)

            arg45 = dispatcher.GetDecimal(arguments[45])

            ;;Argument 46 (REQUIRED IN p46 d14 YYYYMMDDHHMISS date)

            arg46 = dispatcher.GetDecimal(arguments[46])

            ;;Argument 47 (REQUIRED OUT p47 d14 HHMM time)


            ;;Argument 48 (REQUIRED INOUT p48 d14 HHMM time)

            arg48 = dispatcher.GetDecimal(arguments[48])

            ;;Argument 49 (REQUIRED IN p49 d20 YYYYMMDDHHMISS date)

            arg49 = dispatcher.GetDecimal(arguments[49])

            ;;Argument 50 (REQUIRED OUT p50 d20 YYYYMMDDHHMISS date)


            ;;Argument 51 (REQUIRED INOUT p51 d20 YYYYMMDDHHMISS date)

            arg51 = dispatcher.GetDecimal(arguments[51])

            ;;Argument 52 (REQUIRED IN p52 enum METHOD_STATUS)

            arg52 = (METHOD_STATUS)dispatcher.GetInt(arguments[52])

            ;;Argument 53 (REQUIRED OUT p53 enum METHOD_STATUS)


            ;;Argument 54 (REQUIRED INOUT p54 enum METHOD_STATUS)

            arg54 = (METHOD_STATUS)dispatcher.GetInt(arguments[54])

            ;;Argument 55 (REQUIRED IN p55 D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[55])
            arg55Array = arguments[55].GetProperty("PassedValue")
            arg55Handle = %mem_proc(DM_ALLOC | DM_BLANK,arg55Array.GetArrayLength())

            ;;Argument 56 (REQUIRED OUT p56 D_HANDLE)

            arg56Handle = %mem_proc(DM_ALLOC | DM_ZERO,4)

            ;;Argument 57 (REQUIRED INOUT p57 D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[57])
            arg57Array = arguments[57].GetProperty("PassedValue")
            arg57Handle = %mem_proc(DM_ALLOC | DM_BLANK,arg57Array.GetArrayLength())

            ;;Argument 58 (REQUIRED IN p58 D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[58])
            arg58Array = arguments[58].GetProperty("PassedValue")
            arg58Handle = %mem_proc(DM_ALLOC | DM_BLANK,arg58Array.GetArrayLength())

            ;;Argument 59 (REQUIRED OUT p59 D_HANDLE)

            arg59Handle = %mem_proc(DM_ALLOC | DM_ZERO,4)

            ;;Argument 60 (REQUIRED INOUT p60 D_HANDLE)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[60])
            arg60Array = arguments[60].GetProperty("PassedValue")
            arg60Handle = %mem_proc(DM_ALLOC | DM_BLANK,arg60Array.GetArrayLength())

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall simple_parameters(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14,arg15,arg16,arg17,arg18,arg19,arg20,arg21,arg22,arg23,arg24,arg25,arg26,arg27,arg28,arg29,arg30,arg31,arg32,arg33,arg34,arg35,arg36,arg37,arg38,arg39,arg40,arg41,arg42,arg43,arg44,arg45,arg46,arg47,arg48,arg49,arg50,arg51,arg52,arg53,arg54,arg55Handle,arg56Handle,arg57Handle,arg58Handle,arg59Handle,arg60Handle)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT p2 a1)
            
            serializer.ArgumentData(2,%atrim(arg2),FieldDataType.AlphaField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED INOUT p3 a1)
            
            serializer.ArgumentData(3,%atrim(arg3),FieldDataType.AlphaField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 5 (REQUIRED OUT p5 d6)
            
            serializer.ArgumentData(5,arg5,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 6 (REQUIRED INOUT p6 d6)
            
            serializer.ArgumentData(6,arg6,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 8 (REQUIRED OUT p8 d12)
            
            serializer.ArgumentData(8,arg8,FieldDataType.DecimalField,12,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 9 (REQUIRED INOUT p9 d12)
            
            serializer.ArgumentData(9,arg9,FieldDataType.DecimalField,12,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 11 (REQUIRED OUT p11 d6.2)
            
            serializer.ArgumentData(11,arg11,FieldDataType.ImpliedDecimalField,6,2,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 12 (REQUIRED INOUT p12 d6.2)
            
            serializer.ArgumentData(12,arg12,FieldDataType.ImpliedDecimalField,6,2,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 14 (REQUIRED OUT p14 i1)
            
            serializer.ArgumentData(14,arg14,FieldDataType.IntegerField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 15 (REQUIRED INOUT p15 i1)
            
            serializer.ArgumentData(15,arg15,FieldDataType.IntegerField,1,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 17 (REQUIRED OUT p17 i2)
            
            serializer.ArgumentData(17,arg17,FieldDataType.IntegerField,2,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 18 (REQUIRED INOUT p18 i2)
            
            serializer.ArgumentData(18,arg18,FieldDataType.IntegerField,2,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 20 (REQUIRED OUT p20 i4)
            
            serializer.ArgumentData(20,arg20,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 21 (REQUIRED INOUT p21 i4)
            
            serializer.ArgumentData(21,arg21,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 23 (REQUIRED OUT p23 i8)
            
            serializer.ArgumentData(23,arg23,FieldDataType.IntegerField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 24 (REQUIRED INOUT p24 i8)
            
            serializer.ArgumentData(24,arg24,FieldDataType.IntegerField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 26 (REQUIRED OUT p26 structure @Customer)
            
            ;;Argument 26: Single Customer record
            serializer.ArgumentData(26,arg26,FieldDataType.DataObjectField,161,"CUSTOMERS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 27 (REQUIRED INOUT p27 structure @Customer)
            
            ;;Argument 27: Single Customer record
            serializer.ArgumentData(27,arg27,FieldDataType.DataObjectField,161,"CUSTOMERS",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 29 (REQUIRED OUT p29 d8 YYYYMMDD date)
            
            serializer.ArgumentData(29,arg29,FieldDataType.DecimalField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 30 (REQUIRED INOUT p30 d8 YYYYMMDD date)
            
            serializer.ArgumentData(30,arg30,FieldDataType.DecimalField,8,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 32 (REQUIRED OUT p32 d6 YYMMDD date)
            
            serializer.ArgumentData(32,arg32,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 33 (REQUIRED INOUT p33 d6 YYMMDD date)
            
            serializer.ArgumentData(33,arg33,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 35 (REQUIRED OUT p35 d7 YYYYJJJ date)
            
            serializer.ArgumentData(35,arg35,FieldDataType.DecimalField,7,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 36 (REQUIRED INOUT p36 d7 YYYYJJJ date)
            
            serializer.ArgumentData(36,arg36,FieldDataType.DecimalField,7,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 38 (REQUIRED OUT p38 d5 YYJJJ date)
            
            serializer.ArgumentData(38,arg38,FieldDataType.DecimalField,5,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 39 (REQUIRED INOUT p39 d5 YYJJJ date)
            
            serializer.ArgumentData(39,arg39,FieldDataType.DecimalField,5,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 41 (REQUIRED OUT p41 d6 HHMMSS time)
            
            serializer.ArgumentData(41,arg41,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 42 (REQUIRED INOUT p42 d6 HHMMSS time)
            
            serializer.ArgumentData(42,arg42,FieldDataType.DecimalField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 44 (REQUIRED OUT p44 d4 HHMM time)
            
            serializer.ArgumentData(44,arg44,FieldDataType.DecimalField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 45 (REQUIRED INOUT p45 d4 HHMM time)
            
            serializer.ArgumentData(45,arg45,FieldDataType.DecimalField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 47 (REQUIRED OUT p47 d14 HHMM time)
            
            serializer.ArgumentData(47,arg47,FieldDataType.DecimalField,14,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 48 (REQUIRED INOUT p48 d14 HHMM time)
            
            serializer.ArgumentData(48,arg48,FieldDataType.DecimalField,14,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 50 (REQUIRED OUT p50 d20 YYYYMMDDHHMISS date)
            
            serializer.ArgumentData(50,arg50,FieldDataType.DecimalField,20,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 51 (REQUIRED INOUT p51 d20 YYYYMMDDHHMISS date)
            
            serializer.ArgumentData(51,arg51,FieldDataType.DecimalField,20,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 53 (REQUIRED OUT p53 enum METHOD_STATUS)
            
            ;TODO: Do we need custom processing for enum fields beyond the integer value?
            serializer.ArgumentData(53,(int)arg53,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 54 (REQUIRED INOUT p54 enum METHOD_STATUS)
            
            ;TODO: Do we need custom processing for enum fields beyond the integer value?
            serializer.ArgumentData(54,(int)arg54,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 56 (REQUIRED OUT p56 D_HANDLE)
            
            serializer.ArgumentData(56,arg56Handle,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 57 (REQUIRED INOUT p57 D_HANDLE)
            
            serializer.ArgumentData(57,arg57Handle,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 59 (REQUIRED OUT p59 D_HANDLE)
            
            serializer.ArgumentData(59,arg59Handle,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 60 (REQUIRED INOUT p60 D_HANDLE)
            
            serializer.ArgumentData(60,arg60Handle,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class SampleXfplEnvDummyModel
    endclass
endnamespace

