;;*****************************************************************************
;;
;; Title:       BinaryTransferMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.BinaryTransfer


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.CreateGRFAFile
    ;;; </summary>
    public class CreateGRFAFile_Dispatcher extends RoutineStub


        public method CreateGRFAFile_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall CreateGRFAFile()
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.DeleteGRFAFile
    ;;; </summary>
    public class DeleteGRFAFile_Dispatcher extends RoutineStub


        public method DeleteGRFAFile_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall DeleteGRFAFile()
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.get0grfa
    ;;; </summary>
    public class get0grfa_Dispatcher extends RoutineStub

        private mGrfatestMetadata, @DataObjectMetadataBase

        public method get0grfa_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mGrfatestMetadata = DataObjectMetadataBase.LookupType("Grfatest")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT grfat structure @Grfatest)
                arg1DataObject,     @DataObjectBase
                arg1,               strGrfatest
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT grfat structure @Grfatest)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall get0grfa(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT grfat structure @Grfatest)
            
            ;;Argument 1: Single Grfatest record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,20,"GRFATEST",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getarraylist
    ;;; </summary>
    public class getarraylist_Dispatcher extends RoutineStub

        private mTeststructMetadata, @DataObjectMetadataBase

        public method getarraylist_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTeststructMetadata = DataObjectMetadataBase.LookupType("Teststruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT myarraylist ArrayList collection of structure @Teststruct)
                arg1Array,          JSON_ELEMENT
                arg1,               @ArrayList
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT myarraylist ArrayList collection of structure @Teststruct)

            arg1 = new ArrayList()

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getarraylist(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT myarraylist ArrayList collection of structure @Teststruct)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectCollectionField,1,"TESTSTRUCT",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getbyte
    ;;; </summary>
    public class getbyte_Dispatcher extends RoutineStub


        public method getbyte_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT mybyte i1)
                arg1,               i1
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT mybyte i1)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getbyte(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT mybyte i1)
            
            serializer.ArgumentData(1,arg1,FieldDataType.IntegerField,1,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getbytea
    ;;; </summary>
    public class getbytea_Dispatcher extends RoutineStub


        public method getbytea_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT amybyte [*]i1)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, i1
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT amybyte [*][*]i1)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,1)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getbytea(^marray(tempstr1.arry,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT amybyte [*][*]i1)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.IntegerArrayField,1,0,%mem_proc(DM_GETSIZE,arg1Handle)/1,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getstruct
    ;;; </summary>
    public class getstruct_Dispatcher extends RoutineStub

        private mIntegerMetadata, @DataObjectMetadataBase

        public method getstruct_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mIntegerMetadata = DataObjectMetadataBase.LookupType("Integer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)
                arg1DataObject,     @DataObjectBase
                arg1,               strInteger
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getstruct(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)
            
            ;;Argument 1: Single Integer record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,342,"INTEGERS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getstructa
    ;;; </summary>
    public class getstructa_Dispatcher extends RoutineStub

        private mIntegerMetadata, @DataObjectMetadataBase

        public method getstructa_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mIntegerMetadata = DataObjectMetadataBase.LookupType("Integer")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT amyintegers [*]structure @Integer)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,342)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getstructa(^marray(strInteger,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT amyintegers [*]structure @Integer)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,342,"INTEGERS",%mem_proc(DM_GETSIZE,arg1Handle)/342,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getuint
    ;;; </summary>
    public class getuint_Dispatcher extends RoutineStub


        public method getuint_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT myuint i4)
                arg1,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT myuint i4)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getuint(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT myuint i4)
            
            serializer.ArgumentData(1,arg1,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getuinta
    ;;; </summary>
    public class getuinta_Dispatcher extends RoutineStub


        public method getuinta_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT amyuint [*]i4)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, i4
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT amyuint [*][*]i4)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,4)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getuinta(^marray(tempstr1.arry,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT amyuint [*][*]i4)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.IntegerArrayField,4,0,%mem_proc(DM_GETSIZE,arg1Handle)/4,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getushort
    ;;; </summary>
    public class getushort_Dispatcher extends RoutineStub


        public method getushort_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT myushort i2)
                arg1,               i2
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT myushort i2)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getushort(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT myushort i2)
            
            serializer.ArgumentData(1,arg1,FieldDataType.IntegerField,2,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.getushorta
    ;;; </summary>
    public class getushorta_Dispatcher extends RoutineStub


        public method getushorta_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT amyushort [*]i2)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, i2
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT amyushort [*][*]i2)

            arg1Handle = %mem_proc(DM_ALLOC | DM_ZERO,2)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getushorta(^marray(tempstr1.arry,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT amyushort [*][*]i2)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.IntegerArrayField,2,0,%mem_proc(DM_GETSIZE,arg1Handle)/2,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.setbytea
    ;;; </summary>
    public class setbytea_Dispatcher extends RoutineStub


        public method setbytea_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN amybyte [*]i1)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, i1
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN amybyte [*][*]i1)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],1)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall setbytea(^marray(tempstr1.arry,arg1Handle))
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.setushorta
    ;;; </summary>
    public class setushorta_Dispatcher extends RoutineStub


        public method setushorta_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN amyushort [*]i2)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord

            ;;Temp structure tempstr1
            structure tempstr1
                arry, i2
            endstructure


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN amyushort [*][*]i2)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],2)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC | DM_BLANK,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall setushorta(^marray(tempstr1.arry,arg1Handle))
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method BinaryTransfer.xfReadWithGrfa
    ;;; </summary>
    public class xfReadWithGrfa_Dispatcher extends RoutineStub

        private mGrfatestMetadata, @DataObjectMetadataBase

        public method xfReadWithGrfa_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mGrfatestMetadata = DataObjectMetadataBase.LookupType("Grfatest")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN grfa structure @Grfatest)
                arg1DataObject,     @DataObjectBase
                arg1,               strGrfatest
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN grfa structure @Grfatest)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mGrfatestMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall xfReadWithGrfa(arg1)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class BinaryTransferDummyModel
    endclass
endnamespace

