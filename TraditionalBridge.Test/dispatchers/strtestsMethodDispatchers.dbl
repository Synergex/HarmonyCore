;;*****************************************************************************
;;
;; Title:       strtestsMethodDispatchers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Models

.ifdef DBLV11
import System.Text.Json
.define JSON_ELEMENT @JsonElement
.else
.define JSON_ELEMENT @JsonValue
.endc

namespace TraditionalBridge.Dispatchers.strtests


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.TestID66
    ;;; </summary>
    public class TestID66_Dispatcher extends RoutineStub

        private mSingleimplieddecimalMetadata, @DataObjectMetadataBase

        public method TestID66_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mSingleimplieddecimalMetadata = DataObjectMetadataBase.LookupType("Singleimplieddecimal")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT SINGLEIMPLIEDDECIMAL structure @Singleimplieddecimal)
                arg1DataObject,     @DataObjectBase
                arg1,               strSINGLEIMPLIEDDECIMAL
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT SINGLEIMPLIEDDECIMAL structure @Singleimplieddecimal)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mSingleimplieddecimalMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall testid66(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT SINGLEIMPLIEDDECIMAL structure @Singleimplieddecimal)
            
            ;;Argument 1: Single Singleimplieddecimal record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,6,"SINGLEIMPLIEDDECIMAL",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.TestStrID66
    ;;; </summary>
    public class TestStrID66_Dispatcher extends RoutineStub

        private mImplieddecimaltestMetadata, @DataObjectMetadataBase

        public method TestStrID66_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mImplieddecimaltestMetadata = DataObjectMetadataBase.LookupType("Implieddecimaltest")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT IMPLIEDDECIMALTEST structure @Implieddecimaltest)
                arg1DataObject,     @DataObjectBase
                arg1,               strIMPLIEDDECIMALTEST
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT IMPLIEDDECIMALTEST structure @Implieddecimaltest)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mImplieddecimaltestMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststrid66(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT IMPLIEDDECIMALTEST structure @Implieddecimaltest)
            
            ;;Argument 1: Single Implieddecimaltest record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,46,"IMPLIEDDECIMALTEST",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.arrayswitharrays
    ;;; </summary>
    public class arrayswitharrays_Dispatcher extends RoutineStub

        private mSalesmanMetadata, @DataObjectMetadataBase

        public method arrayswitharrays_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mSalesmanMetadata = DataObjectMetadataBase.LookupType("Salesman")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT SALESMAN structure @Salesman)
                arg1DataObject,     @DataObjectBase
                arg1,               strSALESMAN
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT SALESMAN structure @Salesman)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall arrayswitharrays(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT SALESMAN structure @Salesman)
            
            ;;Argument 1: Single Salesman record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,5000,"SALESMAN",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.manage_funds
    ;;; </summary>
    public class manage_funds_Dispatcher extends RoutineStub

        private mManageFundMetadata, @DataObjectMetadataBase

        public method manage_funds_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mManageFundMetadata = DataObjectMetadataBase.LookupType("ManageFund")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT MANAGE_FUNDS structure @ManageFund)
                arg1DataObject,     @DataObjectBase
                arg1,               strMANAGE_FUNDS
                returnValue,         i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT MANAGE_FUNDS structure @ManageFund)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mManageFundMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %manage_funds(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT MANAGE_FUNDS structure @ManageFund)
            
            ;;Argument 1: Single ManageFund record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,3991,"MANAGE_FUNDS",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.paramdiff
    ;;; </summary>
    public class paramdiff_Dispatcher extends RoutineStub

        private mDbauthorMetadata, @DataObjectMetadataBase

        public method paramdiff_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDbauthorMetadata = DataObjectMetadataBase.LookupType("Dbauthor")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT p1 structure @Dbauthor)
                arg1DataObject,     @DataObjectBase
                arg1,               strDBAUTHOR
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT p1 structure @Dbauthor)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mDbauthorMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall paramdiff(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT p1 structure @Dbauthor)
            
            ;;Argument 1: Single Dbauthor record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,40,"DBAUTHOR",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.passLargePacket
    ;;; </summary>
    public class passLargePacket_Dispatcher extends RoutineStub

        private mAddresMetadata, @DataObjectMetadataBase
        private mPerfstructMetadata, @DataObjectMetadataBase

        public method passLargePacket_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mAddresMetadata = DataObjectMetadataBase.LookupType("Addres")
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ADDRESS structure @Addres)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED IN PERFSTRUCT structure @Perfstruct)
                arg2Array,          JSON_ELEMENT
                arg2Handle,         D_HANDLE
                arg2HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ADDRESS [*]structure @Addres)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],182)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED IN PERFSTRUCT [*]structure @Perfstruct)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[2],72)
            arg2Array = arguments[2].GetProperty("PassedValue")
            arg2Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg2Array.GetArrayLength())
            arg2HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg2Handle),argumentDefinition,arg2HandlePos,arg2Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall passLargePacket(^marray(strAddres,arg1Handle),^marray(strPerfstruct,arg2Handle))
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.getNumRecords
    ;;; </summary>
    public class getNumRecords_Dispatcher extends RoutineStub


        public method getNumRecords_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT num i4)
                arg1,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT num i4)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getNumRecords(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT num i4)
            
            serializer.ArgumentData(1,arg1,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.getStructArray
    ;;; </summary>
    public class getStructArray_Dispatcher extends RoutineStub

        private mPerfstructMetadata, @DataObjectMetadataBase

        public method getStructArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT PERFSTRUCT structure @Perfstruct)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT PERFSTRUCT [*]structure @Perfstruct)

            arg1Handle = %mem_proc(DM_ALLOC,72)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getStructArray(^marray(strPerfstruct,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT PERFSTRUCT [*]structure @Perfstruct)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,72,"PERFSTRUCT",%mem_proc(DM_GETSIZE,arg1Handle)/72,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.inStructArray
    ;;; </summary>
    public class inStructArray_Dispatcher extends RoutineStub

        private mPerfstructMetadata, @DataObjectMetadataBase

        public method inStructArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN PERFSTRUCT structure @Perfstruct)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED IN Count i4)
                arg2,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN PERFSTRUCT [*]structure @Perfstruct)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],72)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED IN Count i4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall inStructArray(^marray(strPerfstruct,arg1Handle),arg2)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.inoutStructArray
    ;;; </summary>
    public class inoutStructArray_Dispatcher extends RoutineStub

        private mPerfstructMetadata, @DataObjectMetadataBase

        public method inoutStructArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT PERFSTRUCT structure @Perfstruct)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED INOUT Count i4)
                arg2,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT PERFSTRUCT [*]structure @Perfstruct)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],72)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED INOUT Count i4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall inoutStructArray(^marray(strPerfstruct,arg1Handle),arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT PERFSTRUCT [*]structure @Perfstruct)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,72,"PERFSTRUCT",%mem_proc(DM_GETSIZE,arg1Handle)/72,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT Count i4)
            
            serializer.ArgumentData(2,arg2,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.outStructArray
    ;;; </summary>
    public class outStructArray_Dispatcher extends RoutineStub

        private mPerfstructMetadata, @DataObjectMetadataBase

        public method outStructArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT PERFSTRUCT structure @Perfstruct)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED OUT Count i4)
                arg2,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED OUT PERFSTRUCT [*]structure @Perfstruct)

            arg1Handle = %mem_proc(DM_ALLOC,72)

            ;;Argument 2 (REQUIRED OUT Count i4)


            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall outStructArray(^marray(strPerfstruct,arg1Handle),arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT PERFSTRUCT [*]structure @Perfstruct)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,72,"PERFSTRUCT",%mem_proc(DM_GETSIZE,arg1Handle)/72,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED OUT Count i4)
            
            serializer.ArgumentData(2,arg2,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.setStructArray
    ;;; </summary>
    public class setStructArray_Dispatcher extends RoutineStub

        private mPerfstructMetadata, @DataObjectMetadataBase

        public method setStructArray_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mPerfstructMetadata = DataObjectMetadataBase.LookupType("Perfstruct")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN PERFSTRUCT structure @Perfstruct)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED IN cnt i4)
                arg2,               i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN PERFSTRUCT [*]structure @Perfstruct)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],72)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED IN cnt i4)

            arg2 = dispatcher.GetInt(arguments[2])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall setStructArray(^marray(strPerfstruct,arg1Handle),arg2)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.syninsurance
    ;;; </summary>
    public class syninsurance_Dispatcher extends RoutineStub

        private mTrSyninsInpMetadata, @DataObjectMetadataBase
        private mTrSyninsRetMetadata, @DataObjectMetadataBase

        public method syninsurance_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mTrSyninsInpMetadata = DataObjectMetadataBase.LookupType("TrSyninsInp")
            mTrSyninsRetMetadata = DataObjectMetadataBase.LookupType("TrSyninsRet")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN TR_SYNINS_INP structure @TrSyninsInp)
                arg1DataObject,     @DataObjectBase
                arg1,               strTR_SYNINS_INP
                ;;Argument 2 (OPTIONAL OUT TR_SYNINS_RET structure @TrSyninsRet)
                arg2Array,          JSON_ELEMENT
                arg2Handle,         D_HANDLE
                arg2HandlePos,      int
                ;;Argument 3 (REQUIRED INOUT elementcount i4)
                arg3,               i4
                returnValue,         i4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN TR_SYNINS_INP structure @TrSyninsInp)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mTrSyninsInpMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;Argument 2 (OPTIONAL OUT TR_SYNINS_RET [*]structure @TrSyninsRet)

            arg2Handle = %mem_proc(DM_ALLOC,258)

            ;;Argument 3 (REQUIRED INOUT elementcount i4)

            arg3 = dispatcher.GetInt(arguments[3])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %syninsurance(arg1,^marray(strTrSyninsRet,arg2Handle),arg3)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.IntegerField,4,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (OPTIONAL OUT TR_SYNINS_RET [*]structure @TrSyninsRet)
            
            serializer.ArgumentHandleData(2,arg2Handle,FieldDataType.DataObjectCollectionField,258,"TR_SYNINS_RET",%mem_proc(DM_GETSIZE,arg2Handle)/258,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED INOUT elementcount i4)
            
            serializer.ArgumentData(3,arg3,FieldDataType.IntegerField,4,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.testrefcount
    ;;; </summary>
    public class testrefcount_Dispatcher extends RoutineStub

        private mRefcountMetadata, @DataObjectMetadataBase

        public method testrefcount_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mRefcountMetadata = DataObjectMetadataBase.LookupType("Refcount")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT REFCOUNT structure @Refcount)
                arg1DataObject,     @DataObjectBase
                arg1,               strREFCOUNT
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT REFCOUNT structure @Refcount)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mRefcountMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall testrefcount(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT REFCOUNT structure @Refcount)
            
            ;;Argument 1: Single Refcount record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,10,"REFCOUNT",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr1
    ;;; </summary>
    public class teststr1_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase

        public method teststr1_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST1 structure @Strtest1)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST1
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST1 structure @Strtest1)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest1Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr1(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST1 structure @Strtest1)
            
            ;;Argument 1: Single Strtest1 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,46,"STRTEST1",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr10
    ;;; </summary>
    public class teststr10_Dispatcher extends RoutineStub

        private mStrtest4Metadata, @DataObjectMetadataBase
        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr10_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest4Metadata = DataObjectMetadataBase.LookupType("Strtest4")
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST4
                ;;Argument 2 (REQUIRED INOUT STRTEST3 structure @Strtest3)
                arg2Array,          JSON_ELEMENT
                arg2Handle,         D_HANDLE
                arg2HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest4Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;Argument 2 (REQUIRED INOUT STRTEST3 [*]structure @Strtest3)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[2],58)
            arg2Array = arguments[2].GetProperty("PassedValue")
            arg2Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg2Array.GetArrayLength())
            arg2HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg2Handle),argumentDefinition,arg2HandlePos,arg2Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr10(arg1,^marray(strStrtest3,arg2Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)
            
            ;;Argument 1: Single Strtest4 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,84,"STRTEST4",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT STRTEST3 [*]structure @Strtest3)
            
            serializer.ArgumentHandleData(2,arg2Handle,FieldDataType.DataObjectCollectionField,58,"STRTEST3",%mem_proc(DM_GETSIZE,arg2Handle)/58,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr11
    ;;; </summary>
    public class teststr11_Dispatcher extends RoutineStub

        private mStrtest3Metadata, @DataObjectMetadataBase
        private mStrtest4Metadata, @DataObjectMetadataBase

        public method teststr11_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
            mStrtest4Metadata = DataObjectMetadataBase.LookupType("Strtest4")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST3 structure @Strtest3)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
                ;;Argument 2 (REQUIRED INOUT STRTEST4 structure @Strtest4)
                arg2DataObject,     @DataObjectBase
                arg2,               strSTRTEST4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST3 [*]structure @Strtest3)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],58)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;Argument 2 (REQUIRED INOUT STRTEST4 structure @Strtest4)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mStrtest4Metadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr11(^marray(strStrtest3,arg1Handle),arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST3 [*]structure @Strtest3)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,58,"STRTEST3",%mem_proc(DM_GETSIZE,arg1Handle)/58,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT STRTEST4 structure @Strtest4)
            
            ;;Argument 2: Single Strtest4 record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,84,"STRTEST4",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr12
    ;;; </summary>
    public class teststr12_Dispatcher extends RoutineStub

        private mStrtest12Metadata, @DataObjectMetadataBase

        public method teststr12_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest12Metadata = DataObjectMetadataBase.LookupType("Strtest12")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest12 structure @Strtest12)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST12
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest12 structure @Strtest12)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest12Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr12(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest12 structure @Strtest12)
            
            ;;Argument 1: Single Strtest12 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,56,"STRTEST12",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr13
    ;;; </summary>
    public class teststr13_Dispatcher extends RoutineStub

        private mStrtest12Metadata, @DataObjectMetadataBase

        public method teststr13_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest12Metadata = DataObjectMetadataBase.LookupType("Strtest12")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest12 structure @Strtest12)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest12 [*]structure @Strtest12)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],56)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr13(^marray(strStrtest12,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest12 [*]structure @Strtest12)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,56,"STRTEST12",%mem_proc(DM_GETSIZE,arg1Handle)/56,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr14
    ;;; </summary>
    public class teststr14_Dispatcher extends RoutineStub

        private mStrtest14Metadata, @DataObjectMetadataBase

        public method teststr14_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest14Metadata = DataObjectMetadataBase.LookupType("Strtest14")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest14 structure @Strtest14)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST14
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest14 structure @Strtest14)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest14Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr14(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest14 structure @Strtest14)
            
            ;;Argument 1: Single Strtest14 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,112,"STRTEST14",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr16
    ;;; </summary>
    public class teststr16_Dispatcher extends RoutineStub

        private mStrtest16Metadata, @DataObjectMetadataBase

        public method teststr16_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest16Metadata = DataObjectMetadataBase.LookupType("Strtest16")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST16 structure @Strtest16)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST16
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST16 structure @Strtest16)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest16Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr16(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST16 structure @Strtest16)
            
            ;;Argument 1: Single Strtest16 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,120,"STRTEST16",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr18
    ;;; </summary>
    public class teststr18_Dispatcher extends RoutineStub

        private mStrtest18Metadata, @DataObjectMetadataBase

        public method teststr18_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest18Metadata = DataObjectMetadataBase.LookupType("Strtest18")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest18 structure @Strtest18)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST18
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest18 structure @Strtest18)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest18Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr18(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest18 structure @Strtest18)
            
            ;;Argument 1: Single Strtest18 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,137,"STRTEST18",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr19
    ;;; </summary>
    public class teststr19_Dispatcher extends RoutineStub

        private mStrtest19Metadata, @DataObjectMetadataBase

        public method teststr19_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest19Metadata = DataObjectMetadataBase.LookupType("Strtest19")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST19
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest19Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr19(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)
            
            ;;Argument 1: Single Strtest19 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,36,"STRTEST19",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr2
    ;;; </summary>
    public class teststr2_Dispatcher extends RoutineStub

        private mStrtest2Metadata, @DataObjectMetadataBase

        public method teststr2_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest2Metadata = DataObjectMetadataBase.LookupType("Strtest2")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest2 structure @Strtest2)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST2
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest2 structure @Strtest2)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest2Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr2(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest2 structure @Strtest2)
            
            ;;Argument 1: Single Strtest2 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,71,"STRTEST2",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr20
    ;;; </summary>
    public class teststr20_Dispatcher extends RoutineStub

        private mStrtest19Metadata, @DataObjectMetadataBase

        public method teststr20_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest19Metadata = DataObjectMetadataBase.LookupType("Strtest19")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST19
                returnValue,         D7
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest19Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %teststr20(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.DecimalField,7,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest19 structure @Strtest19)
            
            ;;Argument 1: Single Strtest19 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,36,"STRTEST19",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr5a
    ;;; </summary>
    public class teststr5a_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase
        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr5a_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN strtest1 structure @Strtest1)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST1
                ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg2DataObject,     @DataObjectBase
                arg2,               strSTRTEST3
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN strtest1 structure @Strtest1)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest1Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mStrtest3Metadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr5a(arg1,arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)
            
            ;;Argument 2: Single Strtest3 record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,58,"STRTEST3",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr5b
    ;;; </summary>
    public class teststr5b_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase
        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr5b_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST1
                ;;Argument 2 (REQUIRED IN strtest3 structure @Strtest3)
                arg2DataObject,     @DataObjectBase
                arg2,               strSTRTEST3
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest1Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;Argument 2 (REQUIRED IN strtest3 structure @Strtest3)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mStrtest3Metadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr5b(arg1,arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)
            
            ;;Argument 1: Single Strtest1 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,46,"STRTEST1",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr23
    ;;; </summary>
    public class teststr23_Dispatcher extends RoutineStub

        private mStrtest23Metadata, @DataObjectMetadataBase

        public method teststr23_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest23Metadata = DataObjectMetadataBase.LookupType("Strtest23")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest23 structure @Strtest23)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST23
                returnValue,         A7
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest23 structure @Strtest23)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest23Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %teststr23(arg1)

            ;;Function return value
            serializer.ArgumentData(0,%atrim(returnValue),FieldDataType.AlphaField,7,0,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest23 structure @Strtest23)
            
            ;;Argument 1: Single Strtest23 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,83,"STRTEST23",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr24
    ;;; </summary>
    public class teststr24_Dispatcher extends RoutineStub

        private mStrtest24Metadata, @DataObjectMetadataBase

        public method teststr24_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest24Metadata = DataObjectMetadataBase.LookupType("Strtest24")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest24 structure @Strtest24)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST24
                returnValue,         D5.2
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest24 structure @Strtest24)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest24Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %teststr24(arg1)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.ImpliedDecimalField,5,2,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest24 structure @Strtest24)
            
            ;;Argument 1: Single Strtest24 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,103,"STRTEST24",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr25
    ;;; </summary>
    public class teststr25_Dispatcher extends RoutineStub

        private mStrtest25Metadata, @DataObjectMetadataBase

        public method teststr25_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest25Metadata = DataObjectMetadataBase.LookupType("Strtest25")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST25 structure @Strtest25)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST25
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST25 structure @Strtest25)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest25Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr25(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST25 structure @Strtest25)
            
            ;;Argument 1: Single Strtest25 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,67,"STRTEST25",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr27
    ;;; </summary>
    public class teststr27_Dispatcher extends RoutineStub

        private mStrtest27Metadata, @DataObjectMetadataBase

        public method teststr27_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest27Metadata = DataObjectMetadataBase.LookupType("Strtest27")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST27 structure @Strtest27)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST27
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST27 structure @Strtest27)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest27Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr27(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST27 structure @Strtest27)
            
            ;;Argument 1: Single Strtest27 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,8,"STRTEST27",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr29
    ;;; </summary>
    public class teststr29_Dispatcher extends RoutineStub

        private mDborderMetadata, @DataObjectMetadataBase

        public method teststr29_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDborderMetadata = DataObjectMetadataBase.LookupType("Dborder")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN ordnum a10)
                arg1,               a10
                ;;Argument 2 (REQUIRED INOUT DBORDER structure @Dborder)
                arg2DataObject,     @DataObjectBase
                arg2,               strDBORDER
                returnValue,         D5
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN ordnum a10)

            arg1 = dispatcher.GetText(arguments[1])

            ;;Argument 2 (REQUIRED INOUT DBORDER structure @Dborder)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mDborderMetadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %teststr29(arg1,arg2)

            ;;Function return value
            serializer.ArgumentData(0,returnValue,FieldDataType.DecimalField,5,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT DBORDER structure @Dborder)
            
            ;;Argument 2: Single Dborder record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,414,"DBORDER",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr3
    ;;; </summary>
    public class teststr3_Dispatcher extends RoutineStub

        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr3_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST3
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest3 structure @Strtest3)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest3Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr3(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest3 structure @Strtest3)
            
            ;;Argument 1: Single Strtest3 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,58,"STRTEST3",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr30
    ;;; </summary>
    public class teststr30_Dispatcher extends RoutineStub

        private mStrtest30Metadata, @DataObjectMetadataBase

        public method teststr30_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest30Metadata = DataObjectMetadataBase.LookupType("Strtest30")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST30 structure @Strtest30)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST30 [*]structure @Strtest30)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],127)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr30(^marray(strStrtest30,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST30 [*]structure @Strtest30)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,127,"STRTEST30",%mem_proc(DM_GETSIZE,arg1Handle)/127,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr31
    ;;; </summary>
    public class teststr31_Dispatcher extends RoutineStub

        private mStrtest31Metadata, @DataObjectMetadataBase

        public method teststr31_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest31Metadata = DataObjectMetadataBase.LookupType("Strtest31")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT STRTEST31 structure @Strtest31)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT STRTEST31 [*]structure @Strtest31)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],24)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr31(^marray(strStrtest31,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT STRTEST31 [*]structure @Strtest31)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,24,"STRTEST31",%mem_proc(DM_GETSIZE,arg1Handle)/24,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr32
    ;;; </summary>
    public class teststr32_Dispatcher extends RoutineStub

        private mDatasetMetadata, @DataObjectMetadataBase

        public method teststr32_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mDatasetMetadata = DataObjectMetadataBase.LookupType("Dataset")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT DATASET structure @Dataset)
                arg1DataObject,     @DataObjectBase
                arg1,               strDATASET
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT DATASET structure @Dataset)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mDatasetMetadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr32(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT DATASET structure @Dataset)
            
            ;;Argument 1: Single Dataset record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,1493,"DATASET",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr4
    ;;; </summary>
    public class teststr4_Dispatcher extends RoutineStub

        private mStrtest4Metadata, @DataObjectMetadataBase

        public method teststr4_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest4Metadata = DataObjectMetadataBase.LookupType("Strtest4")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest4Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr4(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest4 structure @Strtest4)
            
            ;;Argument 1: Single Strtest4 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,84,"STRTEST4",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr5
    ;;; </summary>
    public class teststr5_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase
        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr5_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)
                arg1DataObject,     @DataObjectBase
                arg1,               strSTRTEST1
                ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg2DataObject,     @DataObjectBase
                arg2,               strSTRTEST3
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)

            ;;Structure argument. Get the data object then get the record from it
            arg1DataObject = dispatcher.DeserializeObject(arguments[1],mStrtest1Metadata)
            arg1 = arg1DataObject.SynergyRecord

            ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mStrtest3Metadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr5(arg1,arg2)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest1 structure @Strtest1)
            
            ;;Argument 1: Single Strtest1 record
            serializer.ArgumentData(1,arg1,FieldDataType.DataObjectField,46,"STRTEST1",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)
            
            ;;Argument 2: Single Strtest3 record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,58,"STRTEST3",true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr6
    ;;; </summary>
    public class teststr6_Dispatcher extends RoutineStub

        private mStrtest1Metadata, @DataObjectMetadataBase
        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr6_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest1Metadata = DataObjectMetadataBase.LookupType("Strtest1")
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT p1 a6)
                arg1,               a6
                ;;Argument 2 (REQUIRED INOUT strtest1 structure @Strtest1)
                arg2DataObject,     @DataObjectBase
                arg2,               strSTRTEST1
                ;;Argument 3 (REQUIRED INOUT p3 d5)
                arg3,               d5
                ;;Argument 4 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg4DataObject,     @DataObjectBase
                arg4,               strSTRTEST3
                ;;Argument 5 (REQUIRED INOUT p5 d5)
                arg5,               d5
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT p1 a6)

            arg1 = dispatcher.GetText(arguments[1])

            ;;Argument 2 (REQUIRED INOUT strtest1 structure @Strtest1)

            ;;Structure argument. Get the data object then get the record from it
            arg2DataObject = dispatcher.DeserializeObject(arguments[2],mStrtest1Metadata)
            arg2 = arg2DataObject.SynergyRecord

            ;;Argument 3 (REQUIRED INOUT p3 d5)

            arg3 = dispatcher.GetDecimal(arguments[3])

            ;;Argument 4 (REQUIRED INOUT strtest3 structure @Strtest3)

            ;;Structure argument. Get the data object then get the record from it
            arg4DataObject = dispatcher.DeserializeObject(arguments[4],mStrtest3Metadata)
            arg4 = arg4DataObject.SynergyRecord

            ;;Argument 5 (REQUIRED INOUT p5 d5)

            arg5 = dispatcher.GetDecimal(arguments[5])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr6(arg1,arg2,arg3,arg4,arg5)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT p1 a6)
            
            serializer.ArgumentData(1,%atrim(arg1),FieldDataType.AlphaField,6,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT strtest1 structure @Strtest1)
            
            ;;Argument 2: Single Strtest1 record
            serializer.ArgumentData(2,arg2,FieldDataType.DataObjectField,46,"STRTEST1",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED INOUT p3 d5)
            
            serializer.ArgumentData(3,arg3,FieldDataType.DecimalField,5,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 4 (REQUIRED INOUT strtest3 structure @Strtest3)
            
            ;;Argument 4: Single Strtest3 record
            serializer.ArgumentData(4,arg4,FieldDataType.DataObjectField,58,"STRTEST3",true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 5 (REQUIRED INOUT p5 d5)
            
            serializer.ArgumentData(5,arg5,FieldDataType.DecimalField,5,0,false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr7
    ;;; </summary>
    public class teststr7_Dispatcher extends RoutineStub

        private mStrtest7Metadata, @DataObjectMetadataBase

        public method teststr7_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest7Metadata = DataObjectMetadataBase.LookupType("Strtest7")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest7 structure @Strtest7)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest7 [*]structure @Strtest7)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],10)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr7(^marray(strStrtest7,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest7 [*]structure @Strtest7)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,10,"STRTEST7",%mem_proc(DM_GETSIZE,arg1Handle)/10,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr8
    ;;; </summary>
    public class teststr8_Dispatcher extends RoutineStub

        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr8_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg1Array,          JSON_ELEMENT
                arg1Handle,         D_HANDLE
                arg1HandlePos,      int
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT strtest3 [*]structure @Strtest3)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[1],58)
            arg1Array = arguments[1].GetProperty("PassedValue")
            arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.GetArrayLength())
            arg1HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr8(^marray(strStrtest3,arg1Handle))

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT strtest3 [*]structure @Strtest3)
            
            serializer.ArgumentHandleData(1,arg1Handle,FieldDataType.DataObjectCollectionField,58,"STRTEST3",%mem_proc(DM_GETSIZE,arg1Handle)/58,true)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method strtests.teststr9
    ;;; </summary>
    public class teststr9_Dispatcher extends RoutineStub

        private mStrtest3Metadata, @DataObjectMetadataBase

        public method teststr9_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
            mStrtest3Metadata = DataObjectMetadataBase.LookupType("Strtest3")
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  JSON_ELEMENT
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          JSON_ELEMENT
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED INOUT p1de7 d7)
                arg1,               d7
                ;;Argument 2 (REQUIRED INOUT strtest3 structure @Strtest3)
                arg2Array,          JSON_ELEMENT
                arg2Handle,         D_HANDLE
                arg2HandlePos,      int
                ;;Argument 3 (REQUIRED INOUT p3al10 a10)
                arg3,               a10
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Prepare variables for arguments

            arguments = callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED INOUT p1de7 d7)

            arg1 = dispatcher.GetDecimal(arguments[1])

            ;;Argument 2 (REQUIRED INOUT strtest3 [*]structure @Strtest3)

            argumentDefinition = dispatcher.GetArgumentDataDefForCollection(arguments[2],58)
            arg2Array = arguments[2].GetProperty("PassedValue")
            arg2Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg2Array.GetArrayLength())
            arg2HandlePos = 1
            dispatcher.UnwrapObjectCollection(^m(arg2Handle),argumentDefinition,arg2HandlePos,arg2Array)

            ;;Argument 3 (REQUIRED INOUT p3al10 a10)

            arg3 = dispatcher.GetText(arguments[3])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall teststr9(arg1,^marray(strStrtest3,arg2Handle),arg3)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED INOUT p1de7 d7)
            
            serializer.ArgumentData(1,arg1,FieldDataType.DecimalField,7,0,false)

            ;;--------------------------------------------------------------------------------
            ;;Argument 2 (REQUIRED INOUT strtest3 [*]structure @Strtest3)
            
            serializer.ArgumentHandleData(2,arg2Handle,FieldDataType.DataObjectCollectionField,58,"STRTEST3",%mem_proc(DM_GETSIZE,arg2Handle)/58,true)

            ;;--------------------------------------------------------------------------------
            ;;Argument 3 (REQUIRED INOUT p3al10 a10)
            
            serializer.ArgumentData(3,%atrim(arg3),FieldDataType.AlphaField,10,0,false)
        endmethod

    endclass

endnamespace

;; This is here to ensure that the TraditionalBridge.Models namespace exists.
;; If the Synergy methods don't expsoe any structure or collection of structure
;; parameters then there won't be anything in the Models folder, and the import above will fail.
namespace TraditionalBridge.Models
    public class strtestsDummyModel
    endclass
endnamespace

