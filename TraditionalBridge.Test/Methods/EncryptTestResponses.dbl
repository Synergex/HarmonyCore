;;*****************************************************************************
;;
;; Title:       EncryptTestResponses.dbl
;;
;; Description: Generates test responses for all OUT and INOUT parameters
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

namespace TraditionalBridge.Methods

    public class EncryptTestResponses

        public static method encrypt_tst10, void
            required inout strtest3, STRTEST3
        proc
            strtest3 = {"Str3Al10": "", "StrGrp1": "", "Str3De7": 0, "Str3Al25": ""}
        endmethod

        public static method encrypt_tst11, void
            required inout strtest4, STRTEST4
        proc
            strtest4 = {"Str4Lv1fld1": 0, "Str4Lv1fld2": "", "Str4Grp1": "", "Str4Lv1fld3": ""}
        endmethod

        public static method encrypt_tst12, void
            required inout strtest1, STRTEST1
            required inout strtest3, STRTEST3
        proc
            strtest1 = {"Str1De6": 0, "Str1Al10": "", "Str1Id62": 0.0, "Str1In4": 0, "Str1Al20": ""}
            strtest3 = {"Str3Al10": "", "StrGrp1": "", "Str3De7": 0, "Str3Al25": ""}
        endmethod

        public static method encrypt_tst2, void
            optional inout p1, d12.2
            optional inout p2, d10.5
            optional inout p6, d7.7
            optional inout p8, d8
            optional inout p9, d7.1
        proc
            if (^passed(p1))
                p1 = 9.9
            if (^passed(p2))
                p2 = 9.9
            if (^passed(p6))
                p6 = 9.9
            if (^passed(p8))
                p8 = 9
            if (^passed(p9))
                p9 = 9.9
        endmethod

        public static method encrypt_tst3, void
            optional inout p1, a30
            optional inout p2, a30
            optional inout p3, a10
            optional inout p4, a50
        proc
            if (^passed(p1))
                p1 = "Z"
            if (^passed(p2))
                p2 = "Z"
            if (^passed(p3))
                p3 = "Z"
            if (^passed(p4))
                p4 = "Z"
        endmethod

        public static method encrypt_tst4, void
            optional inout p1, a5
            optional inout p2, i4
            optional inout p3, d6
            optional inout p5, d6.3
            optional inout p6, [*]d5
            optional inout p7, [*]a20
            optional inout p8, [*]d10.3
            optional inout p9, [*]i4
        proc
            if (^passed(p1))
                p1 = "Z"
            if (^passed(p2))
                p2 = 9
            if (^passed(p3))
                p3 = 9
            if (^passed(p5))
                p5 = 9.9
            if (^passed(p6))
                p6 = 9
            if (^passed(p7))
                p7 = "Z"
            if (^passed(p8))
                p8 = 9.9
            if (^passed(p9))
                p9 = 9
        endmethod

        public static method encrypt_tst5, a9
            optional inout p1, a5
            optional inout p2, a5
        proc
            if (^passed(p1))
                p1 = "Z"
            if (^passed(p2))
                p2 = "Z"
            mreturn "Z"
        endmethod

        public static method encrypt_tst6, d9
            optional inout p2, a5
        proc
            if (^passed(p2))
                p2 = "Z"
            mreturn 9
        endmethod

        public static method encrypt_tst7, void
            required inout verno, a30
        proc
            verno = "Z"
        endmethod

        public static method encrypt_tst8, void
            required inout STRTEST1, STRTEST1
        proc
            STRTEST1 = {"Str1De6": 0, "Str1Al10": "", "Str1Id62": 0.0, "Str1In4": 0, "Str1Al20": ""}
        endmethod

        public static method encrypt_tst9, void
            required inout strtest2, STRTEST2
        proc
            strtest2 = {"Str2De10": 0, "Str2Arde5": 0, "Str2Al20": "", "Str2Date8": 0, "Str2Time6": 0, "Str2Id83": 0.0, "Str2In4": 0}
        endmethod

    endclass

endnamespace

;
; Sample code to call these test methods
;
;    EncryptTestResponses.encrypt_tst10(strtest3)
;    xreturn
;    EncryptTestResponses.encrypt_tst11(strtest4)
;    xreturn
;    EncryptTestResponses.encrypt_tst12(strtest1,strtest3)
;    xreturn
;    EncryptTestResponses.encrypt_tst2(p1,p2,p6,p8,p9)
;    xreturn
;    EncryptTestResponses.encrypt_tst3(p1,p2,p3,p4)
;    xreturn
;    EncryptTestResponses.encrypt_tst4(p1,p2,p3,p5,p6,p7,p8,p9)
;    xreturn
;    freturn EncryptTestResponses.encrypt_tst5(p1,p2)
;    freturn EncryptTestResponses.encrypt_tst6(p2)
;    EncryptTestResponses.encrypt_tst7(verno)
;    xreturn
;    EncryptTestResponses.encrypt_tst8(STRTEST1)
;    xreturn
;    EncryptTestResponses.encrypt_tst9(strtest2)
;    xreturn
