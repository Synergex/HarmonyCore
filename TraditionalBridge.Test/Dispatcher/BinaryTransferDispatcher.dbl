;;*****************************************************************************
;;
;; Title:       BinaryTransferDispatcher.dbl
;;
;; Description: Declares dispacher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge
import TraditionalBridge.Test.BinaryTransfer

namespace TraditionalBridge.Test

    public partial class BinaryTransferDispatcher extends RoutineDispatcher

        public method BinaryTransferDispatcher
        proc
            ;;Declare dispatcher classes for the 'BinaryTransfer' interface methods
            mDispatchStubs.Add("CreateGRFAFile", new CreateGRFAFile_Dispatcher())
            mDispatchStubs.Add("DeleteGRFAFile", new DeleteGRFAFile_Dispatcher())
            mDispatchStubs.Add("get0grfa", new get0grfa_Dispatcher())
            mDispatchStubs.Add("getarraylist", new getarraylist_Dispatcher())
            mDispatchStubs.Add("getbyte", new getbyte_Dispatcher())
            mDispatchStubs.Add("getbytea", new getbytea_Dispatcher())
            mDispatchStubs.Add("getstruct", new getstruct_Dispatcher())
            mDispatchStubs.Add("getstructa", new getstructa_Dispatcher())
            mDispatchStubs.Add("getuint", new getuint_Dispatcher())
            mDispatchStubs.Add("getuinta", new getuinta_Dispatcher())
            mDispatchStubs.Add("getushort", new getushort_Dispatcher())
            mDispatchStubs.Add("getushorta", new getushorta_Dispatcher())
            mDispatchStubs.Add("setbytea", new setbytea_Dispatcher())
            mDispatchStubs.Add("setushorta", new setushorta_Dispatcher())
            mDispatchStubs.Add("xfReadWithGrfa", new xfReadWithGrfa_Dispatcher())

            ;;Initialize all data object metadata
            this.initMetaData()
        
        endmethod

    endclass

endnamespace