import System
import System.Collections.Generic
import System.Text

namespace Harmony.Core.FileIO

	public class FileIOErrorHelper

		;;; <summary>
		;;; 
		;;; </summary>
		;;; <param name="result"></param>
		public static method EnsureSuccess, void
			required in result, FileAccessResults
		proc
			if(result == FileAccessResults.RecordDataNotSame) then
				throw new RecordNotSameException()
			else if (result != FileAccessResults.Success)
				throw new Exception(result.ToString())
		endmethod

		;;; <summary>
		;;; 
		;;; </summary>
		;;; <param name="result"></param>
		;;; <returns>Returns true if the record was filled, false if there were no more records, throws on other results</returns>
		public static method EnsureRead, boolean
			required in result, FileAccessResults
		proc
			if (result == FileAccessResults.EndOFDataFile || result == FileAccessResults.RecordNotFound) then
				mreturn false
			else if(result == FileAccessResults.RecordDataNotSame) then
				throw new RecordNotSameException()
			else if (result != FileAccessResults.Success)
				throw new Exception(result.ToString())
			mreturn true
		endmethod

	endclass

endnamespace
