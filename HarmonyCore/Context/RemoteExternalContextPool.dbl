import System
import System.Collections.Generic
import System.Text
import Renci.SshNet
import Microsoft.Extensions.DependencyInjection

namespace Harmony.Core.Context

    public class RemoteExternalContextPool<T(IContextBase, class)> extends BlockingPoolContextFactory<T>
        private mTargetMachine, @string
        private mUsername, @string
        private mAuthentication, @AuthenticationMethod
        private mTargetCommand, @string
        private mTargetOS, RemoteTargetOS
        private mCallTimeout, int
        private mConnectTimeout, int
        public method RemoteExternalContextPool
            targetOS, RemoteTargetOS
            targetMachine, @string
            username, @string
            authentication, @AuthenticationMethod
            targetCommand, @string
            min, int
            callTimeout, int
            connectTimeout, int
            stickySession, boolean
            endparams
            parent(CreateInstanceHelper(targetOS, targetMachine, username, authentication, targetCommand, callTimeout, connectTimeout), -1, min, TimeSpan.FromSeconds(30), false)
        proc
            mTargetOS = targetOS
            mTargetMachine = targetMachine
            mUsername = username
            mAuthentication = authentication
            mTargetCommand = targetCommand
            mCallTimeout = callTimeout
            mConnectTimeout = connectTimeout
        endmethod
		
        public method RemoteExternalContextPool
            targetOS, RemoteTargetOS
            targetMachine, @string
            username, @string
            authentication, @AuthenticationMethod
            targetCommand, @string
            min, int
            callTimeout, int
            connectTimeout, int
            endparams
            parent(CreateInstanceHelper(targetOS, targetMachine, username, authentication, targetCommand, callTimeout, connectTimeout), -1, min, TimeSpan.FromSeconds(30), false)
        proc
        endmethod

        public method RemoteExternalContextPool
            targetOS, RemoteTargetOS
            targetMachine, @string
            username, @string
            authentication, @AuthenticationMethod
            targetCommand, @string
            min, int
            max, int
            poolTimeout, TimeSpan
            callTimeout, int
            connectTimeout, int
            default enableDebug, boolean, false
            endparams
            parent(CreateInstanceHelper(targetOS, targetMachine, username, authentication, targetCommand, callTimeout, connectTimeout), max, min, poolTimeout, enableDebug)
        proc
        endmethod

        private static method CreateInstanceHelper, @Func<IServiceProvider, T>
            targetOS, RemoteTargetOS
            targetMachine, @string
            username, @string
            authentication, @AuthenticationMethod
            targetCommand, @string
            callTimeout, int
            connectTimeout, int
        proc
            lambda makeInstance(provider)
            begin
                data callConnection = new SSHDynamicCallConnection(targetOS, new ConnectionInfo(targetMachine, username, authentication), targetCommand, callTimeout, connectTimeout)
                mreturn ActivatorUtilities.CreateInstance<T>(provider, callConnection)
            end

            mreturn makeInstance
        endmethod

    endclass

    public enum RemoteTargetOS
        Windows,
        Linux,
        Unix,
        VMS
    endenum

endnamespace
